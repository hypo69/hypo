Как использовать этот блок кода для создания и заполнения Google таблиц с помощью API v4
=================================================================================================

Описание
-------------------------
Этот код демонстрирует, как использовать Google Sheets API v4 для создания, настройки и заполнения Google таблиц.  Он включает создание сервисного аккаунта, установку необходимых библиотек, а также демонстрирует методы для задания ширины столбцов, объединения ячеек, форматирования, и заполнения данных в таблицу.  Код содержит подробные примеры и объяснения.  Он также демонстрирует класс Spreadsheet для удобного взаимодействия с API.

Шаги выполнения
-------------------------
1. **Установка необходимых библиотек:**
   - Установите библиотеку `google-api-python-client` с помощью pip:
     ```bash
     pip install --upgrade google-api-python-client
     ```
   - Эта команда автоматически установит необходимые зависимости, такие как `oauth2client` и другие.

2. **Создание сервисного аккаунта:**
   - В Google Developers Console создайте проект и включите необходимые API: Drive API и Sheets API.
   - Создайте учетные данные для сервисного аккаунта и сохраните закрытый ключ в файл (например, `test-proj-for-habr-article-1ab131d98a6b.json`).

3. **Импорт необходимых библиотек:**
   - Импортируйте необходимые библиотеки: `httplib2`, `apiclient.discovery`, `ServiceAccountCredentials`.

4. **Авторизация и создание service-объекта:**
   - Используйте `ServiceAccountCredentials` для загрузки закрытого ключа и создания объекта авторизации `httpAuth`.
   - Создайте объект `service` для взаимодействия с Google Sheets API.

5. **Создание Google таблицы (spreadsheet):**
   - Используйте метод `service.spreadsheets().create()`, чтобы создать новую таблицу.
     - Передайте `body` с настройками, например, `title` и `locale` для локализации.  Важно также задать `sheets` с настройками `sheetId`, `sheetType` и `gridProperties` для размера таблицы (строки и столбцы).

6. **Назначение доступа к новой таблице:**
   - Используйте Google Drive API для предоставления доступа к таблице сервисному аккаунту. Используйте метод `driveService.permissions().create()`  для назначения прав доступа (`reader` или `writer`) конкретным пользователям или группам.

7. **Задать ширину столбцов:**
   - Используйте метод `spreadsheets.batchUpdate()`, чтобы задать ширину столбцов.
   - В `requests` добавьте `updateDimensionProperties` с параметрами `range`, `properties` (включая `pixelSize`) и `fields`.  Важно использовать корректные `startIndex` и `endIndex`.

8. **Заполнение ячеек данных:**
   - Используйте метод `spreadsheets.values.batchUpdate()`, чтобы заполнить ячейки.
   - В `data` добавьте `range` (в формате A1-нотации, например, "A1:B2"), `majorDimension` (обычно "ROWS") и `values`.
   - Для формул в ячейках используйте `USER_ENTERED` в `valueInputOption`.


9. **Другие настройки (объединение ячеек, форматирование и т.д.):**
   - Используйте другие запросы `request` в `spreadsheets.batchUpdate` для объединения ячеек, форматирования текста, изменения цвета фона и границ.
     -  Для каждого типа запроса (объединение, форматирование) посмотрите соответствующий метод `prepare_*` в классе `Spreadsheet`.


10. **Использование класса `Spreadsheet` (рекомендуется):**
    - Этот класс-обёртка (Spreadsheet) значительно упрощает взаимодействие с API, скрывая детали низкоуровневых запросов.
    - Методы `prepare_*` (например, `prepare_setColumnWidth`, `prepare_setValues`, `prepare_mergeCells`) подготавливают запросы, которые затем объединяются в `batchUpdate`.
    - Метод `runPrepared` выполняет подготовленные запросы.

**Пример использования (фрагмент):**
```python
import httplib2
import apiclient.discovery
from oauth2client.service_account import ServiceAccountCredentials
# ... (ваш код для импорта и инициализации Spreadsheet класса)

ss = Spreadsheet(service, spreadsheet_id, sheet_id, sheet_title)

ss.prepare_setColumnWidth(0, 317)
ss.prepare_setColumnWidth(1, 200)
ss.prepare_setValues("A1:B2", [["Значение 1", "Значение 2"], ["Значение 3", "Значение 4"]])
ss.runPrepared()
```

**Важно:**  Замените `'test-proj-for-habr-article-1ab131d98a6b.json'` на фактический путь к файлу с закрытым ключом сервисного аккаунта.  Обратите внимание на правильное использование `sheetId` и `spreadsheetId` в вашем коде.  Подробное руководство и примеры использования класса `Spreadsheet` доступны по ссылке в коде.


Пример использования класса `Spreadsheet`:


```python
# ... ваш код инициализации
ss.prepare_setColumnWidth(0, 100)
ss.prepare_setValues("A1:B2", [["Value 1", "Value 2"], ["Value 3", "Value 4"]])
ss.runPrepared()


```


```
```
```
```
```
```
```
```


```

```
```
```
```