Как использовать класс OpenAI
========================================================================================

Описание
-------------------------
Этот код определяет класс `OpenAI`, который предоставляет методы для взаимодействия с API OpenAI.  Класс содержит методы для создания чат-ботов с использованием модели gpt-3.5-turbo и для транскрипции аудио с помощью модели whisper-1.  Класс инициализируется с ключом API OpenAI и использует библиотеку `openai` для взаимодействия с API.

Шаги выполнения
-------------------------
1. **Импортирование необходимых модулей**: Модули `Configuration`, `OpenAIApi` из библиотеки `openai`, `config` для получения ключа API и `createReadStream` из `fs` для работы с файлами.

2. **Определение класса `OpenAI`**: Определяется класс `OpenAI`, который содержит константы для ролей (`ASSISTANT`, `USER`, `SYSTEM`).

3. **Инициализация `OpenAI`**: В конструкторе класса происходит инициализация объекта `openai` с помощью предоставленного API-ключа и конфигурации.

4. **Метод `chat`**: Метод `chat` принимает массив сообщений (`messages`) и вызывает метод `createChatCompletion` API OpenAI с моделью `gpt-3.5-turbo`.  Возвращает ответ чат-бота (объект `message`). Обрабатывает возможные ошибки.

5. **Метод `transcription`**: Метод `transcription` принимает путь к аудиофайлу (`filepath`). Использует `createReadStream` для обработки файла как потока, отправляет его API OpenAI для транскрипции с помощью модели `whisper-1`.  Возвращает транскрибированный текст.  Обрабатывает возможные ошибки.

6. **Экспорт объекта `openai`**:  Создаётся объект `openai` класса `OpenAI`, используя ключ API из файла конфигурации `config`. Данный объект экспортируется, что позволяет использовать его в других частях приложения.

Пример использования
-------------------------
.. code-block:: javascript
    
    import { openai } from './openai';

    // Создание массива сообщений для чат-бота
    const messages = [
        { role: 'user', content: 'Привет!' },
    ];

    // Вызов метода chat
    openai.chat(messages)
        .then(response => {
            console.log(response.content); // Вывод ответа чат-бота
        })
        .catch(error => {
            console.error('Ошибка:', error);
        });

    // Пример использования для транскрипции
    const filePath = './audio.wav'; // Путь к аудиофайлу
    openai.transcription(filePath)
        .then(transcription => {
            console.log('Транскрипция:', transcription);
        })
        .catch(error => {
            console.error('Ошибка при транскрипции:', error);
        });