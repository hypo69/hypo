Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root()`, которая находит корневую директорию проекта, начиная с текущей директории файла.  Функция ищет директории, содержащие определённые маркерные файлы (например, `pyproject.toml`, `requirements.txt`, `.git`) и возвращает путь к найденной корневой директории. Если корневой каталог не найден, возвращается директория, где находится текущий файл.  Код также загружает настройки проекта из файла `settings.json` и, при необходимости,  чтение содержимого файла README.md.  Наконец, он устанавливает различные переменные, такие как имя проекта, версию, описание и прочую информацию, которые могут быть использованы другими частями проекта.

Шаги выполнения
-------------------------
1. **Инициализация**: Импортирует необходимые модули: `sys`, `json`, `pathlib`, `packaging.version`.
2. **Определение функции `set_project_root`**:  Определяет функцию, которая принимает кортеж `marker_files` с именами файлов для поиска.
3. **Поиск корневой директории**: Начинает поиск корневой директории, начиная с текущей директории файла и идя вверх по дереву директорий.  Проверяет наличие указанных файлов в каждой родительской директории. Если какой-то маркерный файл найден, то путь к родительской директории сохраняется как корневая директория и цикл прерывается.
4. **Добавление корневой директории в `sys.path`**: Добавляет найденную корневую директорию в переменную `sys.path` для корректной импорта модулей из корневой директории.
5. **Возврат корневой директории**: Возвращает найденную корневую директорию.
6. **Получение настроек**: Получает настройки проекта из файла `settings.json` в директории проекта. Используется try-except блок для обработки ошибок (отсутствует файл, ошибка парсинга).
7. **Получение документации**: Читает содержимое файла `README.md` в директории проекта и сохраняет его в переменной `doc_str`. Обработка ошибок аналогично предыдущему шагу.
8. **Установка переменных**: Устанавливает переменные `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__` на основе полученных данных из файла настроек. Если какой-либо параметр не найден, устанавливается значение по умолчанию.


Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.endpoints.prestashop.api.header import set_project_root

    # Находим корневую директорию проекта
    project_root = set_project_root()

    # Выводим имя проекта
    print(f"Имя проекта: {__project_name__}")

    # Выводим версию проекта
    print(f"Версия проекта: {__version__}")