Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет обработчики сообщений для расширения браузера, управляющего отображением и взаимодействием с результатами поиска по XPath.  Он загружает стили, сохраняет и восстанавливает состояние всплывающего окна, обрабатывает запросы об отображении результатов и обновляет CSS в открытых вкладках.

Шаги выполнения
-------------------------
1. **Инициализация переменных:** Создает алиасы для `tryxpath` и его функций, инициализирует `popupState`, `popupCss`, `results`, `css` и `attributes`.  `attributes` содержит данные для атрибутов элементов.

2. **Загрузка стилей:** Функция `loadDefaultCss` загружает стили из файла `try_xpath_insert.css`. Она использует `XMLHttpRequest` для асинхронного запроса файла по указанному пути.

3. **Обработчики сообщений (genericListener):** Функция `genericListener` является центральным обработчиком сообщений, перенаправляющим их к соответствующим обработчикам (`listeners`).

4. **Обработчики событий (genericListener.listeners):**  Различные обработчики (`listeners`) реагируют на различные типы сообщений:
    - `storePopupState`: Сохраняет состояние всплывающего окна.
    - `requestRestorePopupState`: Восстанавливает состояние всплывающего окна.
    - `requestInsertStyleToPopup`: Вставляет CSS в всплывающее окно.
    - `showAllResults`: Сохраняет результаты поиска и открывает новую вкладку для их отображения.
    - `loadResults`: Возвращает результаты поиска в ответ на запрос.
    - `updateCss`: Обновляет CSS в открытых вкладках.  Включает удаление устаревших стилей и добавление новых. Использует `browser.tabs.removeCSS` и `browser.tabs.insertCSS`.
    - `loadOptions`: Возвращает атрибуты, CSS и стили всплывающего окна.
    - `requestSetContentInfo`: Устанавливает информацию об атрибутах для отображения.

5. **Обработка изменений в хранилище:** Функция `browser.storage.onChanged.addListener` реагирует на изменения в хранилище (локальные настройки) и обновляет глобальные переменные `attributes`, `css` и `popupCss`.

6. **Загрузка настроек из хранилища:** Функция `browser.storage.sync.get` загружает настройки (`attributes`, `css`, `popupCss`) из хранилища `browser.storage.sync`. Если `css` не задан, загружает стили по умолчанию из `loadDefaultCss()`.

7. **Обработка ошибок:**  Использует `catch(fu.onError)` для обработки потенциальных ошибок при выполнении операций.


Пример использования
-------------------------
.. code-block:: javascript

    // В коде другого скрипта расширения:
    browser.runtime.sendMessage({
        "event": "updateCss",
        "expiredCssSet": {
            "css1": true,
            "css2": true
        },
        "newCss": "body { color: red; }"
    });

    // Обработка ответа от `genericListener.listeners.updateCss`