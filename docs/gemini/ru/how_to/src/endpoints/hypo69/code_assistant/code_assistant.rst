Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код представляет собой класс `CodeAssistant`, предназначенный для работы ассистента программиста с моделями ИИ.  Класс читает файлы кода, отправляет их в модель (например, Gemini), обрабатывает полученные данные и сохраняет результат в директории `docs/gemini`.  Класс обрабатывает файлы, учитывая заданную роль и язык, а также использует конфигурацию из файла `code_assistant.json`.

Шаги выполнения
-------------------------
1. **Инициализация класса `CodeAssistant`:**  Класс создается с параметрами `role`, `lang` и `model`. `role` определяет, что должно делать с кодом (например, проверка, написание документации). `lang` задает язык. `model` указывает используемые модели ИИ.
2. **Обработка списка файлов:** Метод `process_files` итеративно перебирает файлы, указанные в `start_dirs` (по умолчанию `..`).
3. **Создание запроса:** Для каждого файла создается запрос, содержащий роль, язык, путь к файлу, инструкцию для кода и содержимое файла.
4. **Отправка запроса в модель:** Запрос отправляется выбранной модели ИИ.
5. **Обработка ответа:** Если ответ модели успешный, он обрабатывается (`_remove_outer_quotes`) и сохраняется в файле (`_save_response`). Если ответ не успешный, выводится ошибка.
6. **Сохранение ответа:**  Результат работы модели сохраняется в формате, соответствующем заданной роли (`.md`, `.rst`, `.html`) в поддиректориях `docs/gemini`.
7. **Циклическая обработка:** Процесс обработки повторяется для всех файлов.


Пример использования
-------------------------
.. code-block:: python

    import sys
    from pathlib import Path
    from src.endpoints.hypo69.code_assistant.assistant import CodeAssistant


    # Настройка параметров
    role = 'doc_writer_rst'
    lang = 'ru'

    # Запуск ассистента
    try:
        assistant = CodeAssistant(role=role, lang=lang, model=['gemini'])
        assistant.process_files()
        sys.exit(0)
    except Exception as e:
        print(f"Ошибка: {e}")