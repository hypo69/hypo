"""
HI LO:
=================
קושי: 2
-----------------
המשחק "גבוה או נמוך" הוא משחק ניחושים בו המחשב בוחר מספר אקראי בטווח מ-1 עד 100, והשחקן צריך לנחש אותו תוך קבלת רמזים "גבוה מדי" או "נמוך מדי" עד שהוא מנחש נכון.

חוקי המשחק:
1. המחשב בוחר מספר אקראי בטווח בין 1 ל-100.
2. השחקן מנסה לנחש את המספר, ומקבל רמז אם הניחוש שלו גבוה או נמוך מהמספר האמיתי.
3. המשחק ממשיך עד שהשחקן מנחש נכון את המספר.
-----------------
אלגוריתם:
1. אתחל את מספר הניסיונות ל-0.
2. הגרל מספר אקראי בין 1 ל-100.
3. התחל לולאה (כל עוד המספר לא נוחש):
    3.1 הגדל את מספר הניסיונות ב-1.
    3.2 קלוט ניחוש מהשחקן.
    3.3 אם הניחוש שווה למספר המוגרל:
        3.3.1 הצג הודעת ניצחון וסיים את המשחק.
    3.4 אחרת (אם הניחוש אינו שווה למספר המוגרל):
        3.4.1 אם הניחוש קטן מהמספר המוגרל:
            3.4.1.1 הצג הודעה "TOO LOW".
        3.4.2 אחרת (אם הניחוש גדול מהמספר המוגרל):
            3.4.2.1 הצג הודעה "TOO HIGH".
-----------------
תרשים זרימה:
```mermaid
flowchart TD
    Start["התחלה"] --> InitializeVariables["<p align='left'>אתחול משתנים:
    <code><b>
    numberOfGuesses = 0
    targetNumber = random(1, 100)
    </b></code></p>"]
    InitializeVariables --> LoopStart{"תחילת לולאה: כל עוד לא נוחש"}
    LoopStart -- כן --> IncreaseGuesses["<code><b>numberOfGuesses = numberOfGuesses + 1</b></code>"]
    IncreaseGuesses --> InputGuess["קלט מספר מהמשתמש: <code><b>userGuess</b></code>"]
    InputGuess --> CheckGuess{"בדיקה: <code><b>userGuess == targetNumber?</b></code>"}
    CheckGuess -- כן --> OutputWin["הצגת הודעה: <b>YOU GOT IT IN <code>{numberOfGuesses}</code> GUESSES!</b>"]
    OutputWin --> End["סוף"]
    CheckGuess -- לא --> CheckLow{"בדיקה: <code><b>userGuess < targetNumber</b></code>?"}
    CheckLow -- כן --> OutputLow["הצגת הודעה: <b>TOO LOW</b>"]
    OutputLow --> LoopStart
    CheckLow -- לא --> OutputHigh["הצגת הודעה: <b>TOO HIGH</b>"]
    OutputHigh --> LoopStart
    LoopStart -- לא --> End
```
Legenda:
    Start - התחלת המשחק.
    InitializeVariables - אתחול משתנים: numberOfGuesses (מספר הניסיונות) מתחיל מ-0, ו-targetNumber (המספר שיש לנחש) מוגרל באקראי בין 1 ל-100.
    LoopStart - התחלת לולאה, שתמשיך עד שהמשתמש ינחש את המספר.
    IncreaseGuesses - הגדלת מונה מספר הניסיונות ב-1 בכל ניסיון ניחוש.
    InputGuess - קבלת קלט מהמשתמש (ניחוש) ושמירה במשתנה userGuess.
    CheckGuess - בדיקה האם הניחוש שווה למספר שיש לנחש.
    OutputWin - הצגת הודעה שהמשתמש ניצח, כולל מספר הניסיונות, וסיום המשחק.
    End - סיום המשחק.
    CheckLow - בדיקה האם הניחוש נמוך מהמספר שיש לנחש.
    OutputLow - הצגת הודעה שהניחוש נמוך מדי וחזרה ללולאה.
    OutputHigh - הצגת הודעה שהניחוש גבוה מדי וחזרה ללולאה.
"""
import random

# אתחול מונה הניסיונות
numberOfGuesses = 0
# בחירת מספר אקראי בין 1 ל-100
targetNumber = random.randint(1, 100)

# לולאת המשחק - רצה עד שהמספר ינוחש
while True:
    # הגדלת מונה הניסיונות
    numberOfGuesses += 1
    
    # קבלת קלט מהמשתמש
    try:
      userGuess = int(input("נסה לנחש את המספר (1-100): "))
    except ValueError:
        print("קלט לא תקין. אנא הזן מספר שלם.")
        continue

    # בדיקה האם הניחוש נכון
    if userGuess == targetNumber:
        print(f"כל הכבוד! ניחשת את המספר ב-{numberOfGuesses} ניסיונות!")
        break  # סיום הלולאה
    
    # מתן רמז: האם הניחוש נמוך מדי או גבוה מדי
    elif userGuess < targetNumber:
        print("נמוך מדי!")
    else:
        print("גבוה מדי!")

"""
הסבר מפורט לקוד:
1.  **ייבוא מודול `random`**:
    - `import random`: מייבא את המודול `random` שיעזור לנו ליצור מספר אקראי.

2.  **אתחול משתנים**:
    - `numberOfGuesses = 0`: מאתחל משתנה לספירת ניסיונות הניחוש למספר אפס.
    - `targetNumber = random.randint(1, 100)`: בוחר מספר שלם אקראי בין 1 ל-100 ושומר אותו במשתנה `targetNumber`. זה המספר שהמשתמש יצטרך לנחש.

3.  **לולאת המשחק `while True:`**:
    - `while True:`: יוצר לולאה אינסופית, שתמשיך עד שהמשתמש ינחש נכון את המספר והלולאה תסתיים באמצעות `break`.
    - `numberOfGuesses += 1`: מגדיל את מספר הניסיונות ב-1 בכל סיבוב של הלולאה.

4.  **קבלת קלט מהמשתמש**:
    - `try...except ValueError`: בלוק try-except המטפל בשגיאות קלט אפשריות. אם המשתמש מזין משהו שאינו מספר שלם, יוצג הודעה מתאימה והלולאה תמשיך לסיבוב הבא.
    - `userGuess = int(input("נסה לנחש את המספר (1-100): "))`: מבקש מהמשתמש להזין ניחוש וממיר אותו למספר שלם ושומר אותו במשתנה `userGuess`.

5.  **בדיקת ניצחון**:
    - `if userGuess == targetNumber:`: בודק האם הניחוש של המשתמש שווה למספר המוגרל.
    - `print(f"כל הכבוד! ניחשת את המספר ב-{numberOfGuesses} ניסיונות!")`: אם הניחוש נכון, מוצגת הודעה עם מספר הניסיונות.
    - `break`: מפסיק את הלולאה והמשחק נגמר.

6.  **מתן רמז**:
    - `elif userGuess < targetNumber:`: אם הניחוש לא נכון, בודק אם הוא קטן מהמספר המוגרל.
    - `print("נמוך מדי!")`: אם הניחוש קטן מדי, מודפסת הודעה.
    - `else:`: אם הניחוש לא נכון ולא נמוך מדי, הוא בהכרח גדול מהמספר המוגרל.
    - `print("גבוה מדי!")`: מודפסת הודעה שהניחוש גבוה מדי.

הקוד בנוי בצורה פשוטה וברורה, עם הערות בעברית המסבירות כל שלב, כדי שיהיה קל להבנה למתחילים.
"""
