Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код предоставляет класс `ReachSpreadsheet` для работы с Google Sheets API v4.  Он позволяет создавать новые таблицы, добавлять листы, форматировать ячейки, устанавливать ширину столбцов и высоту строк, разделять таблицы с другими пользователями и получать URL таблицы. Код включает методы для подготовки и выполнения операций в Google Sheets, обрабатывает ошибки и предоставляет тестовые функции для проверки работоспособности.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:**  Код импортирует `httplib2`, `googleapiclient`, `oauth2client`, `tempfile`,  `header`, `gs`, `utils` и `logger` из различных модулей. Эти библиотеки необходимы для аутентификации, взаимодействия с API Google Sheets и работы с файлами.

2. **Определение класса `SpreadsheetError` и его подклассов:** Определяются классы ошибок для обработки исключительных ситуаций, таких как отсутствие установленной таблицы или листа.

3. **Инициализация класса `ReachSpreadsheet`:**  Конструктор `__init__` класса `ReachSpreadsheet` загружает данные из файла ключей (`jsonKeyFileName`) для создания учетных данных (`credentials`) доступа к Google Sheets API.  Создаёт экземпляры `httpAuth` и `service` для аутентификации и работы с API.

4. **Создание новой таблицы (`create`):** Метод `create` создаёт новую таблицу в Google Sheets с заданным названием (`title`) и названием листа (`sheetTitle`). Также задаёт количество строк (`rows`) и столбцов (`cols`), локаль (`locale`) и часовой пояс (`timeZone`).  Метод сохраняет идентификатор созданной таблицы (`spreadsheetId`), идентификатор листа (`sheetId`), и название листа (`sheetTitle`) в объекте класса `ReachSpreadsheet`.

5. **Разделение таблицы с другими пользователями (`share`):** Метод `share`  разделяет таблицу с другими пользователями, используя `driveService`.  Он принимает `shareRequestBody` – словарь с параметрами доступа (роль, тип пользователя, адрес электронной почты).

6. **Разделение таблицы с пользователем по электронной почте для чтения (`shareWithEmailForReading`):** Этот метод является специализированным методом для разделения доступа к чтению таблицы.

7. **Разделение таблицы с пользователем по электронной почте для записи (`shareWithEmailForWriting`):** Этот метод является специализированным методом для разделения доступа к записи таблицы.

8. **Разделение таблицы со всеми для чтения (`shareWithAnybodyForReading`):** Этот метод разделяет таблицу с любым пользователем для чтения.

9. **Разделение таблицы со всеми для записи (`shareWithAnybodyForWriting`):** Этот метод разделяет таблицу с любым пользователем для записи.

10. **Получение URL таблицы (`getSheetURL`):** Этот метод возвращает URL таблицы в Google Sheets, используя `spreadsheetId` и `sheetId`.

11. **Установка текущей таблицы по идентификатору (`setSpreadsheetById`):** Метод устанавливает текущую таблицу по её идентификатору (`spreadsheetId`).

12. **Выполнение подготовленных операций (`runPrepared`):**  Метод `runPrepared` выполняет все подготовленные операции обновления таблицы.  Это включает обновление данных, изменение свойств размеров,  и других параметров.

13. **Подготовка операции добавления листа (`prepare_addSheet`):** Метод `prepare_addSheet` подготавливает операцию добавления нового листа в таблицу, сохраняя её в `requests`.

14. **Добавление нового листа (`addSheet`):** Метод `addSheet` добавляет новый лист с заданным названием (`sheetTitle`) и размерами.

15. **Преобразование диапазона ячеек в `GridRange` (`toGridRange`):** Метод преобразует строковый диапазон ячеек (например, "A1:B2") в `GridRange` для использования в API Google Sheets.

16. **Подготовка изменения размеров ячеек (`prepare_setDimensionPixelSize`):** Метод `prepare_setDimensionPixelSize` подготавливает операцию изменения ширины или высоты столбцов/строк в Google Sheets.

17. **Подготовка изменения ширины столбцов (`prepare_setColumnsWidth`, `prepare_setColumnWidth`):** Эти методы подготавливают операции изменения ширины столбцов.

18. **Подготовка изменения высоты строк (`prepare_setRowsHeight`, `prepare_setRowHeight`):** Эти методы подготавливают операции изменения высоты строк.

19. **Подготовка установки значений ячеек (`prepare_setValues`):** Метод `prepare_setValues` подготавливает операцию заполнения диапазона ячеек значениями.

20. **Подготовка объединения ячеек (`prepare_mergeCells`):** Метод `prepare_mergeCells` подготавливает операцию объединения ячеек.

21. **Подготовка форматирования ячеек (`prepare_setCellStringFormatterormat`, `prepare_setCellStringFormatterormats`):** Эти методы подготавливают операции форматирования ячеек (цвет, шрифт, выравнивание и т.д.).

22. **Функции тестирования:**  Тестовые функции (`testCreateSpreadsheet`, `testSetSpreadsheet`, и т.д.) демонстрируют примеры использования класса `ReachSpreadsheet`.

Пример использования
-------------------------
.. code-block:: python

    import gs  # предполагается, что модуль gs уже импортирован
    from hypotez.src.goog.spreadsheet.reach_spreadsheet import Spreadsheet

    # Создаём экземпляр класса
    spreadsheet_obj = Spreadsheet(debugMode=True)

    # Создаём новую таблицу
    spreadsheet_obj.create("Моя таблица", "Лист1", rows=10, cols=5)

    # Получаем URL созданной таблицы
    url = spreadsheet_obj.getSheetURL()
    print(url)

    # Делаем некоторые форматирования (например)
    spreadsheet_obj.prepare_setColumnWidth(0, 200)
    spreadsheet_obj.prepare_setRowHeight(0, 30)

    # Выполняем подготовленные действия
    spreadsheet_obj.runPrepared()