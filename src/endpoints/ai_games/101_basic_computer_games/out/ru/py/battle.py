"""
<BATTLE>:
=================
Сложность: 5
-----------------
Игра "Битва" - это игра, в которой игрок сражается с компьютером, обмениваясь "выстрелами" по "кораблю" противника, представленному случайным числом. 
Игрок и компьютер поочередно "стреляют" в случайные числа, и проигрывает тот, кто первым "попадет" в "корабль" противника.

Правила игры:
1. Компьютер выбирает случайное целое число от 1 до 100, которое будет "кораблем" игрока.
2. Игрок начинает игру, "стреляя" случайным числом от 1 до 100.
3. Компьютер "стреляет" случайным числом от 1 до 100.
4. Если игрок "попадает" в "корабль" компьютера, то он проигрывает.
5. Если компьютер "попадает" в "корабль" игрока, то игрок выигрывает.
6. Игра продолжается до тех пор, пока один из игроков не "попадет" в "корабль" противника.
-----------------
Алгоритм:
1. Сгенерировать случайное число от 1 до 100 и присвоить его переменной "корабль игрока".
2. Начать цикл "пока не закончилась игра":
3. Сгенерировать случайное число от 1 до 100 и присвоить его переменной "выстрел игрока".
4. Если "выстрел игрока" равен "кораблю компьютера", то вывести сообщение "YOU BLEW IT UP" и закончить игру.
5. Сгенерировать случайное число от 1 до 100 и присвоить его переменной "выстрел компьютера".
6. Если "выстрел компьютера" равен "кораблю игрока", то вывести сообщение "I GOT YOU" и закончить игру.
7. Перейти к шагу 2.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeShip["Инициализация: <code><b>playerShip = random(1, 100)</b></code>"]
    InitializeShip --> GameLoopStart{"Начало игрового цикла"}
    GameLoopStart --> PlayerShoot["Игрок стреляет: <code><b>playerShot = random(1, 100)</b></code>"]
    PlayerShoot --> CheckPlayerHit{"Проверка: <code><b>playerShot == computerShip?</b></code>"}
    CheckPlayerHit -- Да --> OutputPlayerLose["Вывод: <b>YOU BLEW IT UP</b>"]
    OutputPlayerLose --> End["Конец"]
    CheckPlayerHit -- Нет --> ComputerShoot["Компьютер стреляет: <code><b>computerShot = random(1, 100)</b></code>"]
    ComputerShoot --> CheckComputerHit{"Проверка: <code><b>computerShot == playerShip?</b></code>"}
    CheckComputerHit -- Да --> OutputComputerWin["Вывод: <b>I GOT YOU</b>"]
    OutputComputerWin --> End
    CheckComputerHit -- Нет --> GameLoopStart
    GameLoopStart -- Нет --> End

```
Legenda:
    Start - Начало программы.
    InitializeShip - Инициализация корабля игрока: генерируется случайное число от 1 до 100, которое является "кораблем" игрока.
    GameLoopStart - Начало цикла игры, который продолжается, пока не будет попадания.
    PlayerShoot - Игрок "стреляет": генерируется случайное число от 1 до 100, которое является "выстрелом" игрока.
    CheckPlayerHit - Проверка: "выстрел" игрока совпал с "кораблем" компьютера?
    OutputPlayerLose - Вывод сообщения о проигрыше игрока.
    End - Конец программы.
    ComputerShoot - Компьютер "стреляет": генерируется случайное число от 1 до 100, которое является "выстрелом" компьютера.
    CheckComputerHit - Проверка: "выстрел" компьютера совпал с "кораблем" игрока?
    OutputComputerWin - Вывод сообщения о выигрыше компьютера.
"""
import random

__author__ = 'hypo69 (hypo69@davidka.net)'

# Генерируем случайное число для "корабля" игрока
playerShip = random.randint(1, 100)

# Игровой цикл
while True:
    # Игрок "стреляет" случайным числом
    playerShot = random.randint(1, 100)
    print(f"Игрок стреляет в {playerShot}")
    # Проверка, попал ли игрок в "корабль" компьютера
    #  в этой версии игры у компьютера нет корабля, выигрыш происходит, когда игрок попадает в корабль, который сгенерирован ранее
    if playerShot == playerShip:
        print("YOU BLEW IT UP")
        break  # Завершаем игру, если игрок проиграл

    # Компьютер "стреляет" случайным числом
    computerShot = random.randint(1, 100)
    print(f"Компьютер стреляет в {computerShot}")
    # Проверка, попал ли компьютер в "корабль" игрока
    if computerShot == playerShip:
        print("I GOT YOU")
        break  # Завершаем игру, если компьютер выиграл

"""
Пояснения:
1.  **Импорт модуля `random`**:
    - `import random`: Импортирует модуль `random`, который используется для генерации случайных чисел.
2.  **Инициализация корабля игрока**:
    - `playerShip = random.randint(1, 100)`: Генерирует случайное целое число от 1 до 100, которое представляет собой "корабль" игрока.
3.  **Основной цикл `while True:`**:
    - Бесконечный цикл, который продолжается, пока не будет "попадания" и игра не завершится.
4.  **Ход игрока**:
    - `playerShot = random.randint(1, 100)`: Генерирует случайное число от 1 до 100, представляющее собой "выстрел" игрока.
    - `print(f"Игрок стреляет в {playerShot}")`: Выводит сообщение о том, куда "стреляет" игрок.
    - `if playerShot == playerShip:`: Проверяет, "попал" ли игрок в свой "корабль" (в оригинальной игре - корабль противника).
    - `print("YOU BLEW IT UP")`: Выводит сообщение о том, что игрок проиграл (попал в свой "корабль").
    - `break`: Завершает игру.
5. **Ход компьютера**:
    - `computerShot = random.randint(1, 100)`: Генерирует случайное число от 1 до 100, представляющее собой "выстрел" компьютера.
    - `print(f"Компьютер стреляет в {computerShot}")`: Выводит сообщение о том, куда "стреляет" компьютер.
    - `if computerShot == playerShip:`: Проверяет, "попал" ли компьютер в "корабль" игрока.
    - `print("I GOT YOU")`: Выводит сообщение о том, что компьютер выиграл.
    - `break`: Завершает игру.
6. **Завершение игры:**
    - Игра завершается командой `break` после того, как один из игроков "попадает" в "корабль" противника.
"""