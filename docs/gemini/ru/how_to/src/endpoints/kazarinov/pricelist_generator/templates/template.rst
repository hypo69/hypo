Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот блок кода представляет собой шаблон HTML для генерации страницы с ценами на продукты.  Он выводит список продуктов, включая изображение, название, описание и технические характеристики каждого продукта.  Также выводится общая стоимость всех продуктов. Шаблон использует шаблонизатор, например Jinja2, для динамического заполнения данных (заголовки, описания, изображения, цены).


Шаги выполнения
-------------------------
1. **Подключение шаблонизатора:**  Необходим шаблонизатор (например, Jinja2), который будет обрабатывать переменные `{{ ... }}` в шаблоне.

2. **Передача данных:**  В шаблон передаются данные о продуктах. Данные о каждом продукте должны быть в виде словаря, включающего `image_local_saved_path`, `product_title`, `product_description`, `specification`, и предположительно `price`.  Переменная `products` должна быть списком таких словарей.  Также необходимо передать переменные `title`, `description`, `price`, `currency`.

3. **Обработка шаблона:** Шаблонизатор обрабатывает шаблон HTML, подставляя значения переданных переменных в места `{{ ... }}`.

4. **Вывод результата:**  Результат (отрендеренный HTML) выводится в браузер.


Пример использования
-------------------------
.. code-block:: python

    # Пример использования с Jinja2
    from jinja2 import Environment, FileSystemLoader
    import os

    # Предполагается, что у вас есть данные о продуктах
    products = [
        {'image_local_saved_path': 'product1.jpg', 'product_title': 'Продукт 1', 'product_description': 'Описание продукта 1', 'specification': 'Спецификация продукта 1', 'price': 100},
        {'image_local_saved_path': 'product2.jpg', 'product_title': 'Продукт 2', 'product_description': 'Описание продукта 2', 'specification': 'Спецификация продукта 2', 'price': 150}
    ]

    # Создаем окружение Jinja2
    env = Environment(loader=FileSystemLoader(os.getcwd()))
    template = env.get_template('template.html')

    # Переменные для заполнения
    context = {
        'products': products,
        'title': 'Список цен',
        'description': 'Список предлагаемых товаров',
        'price': 250,
        'currency': 'рублей'
    }

    # Отрендериваем шаблон с данными
    rendered_html = template.render(context)

    # Далее выводим rendered_html куда-то, например в файл или в response веб-приложения
    print(rendered_html)