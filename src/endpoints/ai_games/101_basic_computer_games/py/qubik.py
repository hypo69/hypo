"""
QUBIK:
=================
Сложность: 6
-----------------
Игра "Кубик" представляет собой игру, в которой компьютер имитирует бросание двух кубиков и выводит сумму выпавших значений. Игрок не участвует активно в процессе, а просто наблюдает за результатом броска кубиков.

Правила игры:
1. Компьютер генерирует случайное число от 1 до 6 для первого кубика.
2. Компьютер генерирует случайное число от 1 до 6 для второго кубика.
3. Выводится сумма значений двух кубиков.
4. Игра завершается.

-----------------
Алгоритм:
1. Сгенерировать случайное целое число от 1 до 6 и сохранить его как `dice1`.
2. Сгенерировать случайное целое число от 1 до 6 и сохранить его как `dice2`.
3. Вычислить сумму `dice1` и `dice2`, сохранить как `sumOfDices`.
4. Вывести сообщение "TOTAL IS {sumOfDices}" на экран.
5. Конец игры.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeDice1["<p align='left'>Генерировать случайное число:
    <code><b>
    dice1 = random(1, 6)
    </b></code></p>"]
    InitializeDice1 --> InitializeDice2["<p align='left'>Генерировать случайное число:
    <code><b>
    dice2 = random(1, 6)
    </b></code></p>"]
    InitializeDice2 --> CalculateSum["<code><b>sumOfDices = dice1 + dice2</b></code>"]
    CalculateSum --> OutputSum["Вывод сообщения: <b>TOTAL IS <code>{sumOfDices}</code></b>"]
    OutputSum --> End["Конец"]
```

Legenda:
    Start - Начало программы.
    InitializeDice1 - Генерируется случайное целое число от 1 до 6 и сохраняется в переменную dice1, имитируя бросок первого кубика.
    InitializeDice2 - Генерируется случайное целое число от 1 до 6 и сохраняется в переменную dice2, имитируя бросок второго кубика.
    CalculateSum - Вычисляется сумма значений переменных dice1 и dice2, результат сохраняется в переменной sumOfDices.
    OutputSum - Выводится сообщение "TOTAL IS {sumOfDices}" на экран, где {sumOfDices} — значение суммы бросков кубиков.
    End - Конец программы.
"""
import random

# Генерируем случайное число от 1 до 6 для первого кубика
dice1 = random.randint(1, 6)
# Генерируем случайное число от 1 до 6 для второго кубика
dice2 = random.randint(1, 6)

# Вычисляем сумму значений двух кубиков
sumOfDices = dice1 + dice2

# Выводим результат на экран
print(f"TOTAL IS {sumOfDices}")

"""
Пояснения:
1.  **Импорт модуля `random`**:
    - `import random`: Импортирует модуль `random`, который используется для генерации случайных чисел.
2.  **Генерация случайных чисел для кубиков**:
    - `dice1 = random.randint(1, 6)`: Генерирует случайное целое число от 1 до 6 (включительно) и сохраняет его в переменную `dice1`, имитируя бросок первого кубика.
    -  `dice2 = random.randint(1, 6)`: Аналогично генерирует случайное целое число для второго кубика и сохраняет его в переменную `dice2`.
3.  **Вычисление суммы**:
    - `sumOfDices = dice1 + dice2`: Складывает значения `dice1` и `dice2` и сохраняет результат в переменную `sumOfDices`.
4.  **Вывод результата**:
    - `print(f"TOTAL IS {sumOfDices}")`: Выводит на экран сообщение "TOTAL IS" и значение суммы, используя f-строку для форматирования.
"""

__author__ = 'hypo69 (hypo69@davidka.net)'


"""
Пояснения:
licence:MIT(../licence)
"""
```