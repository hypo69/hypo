Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневую директорию проекта.  Он ищет директории вверх от текущей, содержащие файлы, такие как `pyproject.toml`, `requirements.txt` или `.git`, чтобы определить корень проекта.  Также код загружает настройки проекта из файла `settings.json` и документацию из `README.MD` в переменные. Если файлы не найдены, соответствующие переменные устанавливаются в значение по умолчанию.  В конце, он определяет и присваивает переменным значения соответствующих настроек или значения по умолчанию.

Шаги выполнения
-------------------------
1. **Импортирует необходимые модули:** `sys`, `json`, `pathlib`, `packaging.version`.
2. **Определяет функцию `set_project_root`:** Функция принимает кортеж `marker_files`, содержащий имена файлов, по которым будет определяться корень проекта.
3. **Находит корневую директорию проекта:** Начинает поиск от текущей директории и поднимается вверх по иерархии директорий.  Проверяет наличие файлов из `marker_files` в каждой директории.
4. **Добавляет корневую директорию в `sys.path`:** Если корневая директория не присутствует в `sys.path`, добавляет ее в начало списка `sys.path` для корректного импорта модулей.
5. **Возвращает корневую директорию:** Возвращает найденную корневую директорию проекта в формате `Path`.
6. **Получает корневую директорию проекта:** Вызывает функцию `set_project_root()` для получения корневой директории. Результат сохраняется в переменной `__root__`.
7. **Загружает настройки проекта:**  Пытается открыть файл `settings.json` в корневой директории проекта и загрузить его содержимое в виде словаря в переменную `settings`.  Если файл не найден или содержит некорректный JSON, то переменная `settings` остается `None`.
8. **Загружает документацию проекта:**  Пытается открыть файл `README.MD` в корневой директории и загрузить его содержимое в переменную `doc_str`.  Если файл не найден или содержит ошибку, `doc_str` остается `None`.
9. **Инициализирует переменные:** Определяет переменные `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__` используя значения из переменной `settings` или значения по умолчанию, если `settings` равно `None` или соответствующие ключи отсутствуют.


Пример использования
-------------------------
.. code-block:: python

    # Предположим, что у вас есть файл pyproject.toml в корне проекта.
    # Этот код находится в файле header.py
    from hypotez.src.fast_api.header import set_project_root

    # Получаем корневую директорию проекта
    root_path = set_project_root()

    # Выводим имя проекта (полученное из файла settings.json или значение по умолчанию)
    print(f"Имя проекта: {__project_name__}")

    # Выводим версию проекта (из файла settings.json или значение по умолчанию)
    print(f"Версия проекта: {__version__}")

    # Пример работы с doc_str (документацией из README.MD)
    if __doc__:
        print(f"Документация:\n{__doc__}")