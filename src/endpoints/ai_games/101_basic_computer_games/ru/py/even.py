"""
EVEN:
=================
Сложность: 2
-----------------
Игра "Четное число" - это простая игра, в которой компьютер выбирает случайное число в диапазоне от 1 до 99 и проверяет, является ли оно четным или нет. Затем компьютер спрашивает игрока, четное ли это число. Игрок отвечает 'YES' или 'NO'. В зависимости от ответа игрока компьютер сообщает, прав ли был игрок или нет. Игра продолжается до тех пор, пока игрок не надоест играть.

Правила игры:
1. Компьютер выбирает случайное целое число от 1 до 99.
2. Компьютер проверяет, является ли выбранное число четным.
3. Компьютер спрашивает игрока, является ли число четным, ожидая ответ 'YES' или 'NO'.
4. Компьютер сравнивает ответ игрока с фактическим значением и выводит соответствующее сообщение, было ли предположение игрока верным или нет.
5. Игрок может играть сколько угодно раз.
-----------------
Алгоритм:
1. Начать цикл:
    1.1 Сгенерировать случайное число от 1 до 99.
    1.2 Вычислить, является ли число четным.
    1.3 Запросить у игрока ответ 'YES' или 'NO'.
    1.4 Если ответ игрока правильный:
       1.4.1 Вывести "RIGHT".
    1.5 Иначе:
       1.5.1 Вывести "WRONG".
2. Вернуться к шагу 1.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> LoopStart{"Начало цикла"}
    LoopStart --> GenerateNumber["Сгенерировать случайное число: <code><b>randomNumber = random(1, 99)</b></code>"]
    GenerateNumber --> CheckEven["Проверить четность: <code><b>isEven = (randomNumber % 2 == 0)</b></code>"]
    CheckEven --> InputAnswer["Запросить ответ пользователя: <code><b>userAnswer</b></code> (YES/NO)"]
    InputAnswer --> CheckAnswer{"Проверить ответ: <code><b>(userAnswer == 'YES' and isEven) or (userAnswer == 'NO' and not isEven)</b></code>"}
    CheckAnswer -- Да --> OutputRight["Вывести сообщение: <b>RIGHT</b>"]
    CheckAnswer -- Нет --> OutputWrong["Вывести сообщение: <b>WRONG</b>"]
    OutputRight --> LoopStart
    OutputWrong --> LoopStart
```
    
Legenda:
    Start - Начало программы.
    LoopStart - Начало цикла, который продолжается пока пользователь не прервет игру.
    GenerateNumber - Генерация случайного числа randomNumber в диапазоне от 1 до 99.
    CheckEven - Проверка, является ли сгенерированное число четным, результат сохраняется в переменной isEven.
    InputAnswer - Запрос у пользователя ответа (YES или NO) и сохранение его в переменной userAnswer.
    CheckAnswer - Проверка, соответствует ли ответ пользователя фактической четности числа.
    OutputRight - Вывод сообщения "RIGHT", если ответ пользователя правильный.
    OutputWrong - Вывод сообщения "WRONG", если ответ пользователя неправильный.
"""

import random

while True: #бесконечный цикл
    # Генерируем случайное число от 1 до 99
    randomNumber = random.randint(1, 99)
    
    # Проверяем, является ли число четным
    isEven = randomNumber % 2 == 0
    
    # Запрашиваем ответ пользователя
    userAnswer = input(f"Число {randomNumber} четное? (YES/NO): ").upper()
    
    # Проверяем ответ пользователя
    if (userAnswer == "YES" and isEven) or (userAnswer == "NO" and not isEven):
        print("RIGHT")
    else:
        print("WRONG")
"""
Пояснения:
1. **Импорт модуля `random`**:
   -  `import random`: Импортирует модуль `random`, который используется для генерации случайного числа.

2. **Основной цикл `while True:`**:
    - Бесконечный цикл, который продолжается, пока пользователь не прервет игру.
3. **Генерация случайного числа**:
   -  `randomNumber = random.randint(1, 99)`: Генерирует случайное целое число в диапазоне от 1 до 99 и сохраняет его в `randomNumber`.
4. **Проверка четности**:
   -  `isEven = randomNumber % 2 == 0`: Проверяет, является ли `randomNumber` четным (остаток от деления на 2 равен 0) и сохраняет результат в булевой переменной `isEven`.
5. **Запрос ответа пользователя**:
   -  `userAnswer = input(f"Число {randomNumber} четное? (YES/NO): ").upper()`: Запрашивает у пользователя ответ (YES или NO), преобразует его в верхний регистр и сохраняет в `userAnswer`.
6. **Проверка ответа пользователя**:
    - `if (userAnswer == "YES" and isEven) or (userAnswer == "NO" and not isEven):`: Проверяет, соответствует ли ответ пользователя фактической четности числа. Условие истинно, если пользователь ответил "YES" и число четное, или если пользователь ответил "NO" и число нечетное.
    -  `print("RIGHT")`: Если ответ пользователя верен, выводится сообщение "RIGHT".
    - `else:`: Если ответ пользователя не верен.
    -   `print("WRONG")`: Выводится сообщение "WRONG".
"""
