Как использовать функцию get_list_products_in_category
========================================================================================

Описание
-------------------------
Функция `get_list_products_in_category` собирает ссылки на товары, размещенные на странице категории.  Она обрабатывает страницу категории, ищет ссылки на товары, и если необходимо, переходит на следующие страницы с помощью пагинатора. Функция возвращает список ссылок на товары. Если на странице нет ссылок на товары, выводится предупреждение, и функция возвращает `None`.

Шаги выполнения
-------------------------
1. **Получение экземпляра драйвера и локаторов:** Функция принимает экземпляр класса `Supplier` (содержащий драйвер и локаторы). Извлекаются драйвер (`d`) и локаторы для категории (`l`) из `s`.

2. **Ожидание загрузки страницы и закрытие баннера:** Происходит ожидание 1 секунды (`d.wait(1)`), после чего выполняется закрытие баннера (если он есть) с помощью метода `d.execute_locator`. Также производится прокрутка страницы вниз (`d.scroll()`).

3. **Получение ссылок на товары с текущей страницы:**  Функция извлекает список ссылок на товары с текущей страницы категории, используя `d.execute_locator(l['product_links'])`.

4. **Проверка наличия ссылок на товары:** Если список ссылок пуст (`not list_products_in_category`), то выводится предупреждение (`logger.warning`) и функция возвращает `None`.

5. **Обработка пагинации:**  Если на странице есть элементы пагинации (следующая страница), цикл `while` выполняет следующие шаги:
    - Проверяется наличие следующей страницы с помощью функции `paginator`.
    - Если следующая страница есть, добавляются ссылки с нее в `list_products_in_category`.
    - Если следующей страницы нет, цикл прерывается (`break`).

6. **Обработка результата:**  Список ссылок `list_products_in_category`  преобразуется в список списков, если это строка. Это нужно, чтобы в случае, если получен список из одной строки, он стал списком (список ссылок).


7. **Логирование и возврат результатов:**  Функция выводит информацию о количестве найденных товаров в текущей категории (`logger.debug`). После чего возвращает полученный список ссылок на товары.

Пример использования
-------------------------
.. code-block:: python

    from src.suppliers import Supplier
    # ... (инициализация Supplier)

    supplier = Supplier(...)
    list_products = get_list_products_in_category(supplier)

    if list_products:
        for product_url in list_products:
            # Обработка каждой ссылки на товар
            print(product_url)
    else:
        print("Нет ссылок на товары")