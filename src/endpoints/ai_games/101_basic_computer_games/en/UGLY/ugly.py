"""
UGLY:
=================
Сложность: 4
-----------------
Игра "UGLY" - это простая игра-угадайка, где компьютер генерирует случайное число, а игрок должен угадать это число. После каждой попытки игроку сообщается, было ли его предположение выше или ниже загаданного числа.

Правила игры:
1. Компьютер генерирует случайное целое число от 1 до 100.
2. Игрок вводит свое предположение о загаданном числе.
3. После каждой попытки компьютер сообщает, было ли введенное число "TOO HIGH" (слишком высоко) или "TOO LOW" (слишком низко).
4. Игра заканчивается, когда игрок угадывает число.
-----------------
Алгоритм:
1.  Сгенерировать случайное число в диапазоне от 1 до 100 и сохранить его в переменной `targetNumber`.
2.  Начать цикл "пока не угадано":
    2.1 Запросить у игрока ввод числа и сохранить его в переменной `userGuess`.
    2.2 Если `userGuess` равно `targetNumber`, вывести сообщение "YOU GOT IT!" и перейти к шагу 3.
    2.3 Если `userGuess` меньше `targetNumber`, вывести сообщение "TOO LOW".
    2.4 Если `userGuess` больше `targetNumber`, вывести сообщение "TOO HIGH".
3.  Завершить игру.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeTargetNumber["<p align='left'>Инициализация: 
    <code><b>targetNumber = random(1, 100)</b></code></p>"]
    InitializeTargetNumber --> LoopStart{"Начало цикла: пока не угадано"}
    LoopStart --> InputGuess["Ввод числа пользователем: <code><b>userGuess</b></code>"]
    InputGuess --> CheckGuess{"Проверка: <code><b>userGuess == targetNumber?</b></code>"}
    CheckGuess -- Да --> OutputWin["Вывод сообщения: <b>YOU GOT IT!</b>"]
    OutputWin --> End["Конец"]
    CheckGuess -- Нет --> CheckLow{"Проверка: <code><b>userGuess &lt; targetNumber?</b></code>"}
    CheckLow -- Да --> OutputLow["Вывод сообщения: <b>TOO LOW</b>"]
    OutputLow --> LoopStart
    CheckLow -- Нет --> OutputHigh["Вывод сообщения: <b>TOO HIGH</b>"]
    OutputHigh --> LoopStart
```
Legenda:
    Start - Начало программы.
    InitializeTargetNumber - Инициализация переменной targetNumber случайным целым числом от 1 до 100.
    LoopStart - Начало цикла, который продолжается, пока число не угадано.
    InputGuess - Запрос у пользователя ввода числа и сохранение его в переменной userGuess.
    CheckGuess - Проверка, равно ли введенное число userGuess загаданному числу targetNumber.
    OutputWin - Вывод сообщения о победе, если числа равны.
    End - Конец программы.
    CheckLow - Проверка, меньше ли введенное число userGuess загаданного числа targetNumber.
    OutputLow - Вывод сообщения "TOO LOW", если введенное число меньше загаданного.
    OutputHigh - Вывод сообщения "TOO HIGH", если введенное число больше загаданного.
"""
import random

# Генерируем случайное число от 1 до 100
targetNumber = random.randint(1, 100)

# Бесконечный цикл, пока игрок не угадает число
while True:
    # Запрашиваем у пользователя ввод числа
    try:
        userGuess = int(input("Угадай число: "))
    except ValueError:
        print("Пожалуйста, введите целое число.")
        continue

    # Проверяем, угадано ли число
    if userGuess == targetNumber:
        print("YOU GOT IT!")
        break  # Завершаем цикл, если угадали
    # Проверяем, меньше ли введенное число загаданного
    elif userGuess < targetNumber:
        print("TOO LOW")
    # Если не меньше и не угадано, значит, больше
    else:
        print("TOO HIGH")
"""
Объяснение кода:
1.  **Импорт модуля `random`**:
    -   `import random`: Импортирует модуль `random`, который используется для генерации случайного числа.
2.  **Генерация случайного числа**:
    -   `targetNumber = random.randint(1, 100)`: Генерирует случайное целое число в диапазоне от 1 до 100 и сохраняет его в переменной `targetNumber`.
3.  **Основной цикл `while True:`**:
    -   `while True:`:  Создает бесконечный цикл, который продолжается, пока игрок не угадает число.
    -  **Ввод данных**:
        - `try...except ValueError`:  Блок try-except обрабатывает возможные ошибки ввода. Если пользователь введет не целое число, то будет выведено сообщение об ошибке.
        -   `userGuess = int(input("Угадай число: "))`: Запрашивает у пользователя ввод числа и сохраняет его в переменной `userGuess`.
    -   **Проверка условия победы**:
        -   `if userGuess == targetNumber:`: Проверяет, равно ли введенное число загаданному.
        -   `print("YOU GOT IT!")`: Выводит сообщение о победе.
        -   `break`: Завершает цикл (игру) если число угадано.
    -   **Подсказки**:
        -   `elif userGuess < targetNumber:`: Проверяет, если введенное число меньше загаданного.
        -   `print("TOO LOW")`: Выводит подсказку, что нужно ввести число больше.
        -   `else:`: Если число не угадано и не меньше загаданного, то оно больше.
        -   `print("TOO HIGH")`: Выводит подсказку, что нужно ввести число меньше.
"""
