"""
CHECKR:
=================
Сложность: 5
-----------------
Игра "Шашки" представляет собой упрощенную версию настольной игры, где один игрок (компьютер) играет против другого игрока (человека). Игровое поле представлено в виде одномерного массива, где 0 - пустое поле, 1 - шашка компьютера, 2 - шашка игрока. Цель игры - добраться шашкой до противоположного конца доски.

Правила игры:
-----------------
1. Игровое поле состоит из 15 позиций, представленных числами от 1 до 15.
2. Игрок начинает игру с шашкой в позиции 14.
3. Компьютер начинает игру с шашкой в позиции 2.
4. Игроки по очереди перемещают свои шашки на одну позицию вперёд.
5. Если шашка игрока достигает позиции 1, игрок побеждает.
6. Если шашка компьютера достигает позиции 15, компьютер побеждает.
7. Если игрок пытается сделать недопустимый ход (неправильная позиция), ход переходит компьютеру.
8. Если шашки встречаются, игрок возвращается в исходное положение (позиция 14).

-----------------
Алгоритм:
1. Инициализация:
   - Игровое поле (board) инициализируется нулями.
   - Устанавливаются начальные позиции шашек игрока (player_position = 14) и компьютера (computer_position = 2).
2. Основной игровой цикл:
   - Вывод текущего состояния игрового поля.
   - Ход игрока:
     - Запрос ввода от игрока для перемещения шашки.
     - Проверка допустимости хода (шаг вперед).
     - Если ход допустим:
       - Перемещение шашки игрока.
       - Проверка, не встретились ли шашки (если да, возврат шашки игрока в начало).
       - Проверка победы игрока. Если игрок достиг позиции 1, игра заканчивается.
     - Если ход недопустим, ход переходит к компьютеру.
   - Ход компьютера:
     - Перемещение шашки компьютера на одну позицию вперед.
     - Проверка победы компьютера. Если компьютер достиг позиции 15, игра заканчивается.
3. Вывод результатов игры.

-----------------
Блок-схема:
```mermaid
graph TD
    A[Start] --> B{Initialize Game Board};
    B --> C{Display Game Board};
    C --> D{Get Player Move};
    D --> E{Is Player Move Valid?};
    E -- Yes --> F{Move Player Piece};
    F --> G{Are Pieces Colliding?};
    G -- Yes --> H{Reset Player Piece to Start};
    G -- No --> I{Did Player Win?};
    H --> I
    I -- Yes --> J{Display Player Wins};
    I -- No --> K{Move Computer Piece};
    K --> L{Did Computer Win?};
    L -- Yes --> M{Display Computer Wins};
    L -- No --> C;    
    E -- No --> K;
    J --> N[End];
    M --> N
```
"""
import time

def display_board(board):
    """Выводит текущее состояние игрового поля."""
    print("-----------------")
    board_str = ""
    for i, value in enumerate(board):
        if value == 0:
            board_str +=  f"{i+1:2} " 
        elif value == 1:
            board_str += " C " # Компьютер
        elif value == 2:
            board_str += " P " # Игрок
    print(board_str)
    print("-----------------")



def checkr():
    """Основная функция игры в шашки."""

    # 1. Инициализация игрового поля и позиций шашек
    board = [0] * 15 #  игровое поле, 0 - пусто, 1 - компьютер, 2 - игрок
    player_position = 14 # начальная позиция игрока 
    computer_position = 2 # начальная позиция компьютера
    board[player_position] = 2
    board[computer_position] = 1


    game_over = False # флаг окончания игры

    while not game_over:
        # Выводим текущее состояние поля
        display_board(board)

        # Ход игрока
        try:
            player_move = int(input("Ваш ход (введите номер позиции, например 13, 12): "))
            if player_move == player_position - 1 and 0 <= player_move < 15: 
              # Проверка валидности хода игрока
              board[player_position] = 0
              player_position = player_move
              board[player_position] = 2

              if player_position == computer_position:
                  print("Шашки встретились! Возвращаю игрока в начало.")
                  board[player_position] = 0
                  player_position = 14
                  board[player_position] = 2

              # Проверка, достиг ли игрок конца поля
              if player_position == 0:
                  print("Игрок победил!")
                  game_over = True
                  break
            else:
              print("Недопустимый ход. Ход переходит компьютеру")


        except ValueError:
            print("Некорректный ввод. Ход переходит компьютеру.")

        # Ход компьютера
        if not game_over: # Проверка, не закончилась ли игра после хода игрока
            print("Ход компьютера...")
            time.sleep(0.5)
            board[computer_position] = 0
            computer_position += 1 # компьютер всегда ходит на одну позицию вперед
            board[computer_position] = 1
            # Проверка, достиг ли компьютер конца поля
            if computer_position == 14:
                print("Компьютер победил!")
                game_over = True
    
# Запуск игры
checkr()

"""
Пояснения:
=====================
**Переменные:**
- `board`: Список (массив), представляющий игровое поле. 0 - пустая клетка, 1 - шашка компьютера, 2 - шашка игрока.
- `player_position`: Целое число, текущая позиция шашки игрока на поле.
- `computer_position`: Целое число, текущая позиция шашки компьютера на поле.
- `game_over`: Булева переменная, флаг окончания игры.
- `player_move`: Целое число, ввод игрока для хода.

**Функции:**
- `display_board(board)`: Функция для отображения текущего состояния игрового поля.
- `checkr()`: Основная функция, управляющая игровым процессом.

**Алгоритм (по шагам):**
1. **Инициализация:**
   - Создается список `board` размером 15, заполненный нулями.
   - Устанавливаются начальные позиции шашек игрока (`player_position = 14`) и компьютера (`computer_position = 2`) на поле.
2. **Основной игровой цикл (while not game_over):**
   - Выводится текущее состояние игрового поля с помощью `display_board(board)`.
   - **Ход игрока:**
     - Запрашивается ввод от пользователя для перемещения шашки.
     - Проверяется корректность ввода (является ли введенное значение числом)
     - Проверяется, допустим ли ход, то есть игрок пытается двигаться на одну позицию вперед.
     - Если ход допустим:
       - Обновляется позиция шашки игрока на поле.
       - Проверяется, не столкнулись ли шашки. Если столкнулись, шашка игрока возвращается на начальную позицию.
       - Проверяется, не выиграл ли игрок (достиг ли позиции 0). Если выиграл, игра заканчивается.
     - Если ход недопустим, ход переходит компьютеру
   - **Ход компьютера (если игра не закончена):**
     - Имитируется ход компьютера: шашка компьютера перемещается на одну позицию вперед.
     - Проверяется, не выиграл ли компьютер (достиг ли позиции 14). Если выиграл, игра заканчивается.
3. **Завершение игры:**
   - После окончания цикла `while`, выводится сообщение о победителе.
   
   
licence:MIT(../licence)
"""
__author__ = 'hypo69 (hypo69@davidka.net)'