Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код реализует сценарий для извлечения, обработки и сохранения данных о продуктах с разных поставщиков (morlevi, ivory, ksp, grandadvance).  Он использует Selenium для парсинга веб-страниц,  обработки данных с помощью модели Google Gemini и публикации результатов в Facebook.  Код включает в себя загрузку конфигурации, управление граберами для разных поставщиков, преобразование данных в формат, понятный модели, сохранение данных в файлы, обработку через AI, генерацию отчетов в HTML и PDF, а также публикацию в Facebook.

Шаги выполнения
-------------------------
1. **Инициализация класса Mexiron:**
   - Загружает конфигурацию из файла `kazarinov.json`. Обрабатывает возможные ошибки при загрузке конфигурации.
   - Инициализирует атрибуты: `timestamp`, `driver`, `mexiron_name`, `export_path`.  Путь к сохранению данных зависит от настроек конфигурации (`storage`).
   - Загружает системные инструкции и команды для модели AI из файлов `system_instruction_mexiron.md` и `command_instruction_mexiron.md`.
   - Загружает API-ключ для Google Gemini. Обрабатывает все возможные ошибки загрузки данных.

2. **Выполнение сценария (`run_scenario`):**
   - Преобразует входной URL (или список URL) в список. Проверяет, предоставлены ли URL для парсинга. Если нет, возвращает `False`.
   - Итерируется по списку URL:
     - Получает грабер для конкретного поставщика. Если не найдено, пропускает URL.
     - Открывает URL в браузере через Selenium. Обрабатывает возможные ошибки при открытии страницы.
     - Парсит данные с помощью выбранного грабера. Обрабатывает возможные ошибки при парсинге данных.
     - Преобразует полученные данные в формат, подходящий для модели. Обрабатывает возможные ошибки при преобразовании.
     - Сохраняет данные каждого продукта в отдельный JSON-файл. Обрабатывает возможные ошибки при сохранении.
   - Выполняет AI-обработку полученного списка продуктов. Обрабатывает возможные ошибки при работе с моделью.
   - Сохраняет обработанные данные в JSON-файлы (для `he` и `ru`). Обрабатывает возможные ошибки при сохранении.
   - Создает HTML и PDF отчеты для данных `he` и `ru`.
   - Публикует данные в Facebook для `he` и `ru`. Обрабатывает возможные ошибки при публикации в Facebook.
   - Возвращает `True` в случае успешного выполнения, `False` в противном случае.


3. **Получение грабера (`get_graber_by_supplier_url`):**
   - Определяет, какой грабер использовать на основе URL (morlevi, ksp, grandadvance, ivory).
   - Возвращает соответствующий грабер или `None`, если не найден.

4. **Преобразование полей (`convert_product_fields`):**
   - Преобразует данные, полученные с помощью грабера, в словарь.  Ключи словаря соответствуют названиям полей, требуемых для модели.

5. **Сохранение данных (`save_product_data`):**
   - Сохраняет данные каждого продукта в отдельный JSON-файл.

6. **AI-обработка (`process_ai`):**
   - Обрабатывает список продуктов с помощью модели Google Gemini.
   - Обрабатывает возможные ошибки и повторения запроса к модели.
   - Извлекает и возвращает результат обработки для `he` и `ru`. Обрабатывает возможные ошибки в структуре данных.

7. **Публикация в Facebook (`post_facebook`):**
   - Выполняет сценарий для публикации данных в Facebook.
   - Обрабатывает возможные ошибки при публикации.

8. **Генерация отчета (`create_report`):**
   - Создает отчеты в формате HTML и PDF на основе данных.

Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.endpoints.kazarinov.scenarios.scenario_pricelist import Mexiron
    from selenium import webdriver

    # Инициализация драйвера (WebDriver)
    driver = webdriver.Chrome()

    # Инициализация Mexiron
    mexiron = Mexiron(driver)

    # Список URL для парсинга
    urls = ['https://morlevi.co.il/some-product-page-url', 'https://ksp.co.il/another-product-page-url']

    # Запуск сценария
    asyncio.run(mexiron.run_scenario(urls=urls))

    # Закрытие драйвера
    driver.quit()