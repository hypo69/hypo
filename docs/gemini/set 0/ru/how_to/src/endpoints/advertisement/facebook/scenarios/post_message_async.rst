Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код реализует асинхронную функцию `promote_post`, предназначенную для публикации сообщений в Facebook рекламного характера. Она последовательно выполняет действия: устанавливает заголовок и описание поста, загружает медиа-файлы (изображения и видео), и, в завершение, публикует пост. Код использует Selenium для взаимодействия с веб-страницей, а также  обрабатывает возможные ошибки на каждом шаге.  Он использует `SimpleNamespace` и `List` для работы с данными о продуктах и категориях. Важная часть кода — это асинхронное обновление описаний загруженных медиа-файлов с использованием функции `update_images_captions`.  В процессе работы код использует локализацию, загружая переводы с помощью `translations.json`.

Шаги выполнения
-------------------------
1. **Установка заголовка и описания:** Функция `post_title`  принимает экземпляр драйвера `Driver` и `SimpleNamespace` с информацией о заголовке и описании.  Прокручивает страницу назад (для корректной работы). Открывает форму добавления поста. Формирует сообщение, комбинируя заголовок и описание. Добавляет сформированное сообщение в поле для добавления сообщения в пост.  Возвращает `True` при успешном выполнении, `None` в случае ошибки.


2. **Загрузка медиа-файлов:** Функция `upload_media` принимает экземпляр драйвера и список продуктов (`SimpleNamespace`). Открывает форму добавления медиа.  Проверяет, что `products` является списком. Итерируется по списку `products`. Загружает медиа-файл (`local_saved_image` или `local_saved_video`) для каждого продукта. При ошибке возвращает `None`.  Обрабатывает возможные исключения во время загрузки медиа.  Открывает форму редактирования загруженных медиа.  Записывает описания к изображениям.

3. **Асинхронное обновление описаний:** Функция `update_images_captions` принимает  экземпляр драйвера, список продуктов и список областей ввода. Асинхронно обновляет описания медиа, используя функцию `handle_product`.


4. **Публикация поста:** Функция `promote_post` объединяет шаги 1 и 2.  Вызывает функцию `post_title` для установления заголовка и описания. Вызывает функцию `upload_media` для загрузки медиа-файлов.  Выполняет действия для завершения редактирования и публикации поста. Возвращает `True` в случае успешной публикации, иначе `None`.

Пример использования
-------------------------
.. code-block:: python

    import asyncio
    from src import gs
    from src.webdriver import Driver
    from src.endpoints.advertisement.facebook.scenarios.post_message_async import promote_post
    from pathlib import Path
    from types import SimpleNamespace


    async def main():
        driver = Driver()  # Инициализация драйвера
        category = SimpleNamespace(title="Новый рекламный пост", description="Описание поста")
        products = [
            SimpleNamespace(local_saved_image=str(Path(gs.path.media) / 'image1.jpg'), product_title='Продукт 1'),
            SimpleNamespace(local_saved_image=str(Path(gs.path.media) / 'image2.jpg'), product_title='Продукт 2'),
        ]
        try:
            success = await promote_post(driver, category, products)
            if success:
                print("Пост опубликован успешно!")
            else:
                print("Ошибка при публикации поста.")
        except Exception as e:
            print(f"Произошла непредвиденная ошибка: {e}")
        finally:
            await driver.quit()  # Закрытие драйвера


    asyncio.run(main())