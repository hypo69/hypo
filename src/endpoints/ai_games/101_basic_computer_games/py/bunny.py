"""
BUNNY:
=================
Сложность: 2
-----------------
Игра "BUNNY" - это простая текстовая игра, в которой игрок должен угадать, сколько кроликов (BUNNIES) находится в норе. Игрок вводит число, и программа сообщает, является ли это число слишком большим или слишком малым.  Игра заканчивается, когда игрок угадывает правильное число. Количество попыток не ограничено.

Правила игры:
1. Компьютер случайным образом выбирает целое число от 1 до 10.
2. Игрок вводит свое предположение о количестве кроликов.
3. Компьютер сообщает, является ли предположение слишком большим или слишком маленьким.
4. Игра продолжается до тех пор, пока игрок не угадает правильное число.
-----------------
Алгоритм:
1.  Сгенерировать случайное число в диапазоне от 1 до 10 и присвоить его переменной `Bunnies`.
2.  Начать цикл "пока число не угадано":
	2.1 Запросить у игрока ввод числа кроликов.
	2.2 Если введенное число равно `Bunnies`, перейти к шагу 3.
	2.3 Если введенное число меньше `Bunnies`, вывести сообщение "TOO LOW".
	2.4 Если введенное число больше `Bunnies`, вывести сообщение "TOO HIGH".
3. Вывести сообщение "YOU GOT IT!"
4. Конец игры.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeTargetNumber["<p align='left'>Инициализация переменной:
    <code><b>
    targetNumber = random(1, 10)
    </b></code></p>"]
    InitializeTargetNumber --> LoopStart{"Начало цикла: пока не угадано"}
    LoopStart -- Да --> InputGuess["Ввод числа пользователем: <code><b>userGuess</b></code>"]
    InputGuess --> CheckGuess{"Проверка: <code><b>userGuess == targetNumber?</b></code>"}
    CheckGuess -- Да --> OutputWin["Вывод сообщения: <b>YOU GOT IT!</b>"]
    OutputWin --> End["Конец"]
    CheckGuess -- Нет --> CheckLow{"Проверка: <code><b>userGuess &lt; targetNumber</b></code>?"}
    CheckLow -- Да --> OutputLow["Вывод сообщения: <b>TOO LOW</b>"]
    OutputLow --> LoopStart
    CheckLow -- Нет --> OutputHigh["Вывод сообщения: <b>TOO HIGH</b>"]
    OutputHigh --> LoopStart
    LoopStart -- Нет --> End
```
Legenda:
    Start - Начало программы.
    InitializeTargetNumber - Инициализация переменной targetNumber (загаданное число) случайным образом в диапазоне от 1 до 10.
    LoopStart - Начало цикла, который продолжается, пока число не угадано.
    InputGuess - Запрос у пользователя ввода числа и сохранение его в переменной userGuess.
    CheckGuess - Проверка, равно ли введенное число userGuess загаданному числу targetNumber.
    OutputWin - Вывод сообщения о победе "YOU GOT IT!", если числа равны.
    End - Конец программы.
    CheckLow - Проверка, меньше ли введенное число userGuess загаданного числа targetNumber.
    OutputLow - Вывод сообщения "TOO LOW", если введенное число меньше загаданного.
    OutputHigh - Вывод сообщения "TOO HIGH", если введенное число больше загаданного.
"""

__author__ = 'hypo69 (hypo69@davidka.net)'
import random

# Генерируем случайное число кроликов от 1 до 10
targetNumber = random.randint(1, 10)

# Игровой цикл
while True:
    # Запрашиваем у пользователя предположение о количестве кроликов
    try:
        userGuess = int(input("Сколько кроликов (BUNNIES)? "))
    except ValueError:
        print("Пожалуйста, введите целое число.")
        continue
    
    # Проверяем, угадано ли число
    if userGuess == targetNumber:
        print("YOU GOT IT!") # Выводим сообщение об успехе
        break  # Завершаем игру
    elif userGuess < targetNumber:
        print("TOO LOW")   # Сообщаем, что введенное число слишком мало
    else:
        print("TOO HIGH")  # Сообщаем, что введенное число слишком велико
"""
Пояснения:
1.  **Импорт модуля `random`**:
   -  `import random`: Импортирует модуль `random`, который используется для генерации случайного числа.
2. **Инициализация целевого числа**:
    - `targetNumber = random.randint(1, 10)`: Генерирует случайное целое число от 1 до 10 (количество кроликов) и сохраняет его в переменной `targetNumber`.
3. **Основной игровой цикл**
   - `while True:`: Запускает бесконечный цикл, который продолжается, пока игрок не угадает число.
   - **Ввод данных**:
     - `try...except ValueError`:  Блок try-except обрабатывает возможные ошибки ввода. Если пользователь введет не целое число, то будет выведено сообщение об ошибке.
     - `userGuess = int(input("Сколько кроликов (BUNNIES)? "))`: Запрашивает у игрока предположение о количестве кроликов и сохраняет его в переменной `userGuess` после преобразования в целое число.
   - **Проверка условия победы**:
     - `if userGuess == targetNumber:`: Проверяет, равно ли предположение игрока загаданному количеству кроликов.
     - `print("YOU GOT IT!")`: Выводит сообщение о победе, если числа равны.
     - `break`: Завершает цикл (игру), если число угадано.
   - **Подсказки**:
     - `elif userGuess < targetNumber:`: Проверяет, является ли предположение игрока меньше загаданного числа.
     - `print("TOO LOW")`: Выводит сообщение, что число слишком мало.
     - `else`: Если предположение не меньше загаданного числа, то оно больше.
     - `print("TOO HIGH")`: Выводит сообщение, что число слишком велико.
"""
