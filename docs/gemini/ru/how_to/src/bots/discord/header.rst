Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневую директорию проекта, начиная с текущей директории файла.  Функция ищет указанные файлы-маркеры (pyproject.toml, requirements.txt, .git) в родительских директориях и останавливается на первом найденном. Если файл-маркер не найден, то возвращается текущая директория. Также код устанавливает найденную корневую директорию в `sys.path`.  Далее, код загружает настройки из файла settings.json, расположенного в корневой директории проекта. Если файл не найден или имеет неправильный формат, выполнение игнорируется.  Аналогично, код загружает содержимое файла README.MD в переменную `doc_str`. Если файл не найден, переменная остаётся пустой. Наконец, код получает значения из загруженных настроек, если они доступны, или использует значения по умолчанию.  Эти значения сохраняются в переменных проекта.

Шаги выполнения
-------------------------
1. **Нахождение корневой директории:** Функция `set_project_root` ищет корень проекта, начиная с текущей директории и проходя вверх по дереву директорий.  Она проверяет наличие файлов-маркеров (pyproject.toml, requirements.txt, .git) в каждой директории.
2. **Установка корневой директории в sys.path:** Если корневая директория найдена, она добавляется в `sys.path`, что позволяет Python импортировать модули из этой директории.
3. **Загрузка настроек:** Функция пытается загрузить JSON-данные из файла settings.json в корневой директории проекта.
4. **Обработка ошибок загрузки настроек:** Если файл не найден или не является валидным JSON, выполнение игнорируется (исключения обрабатываются).
5. **Загрузка README.MD:** Код пытается загрузить содержимое файла README.MD в корневой директории проекта.
6. **Обработка ошибок загрузки README.MD:** Если файл не найден или не может быть прочитан, значение `doc_str` остаётся пустым (исключения обрабатываются).
7. **Получение значений из настроек:**  Код получает значения `project_name`, `version`, `author`, `copyright`, `cofee` из загруженных настроек. Если настройки не найдены, используются значения по умолчанию.
8. **Сохранение значений в переменные проекта:** Результаты сохраняются в переменные `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__`.

Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.bots.discord.header import set_project_root

    # Пример использования функции set_project_root для нахождения корня проекта
    project_root = set_project_root()
    print(f"Корневая директория проекта: {project_root}")

    # Доступ к значениям из файла settings.json (после успешной загрузки)
    from hypotez.src.bots.discord.header import __project_name__
    print(f"Имя проекта: {__project_name__}")