Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `bully`, которая взаимодействует с API OpenAI для получения примера из литературных источников, показывающего, как хулиганы запугивают своих жертв.  Функция использует модель `gpt-3.5-turbo` для генерации ответа. Она принимает пользовательское сообщение и предопределенный системный запрос, содержащий инструкции для модели.  Код также инициализирует переменную `openai.API_KEY`  и определяет `system_prompt` содержащий инструкции для модели о том, что она должна ответить.

Шаги выполнения
-------------------------
1. Импортируются необходимые модули: `os` и `src.ai.openai`.
2. Переменной `openai.API_KEY` присваивается значение API ключа OpenAI.  *Необходимо заменить "YOUR_API_KEYS_OPENAI" на ваш собственный API ключ.*
3. Определяется `system_prompt` - системный запрос для модели OpenAI, определяющий, что модель должна сгенерировать пример запугивания, и задает формат ответа.
4. Определяется функция `bully` принимающая параметр `user_message` (сообщение пользователя) и `messages` (список сообщений для модели, включающий системный запрос).
5. Внутри функции `bully`:
    a. Добавляется сообщение пользователя `user_message` в список `messages`.
    b. Используется метод `openai.ChatCompletion.create` для отправки запроса к API OpenAI с использованием модели `gpt-3.5-turbo` и списка `messages`.
    c. Добавляется ответ модели в список `messages`.
    d. Возвращается измененный список `messages`.


Пример использования
-------------------------
.. code-block:: python

    import src.ai.openai

    # Пример использования функции bully с сообщением Hello!
    example_message = "Hello!"
    messages = [{"system": "user", "content": system_prompt}]
    response = src.ai.openai.bully(user_message=example_message, messages=messages)
    
    #Обработка ответа: 
    #Важно обработать полученный объект response, так как ожидается JSON структура
    #с ключом 'bully_response'. Например:
    try:
        #предположим что ответ содержался в последнем элементе messages
        if response and response[-1] and 'content' in response[-1]:
            json_response = response[-1]['content']
            import json
            response_dict = json.loads(json_response)
            print(response_dict.get('bully_response'))  #печать значения ключа "bully_response"
    except (KeyError, json.JSONDecodeError) as e:
        print(f"Ошибка обработки ответа: {e}")