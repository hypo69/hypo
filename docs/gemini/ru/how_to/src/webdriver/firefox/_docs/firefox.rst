Как использовать класс Firefox WebDriver
========================================================================================

Описание
-------------------------
Этот код определяет подкласс `webdriver.Firefox`, названный `Firefox`. Он предоставляет дополнительные возможности, такие как запуск Firefox в режиме киоска и настройку профиля Firefox для вебдрайвера. Класс обрабатывает запуск драйвера, настройку параметров запуска и работу с профилем браузера. Он включает в себя настройку пользовательского агента, параметров запуска (headless, языки и т.д.), и работу с профилем.  Код обрабатывает различные исключения при запуске драйвера и сообщает о проблемах с помощью логов.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:** Код импортирует необходимые библиотеки: `pathlib`, `attr`, `os`, `selenium.webdriver`, `selenium.webdriver.firefox.options`, `selenium.webdriver.firefox.service`, `selenium.webdriver.firefox.firefox_profile`, `selenium.common.exceptions`, `gs`, `utils`, `logger`.

2. **Определение класса `Firefox`:** Определяется подкласс `WebDriver` с именем `Firefox`.  Этот класс наследует базовые методы и свойства от `webdriver.Firefox`.

3. **Инициализация `__init__`:** Конструктор инициализирует вебдрайвер с заданными параметрами запуска и профиля. 
   - Загружает настройки из файла `firefox.json` (используя `j_loads_ns`).
   - Получает путь к GeckoDriver.
   - Устанавливает профиль браузера с помощью `_set_profile`.
   - Устанавливает опции запуска с помощью `_set_options`.
   - Инициализирует `Service` с путем к GeckoDriver.
   - Устанавливает профиль в опции, если он есть.
   - Запускает Firefox с заданными опциями. Обрабатывает исключения `WebDriverException` и общие ошибки запуска.


4. **`_set_options`:** Метод настраивает опции запуска Firefox (например, headless режим, параметры командной строки).
   - Использует настройки из `settings` для создания `Options` объекта.

5. **`_set_profile`:** Метод настраивает профиль Firefox.
   - Получает путь к папке профиля.
   - Создает `FirefoxProfile` объект, используя полученный путь.
   - Возвращает настроенный профиль.
   - Обрабатывает возможные пути к профилям (используя `%APPDATA%`).

6. **Запуск драйвера:** Внутри конструктора происходит запуск Firefox с использованием настроенных опций. Код обрабатывает возможные исключения (`WebDriverException`, общие).


Пример использования
-------------------------
.. code-block:: python

    from src.webdriver.firefox import Firefox
    from selenium.webdriver.common.by import By
    from selenium.webdriver.support.ui import WebDriverWait
    from selenium.webdriver.support import expected_conditions as EC

    # ... (ваш код для инициализации settings и других переменных) ...

    driver = Firefox(user_agent={"browser": "Firefox", "version": "123"})

    # ... (ваш код для работы с драйвером) ...

    driver.quit()