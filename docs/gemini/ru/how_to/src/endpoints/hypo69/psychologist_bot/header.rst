Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код устанавливает корневую директорию проекта и загружает настройки из файла `settings.json` и `README.MD`.  Он также извлекает информацию о проекте, такую как имя, версия, документация, автор и авторские права.  Если файлы не найдены или содержат ошибки, код обрабатывает эти исключения.


Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:** Код импортирует модули `sys`, `json`, `pathlib`, `packaging.version` и `src.gs`.


2. **Определение функции `set_project_root`:**  Эта функция находит корневую директорию проекта, начиная с текущей директории и идя вверх по дереву директорий. Она проверяет наличие файлов (или директорий) в `marker_files` (по умолчанию: `pyproject.toml`, `requirements.txt`, `.git`). Если найдено, то функция возвращает путь к этой директории. Если не найдено - возвращает текущую директорию.  Ключевым моментом является добавление найденной директории в `sys.path` для корректного импорта модулей `src`.


3. **Получение корневой директории проекта:** Вызывается функция `set_project_root()`, которая определяет и возвращает корневую директорию проекта. Результат сохраняется в переменной `__root__`.


4. **Загрузка настроек:** Код пытается открыть файл `src/settings.json` в корневой директории проекта и загрузить данные из него в словарь `settings`. Обрабатывает исключения `FileNotFoundError` и `json.JSONDecodeError`, если файл не найден или имеет неправильный формат.


5. **Загрузка документации:** Код пытается открыть файл `src/README.MD` в корневой директории проекта и загрузить его содержимое в строковую переменную `doc_str`. Обрабатывает исключения `FileNotFoundError` и `json.JSONDecodeError`, если файл не найден или имеет неправильный формат.


6. **Извлечение информации о проекте:**  Код извлекает значения из словаря `settings` для следующих параметров: `project_name`, `version`, `author`, `copyright`, `cofee` и сохраняет их в соответствующих переменных (`__project_name__`, `__version__`, `__author__`, `__copyright__`, `__cofee__`). Если `settings` не определён или ключа нет, используется значение по умолчанию (например, 'hypotez' для `project_name`).


7. **Сохранение документации:** Если `doc_str` успешно загружен, он используется в переменной `__doc__`, иначе используется пустая строка.


8. **Возврат значений:** Код возвращает все полученные значения.



Пример использования
-------------------------
.. code-block:: python

    # ... (другой код) ...
    from hypotez.src.endpoints.hypo69.psychologist_bot.header import __project_name__, __version__
    print(f"Имя проекта: {__project_name__}")
    print(f"Версия проекта: {__version__}")
    # ... (дальнейшее использование значений) ...