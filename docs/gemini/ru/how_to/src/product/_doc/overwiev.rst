Как использовать модуль product
========================================================================================

Описание
-------------------------
Данный модуль `product` предоставляет инструменты для работы с данными о продуктах. Модуль содержит классы для работы с продуктами, их полями, а также управлением версиями.  Он включает в себя локаторы для взаимодействия с веб-элементами (вероятно, для Selenium), примеры использования, и структурированную документацию.

Шаги выполнения
-------------------------
1. **Разверните архив `product.zip`**: Извлеките содержимое архива в указанную директорию.
2. **Изучите структуру модуля**: Обратите внимание на файлы `__init__.py`, `locator.py`, `product.py`, директорию `product_fields` содержащую файлы, связанные с полями продуктов, `version.py` для управления версиями, и директорию `_examples` содержащую примеры использования.
3. **Изучите классы**:  Изучите функциональность классов `Product`, `ProductFields`. Убедитесь, что понимаете их назначение и методы, такие как  `get_product_data`, `update_field`.
4. **Изучите поля продуктов**: Исследуйте файлы в директории `product_fields` (например, `product_fields.py`, `product_fields_default_values.json`, `product_fields_translator.py`) для понимания того, как представлены и управляются поля продуктов.
5. **Просмотрите примеры**:  В директории `_examples` вы найдете примеры использования модуля, которые помогут вам в применении методов классов `Product` и `ProductFields`.
6. **Примените в своем коде**: Используйте импорты из модуля `product`, например `from product.product import Product` и `from product.product_fields import ProductFields`, для инициализации, получения и обновления данных продукта.

Пример использования
-------------------------
.. code-block:: python

    from product.product import Product
    from product.product_fields import ProductFields

    # Инициализируйте классы Product и ProductFields
    product = Product()
    product_fields = ProductFields()

    # Пример получения данных о продукте
    product_data = product.get_product_data(product_id="12345")

    # Пример обновления поля "цена"
    product_fields.update_field("price", 19.99)

    # Вывод полученных данных
    print(product_data)