Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код устанавливает корневую директорию проекта и загружает настройки из файла `settings.json` и описание из `README.MD`. Он также извлекает информацию о проекте (имя, версия, описание, автор, авторские права и ссылку на поддержку разработчика) из этих файлов, если они существуют. Если файлов нет, то используются значения по умолчанию.  Код использует функцию `set_project_root` для нахождения корневой директории, а затем использует модуль `gs` для доступа к папке проекта.


Шаги выполнения
-------------------------
1. **Ищет корневую директорию проекта:** Функция `set_project_root` ищет корневую директорию проекта, начиная с директории текущего файла, и поднимаясь вверх по дереву директорий. Она проверяет наличие указанных файлов (pyproject.toml, requirements.txt, .git) в каждой директории. Если один из этих файлов найден, функция возвращает путь к этой директории. Если корневая директория не найдена, или файл не найден, то возвращается директория, где находится текущий скрипт. Путь к корневой директории сохраняется в переменной `__root__`.
2. **Добавляет корневую директорию в путь поиска:** Если корневая директория не содержится в списке `sys.path`, она добавляется в него с помощью `sys.path.insert(0, str(__root__))`, что позволяет импортировать модули из корневой директории.
3. **Загружает настройки из файла `settings.json`:** Код пытается открыть файл `settings.json` в корневой директории проекта. Если файл существует и содержит корректный JSON, то данные из него загружаются в переменную `settings`. В противном случае переменная `settings` остаётся `None`.
4. **Загружает описание из файла `README.MD`:** Код пытается открыть файл `README.MD` в корневой директории проекта. Если файл существует, его содержимое читается в переменную `doc_str`. В противном случае переменная `doc_str` остаётся `None`.
5. **Извлекает информацию о проекте:** Код извлекает значения для переменных `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__` из словаря `settings` или устанавливает значения по умолчанию, если `settings` равен `None` или соответствующих ключей нет.
6. **Возвращает найденную информацию:** Код возвращает значения переменных, содержащих информацию о проекте.


Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.endpoints.prestashop.api.header import __project_name__, __version__, __doc__

    print(f"Имя проекта: {__project_name__}")
    print(f"Версия: {__version__}")
    print(f"Документация: {__doc__}")