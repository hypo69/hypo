Как использовать функцию decode_unicode_escape
========================================================================================

Описание
-------------------------
Функция `decode_unicode_escape` предназначена для декодирования строк, словарей и списков, содержащих юникодные escape-последовательности (например, `\u05de`). Она преобразует их в обычный текст.  Функция работает рекурсивно, обрабатывая все вложенные словари и списки. Если в данных нет escape-последовательностей, функция возвращает исходные данные без изменений.  В случае ошибки декодирования, она просто возвращает исходные данные.

Шаги выполнения
-------------------------
1. **Проверка типа данных:** Функция проверяет тип входных данных (`input_data`).
2. **Обработка словарей:** Если `input_data` является словарем, функция рекурсивно вызывает себя для каждого значения в словаре и возвращает новый словарь с декодированными значениями.
3. **Обработка списков:** Если `input_data` является списком, функция рекурсивно вызывает себя для каждого элемента списка и возвращает новый список с декодированными элементами.
4. **Обработка строк:** Если `input_data` является строкой:
    a. **Декодирование escape-последовательностей:** Функция пытается декодировать строку с помощью `input_data.encode('utf-8').decode('unicode_escape')`. Если декодирование не удалось (возникла ошибка `UnicodeDecodeError`), строка возвращается без изменений.
    b. **Обработка оставшихся escape-последовательностей:**  Используя регулярное выражение `re.sub`, функция находит все оставшиеся последовательности `\uXXXX` и заменяет их на соответствующие символы,  рекурсивно обрабатывая их в `decode_unicode_escape`.
    c. **Возвращение результата:** Функция возвращает декодированную строку.
5. **Обработка других типов:** Если тип данных `input_data` не поддерживается, функция возвращает исходные данные без изменений.

Пример использования
-------------------------
.. code-block:: python

    import re
    from typing import Dict, Any

    def decode_unicode_escape(input_data: Dict[str, Any] | list | str) -> Dict[str, Any] | list | str:
        # ... (остальной код функции) ...

    input_dict = {
        'product_name': r'\u05de\u05e7"\\u05d8 \u05d9\u05e6\u05e8\u05df\nH510M K V2',
        'category': r'\u05e2\u05e8\u05db\u05ea \u05e9\u05d1\u05d1\u05d9\u05dd',
        'price': 123.45
    }

    decoded_dict = decode_unicode_escape(input_dict)
    print(decoded_dict)

    input_list = [r'\u05e2\u05e8\u05db\u05ea \u05e9\u05d1\u05d1\u05d9\u05dd', r'H510M K V2']
    decoded_list = decode_unicode_escape(input_list)
    print(decoded_list)


    input_string = r'\u05de\u05e7"\\u05d8 \u05d9\u05e6\u05e8\u05df\nH510M K V2'
    decoded_string = decode_unicode_escape(input_string)
    print(decoded_string)