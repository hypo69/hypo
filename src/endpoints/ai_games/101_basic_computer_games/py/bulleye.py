
"""
BULLEYE:
=================
Сложность: 4
-----------------
Игра "Бычий глаз" (Bullseye) - это простая игра, в которой игрок пытается угадать случайное число от 0 до 99, которое генерирует компьютер.  Игрок делает попытки ввода числа, и получает подсказку, если его предположение не совпадает с загаданным. После каждой попытки, игра выводит число попыток, которые потребовались, чтобы угадать число, и  предлагает сыграть еще раз.

Правила игры:
1. Компьютер генерирует случайное целое число в диапазоне от 0 до 99.
2. Игрок вводит свои предположения о загаданном числе.
3. После каждой попытки, если число не угадано,  компьютер сообщает,  сколько попыток уже сделано.
4. Игра продолжается до тех пор, пока игрок не угадает загаданное число.
5.  После угадывания числа, выводится сообщение о количестве попыток и предлагается начать новую игру.
-----------------
Алгоритм:
1. Установить число попыток в 0.
2. Сгенерировать случайное число в диапазоне от 0 до 99.
3. Начать цикл "пока число не угадано":
    3.1 Увеличить число попыток на 1.
    3.2 Запросить у игрока ввод числа.
    3.3 Если введенное число равно загаданному числу, перейти к шагу 4.
    3.4 Если введенное число не равно загаданному числу, вывести номер попытки
4. Вывести сообщение "YOU GOT IT IN {число попыток} GUESSES!".
5. Спросить игрока хочет ли он сыграть еще раз.
6. Если игрок согласен начать новую игру, то вернуться к шагу 1.
7. Конец игры.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeVariables["<p align='left'>Инициализация переменных:
    <code><b>
    numberOfGuesses = 0
    targetNumber = random(0, 99)
    </b></code></p>"]
    InitializeVariables --> LoopStart{"Начало цикла: пока не угадано"}
    LoopStart -- Да --> IncreaseGuesses["<code><b>numberOfGuesses = numberOfGuesses + 1</b></code>"]
    IncreaseGuesses --> InputGuess["Ввод числа пользователем: <code><b>userGuess</b></code>"]
    InputGuess --> CheckGuess{"Проверка: <code><b>userGuess == targetNumber?</b></code>"}
    CheckGuess -- Да --> OutputWin["Вывод сообщения: <b>YOU GOT IT IN <code>{numberOfGuesses}</code> GUESSES!</b>"]
    OutputWin --> PlayAgainQuery["Спросить игрока: <b>Хотите сыграть еще раз?</b>"]
        PlayAgainQuery -- Да --> InitializeVariables
    PlayAgainQuery -- Нет --> End["Конец"]
    CheckGuess -- Нет --> OutputGuessNumber["Вывод номера попытки: <code><b>numberOfGuesses</b></code>"]
    OutputGuessNumber --> LoopStart
    LoopStart -- Нет --> End

```
Legenda:
    Start - Начало программы.
    InitializeVariables - Инициализация переменных: numberOfGuesses (количество попыток) устанавливается в 0, а targetNumber (загаданное число) генерируется случайным образом от 0 до 99.
    LoopStart - Начало цикла, который продолжается, пока число не угадано.
    IncreaseGuesses - Увеличение счетчика количества попыток на 1.
    InputGuess - Запрос у пользователя ввода числа и сохранение его в переменной userGuess.
    CheckGuess - Проверка, равно ли введенное число userGuess загаданному числу targetNumber.
    OutputWin - Вывод сообщения о победе, если числа равны, с указанием количества попыток.
    PlayAgainQuery - Запрос у пользователя, хочет ли он сыграть еще раз.
    End - Конец программы.
    OutputGuessNumber - Вывод номера текущей попытки.
"""
import random

__author__ = 'hypo69 (hypo69@davidka.net)'

def play_bullseye():
    """
    Функция, реализующая игру "Бычий глаз".
    """
    while True:  # Главный цикл игры, позволяющий играть несколько раз
        numberOfGuesses = 0 # Инициализация счетчика попыток
        targetNumber = random.randint(0, 99) # Генерация случайного числа от 0 до 99

        while True: # Цикл игры до угадывания числа
            numberOfGuesses += 1 # Увеличение количества попыток
            try:
                userGuess = int(input("Введите ваше предположение (0-99): ")) # Запрос ввода числа у пользователя
            except ValueError:
                print("Пожалуйста, введите целое число.")
                continue
            
            if userGuess == targetNumber:  # Проверка, угадано ли число
                print(f"ПОЗДРАВЛЯЮ! Вы угадали число за {numberOfGuesses} попыток!") # Сообщение о победе
                break # Выход из цикла угадывания
            else:
                 print(f"Попытка № {numberOfGuesses} - неверно")# Сообщение о неверном вводе и номер попытки

        play_again = input("Хотите сыграть еще раз? (да/нет): ").lower() # Запрос на новую игру
        if play_again != "да": # Если игрок не хочет играть дальше
            break # Выход из главного цикла

if __name__ == "__main__":
    play_bullseye()
"""
Пояснения:
1. **Импорт модуля `random`**:
   - `import random`: Импортирует модуль `random`, который используется для генерации случайного числа.
2. **Функция `play_bullseye()`**:
   -  Определяет функцию, содержащую логику игры "Бычий глаз".
   - `while True:`: Главный цикл игры, который позволяет игроку играть несколько раз.
   - `numberOfGuesses = 0`: Инициализирует переменную `numberOfGuesses` для подсчета попыток игрока.
   - `targetNumber = random.randint(0, 99)`: Генерирует случайное целое число в диапазоне от 0 до 99 и сохраняет его в `targetNumber`.
3. **Цикл `while True:` (внутренний цикл)**:
   - Бесконечный цикл, который продолжается до тех пор, пока игрок не угадает число (будет выполнена команда `break`).
   - `numberOfGuesses += 1`: Увеличивает счетчик попыток на 1 при каждом новом витке цикла.
   - **Ввод данных**:
     - `try...except ValueError`: Блок try-except обрабатывает возможные ошибки ввода. Если пользователь введет не целое число, то будет выведено сообщение об ошибке.
     - `userGuess = int(input("Введите ваше предположение (0-99): "))`: Запрашивает у пользователя число и преобразует его в целое число, сохраняя результат в `userGuess`.
   - **Условие победы**:
     - `if userGuess == targetNumber:`: Проверяет, равно ли введенное число загаданному числу.
     - `print(f"ПОЗДРАВЛЯЮ! Вы угадали число за {numberOfGuesses} попыток!")`: Выводит сообщение о победе и количестве попыток.
     - `break`: Завершает внутренний цикл (игру), если число угадано.
   - **Сообщение о неверном вводе**
      - `else:`: Если число не угадано, то выполняется код ниже
      - `print(f"Попытка № {numberOfGuesses} - неверно")`: Выводит подсказку, что нужно ввести другое число
4. **Запрос на новую игру**
  -  `play_again = input("Хотите сыграть еще раз? (да/нет): ").lower()`: Спрашивает игрока, хочет ли он сыграть еще раз.
  - `if play_again != "да":`: Проверяет, если игрок ввел не "да", то выходим из основного цикла.
  - `break`: Выход из основного цикла, завершение программы.
5. **Запуск игры**:
   -  `if __name__ == "__main__":`: Этот блок гарантирует, что функция `play_bullseye()` будет запущена, только если файл исполняется напрямую, а не импортируется как модуль.
   -  `play_bullseye()`: Вызывает функцию для начала игры.
"""
```