Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код содержит функции для добавления и удаления пункта контекстного меню 'hypo AI assistant' в проводнике Windows для папок и рабочего стола. Он использует реестр Windows и tkinter для создания графического интерфейса пользователя (GUI) для управления пунктом меню. Код предназначен для добавления пункта меню, который, при выборе, запускает указанный Python-скрипт.

Шаги выполнения
-------------------------
1. **Импортирование модулей:** Код импортирует необходимые модули: `winreg` для взаимодействия с реестром Windows, `os` для работы с файлами и путями, `tkinter` для создания GUI и `messagebox` для отображения сообщений.  Также импортируются кастомные модули `header` и `gs`.
2. **Определение функции `add_context_menu_item`:** Эта функция добавляет пункт меню в реестр.
   - Она определяет путь к ключу реестра, где будет храниться информация о пункте меню.
   - Используя `reg.CreateKey`, создает ключи в реестре.
   - Задает имя пункта меню в реестре.
   - Определяет путь к Python-скрипту, который нужно запустить при выборе пункта меню.
   - Проверяет существование файла скрипта. Если файла нет, выводит сообщение об ошибке и прекращает работу.
   - Устанавливает команду запуска скрипта в реестр с использованием `python <путь_к_скрипту> %1`.
   - Выводит сообщение об успешном добавлении пункта меню.
   - Обрабатывает возможные исключения во время работы с реестром, выводит сообщения об ошибках.
3. **Определение функции `remove_context_menu_item`:** Эта функция удаляет пункт меню из реестра.
   - Определяет путь к ключу реестра, который нужно удалить.
   - Используя `reg.DeleteKey`, удаляет ключ из реестра.
   - Выводит сообщение об успешном удалении пункта меню или предупреждение, если пункт меню не найден.
   - Обрабатывает исключения во время работы с реестром, выводит сообщения об ошибках.
4. **Определение функции `create_gui`:** Эта функция создает графический интерфейс пользователя (GUI).
   - Создает окно tkinter с заголовком "Управление контекстным меню".
   - Создает кнопки для добавления и удаления пункта меню, а также для выхода из программы.
   - Привязывает функции `add_context_menu_item` и `remove_context_menu_item` к соответствующим кнопкам.
   - Запускает основной цикл tkinter для отображения GUI.
5. **Главная часть скрипта (`if __name__ == "__main__":`)**:
   - Вызывает функцию `create_gui()` для запуска GUI.

Пример использования
-------------------------
.. code-block:: python

    # Предполагая, что в модуле gs.path.src/gui/context_menu/ есть файл main.py
    #  и он импортируется как показано в коде.

    # Запуск GUI для управления контекстным меню
    python main.py