"""
FIPFOP:
=================
Сложность: 2
-----------------
Игра "FIPFOP" - это простая игра, в которой игрок должен угадать загаданное компьютером число. 
После каждой попытки компьютер сообщает игроку, было ли введенное число "слишком малым" или "слишком большим".

Правила игры:
1. Компьютер загадывает случайное число в диапазоне от 1 до 100.
2. Игрок вводит число.
3. Если введенное число меньше загаданного, компьютер сообщает "TOO LOW".
4. Если введенное число больше загаданного, компьютер сообщает "TOO HIGH".
5. Если введенное число равно загаданному, компьютер сообщает "GOT IT" и игра заканчивается.

-----------------
Алгоритм:
1. Установить загаданное число в случайное целое значение в диапазоне от 1 до 100.
2. Запросить у игрока ввод числа.
3. Если введенное число меньше загаданного числа, вывести сообщение "TOO LOW" и перейти к шагу 2.
4. Если введенное число больше загаданного числа, вывести сообщение "TOO HIGH" и перейти к шагу 2.
5. Если введенное число равно загаданному числу, вывести сообщение "GOT IT" и закончить игру.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> GenerateTargetNumber["<p align='left'>Генерация случайного числа:
    <code><b>
    targetNumber = random(1, 100)
    </b></code></p>"]
    GenerateTargetNumber --> InputGuess["Ввод числа пользователем: <code><b>userGuess</b></code>"]
    InputGuess --> CheckGuess{"Проверка: <code><b>userGuess == targetNumber?</b></code>"}
    CheckGuess -- Да --> OutputWin["Вывод сообщения: <b>GOT IT</b>"]
    OutputWin --> End["Конец"]
    CheckGuess -- Нет --> CheckLow{"Проверка: <code><b>userGuess &lt; targetNumber</b></code>?"}
    CheckLow -- Да --> OutputLow["Вывод сообщения: <b>TOO LOW</b>"]
    OutputLow --> InputGuess
    CheckLow -- Нет --> OutputHigh["Вывод сообщения: <b>TOO HIGH</b>"]
    OutputHigh --> InputGuess
```
Legenda:
    Start - Начало программы.
    GenerateTargetNumber - Генерация случайного целого числа в диапазоне от 1 до 100, которое будет загадано пользователю.
    InputGuess - Запрос у пользователя ввода числа.
    CheckGuess - Проверка, равно ли введенное число загаданному числу.
    OutputWin - Вывод сообщения "GOT IT" если число угадано.
    End - Конец программы.
    CheckLow - Проверка, меньше ли введенное число загаданного числа.
    OutputLow - Вывод сообщения "TOO LOW" если введенное число меньше загаданного.
    OutputHigh - Вывод сообщения "TOO HIGH" если введенное число больше загаданного.
"""

import random

# Генерируем случайное число от 1 до 100
targetNumber = random.randint(1, 100)

# Основной игровой цикл
while True:
    try:
        # Запрашиваем ввод числа у пользователя
        userGuess = int(input("Введите число от 1 до 100: "))
    except ValueError:
        print("Пожалуйста, введите целое число.")
        continue
    # Проверяем, угадано ли число
    if userGuess == targetNumber:
        print("GOT IT")
        break  # Завершаем цикл, если число угадано
    elif userGuess < targetNumber:
        print("TOO LOW")  # Сообщаем, что загаданное число больше
    else:
        print("TOO HIGH")  # Сообщаем, что загаданное число меньше
"""
Пояснения:
1.  **Импорт модуля `random`**:
   -  `import random`: Импортирует модуль `random`, который используется для генерации случайного числа.
2.  **Генерация случайного числа**:
    -   `targetNumber = random.randint(1, 100)`: Генерирует случайное целое число в диапазоне от 1 до 100 и сохраняет его в `targetNumber`. Это число, которое должен угадать пользователь.
3.  **Основной цикл `while True:`**:
    -   Бесконечный цикл, который продолжается до тех пор, пока игрок не угадает число (не сработает команда `break`).
    -   **Ввод данных**:
        -   `try...except ValueError`: Блок try-except обрабатывает возможные ошибки ввода. Если пользователь введет не целое число, то будет выведено сообщение об ошибке.
        -    `userGuess = int(input("Введите число от 1 до 100: "))`: Запрашивает у пользователя число и преобразует его в целое число, сохраняя результат в `userGuess`.
    -   **Условие победы**:
        -   `if userGuess == targetNumber:`: Проверяет, равно ли введенное число загаданному числу.
        -   `print("GOT IT")`: Выводит сообщение о победе.
        -   `break`: Завершает цикл (игру), если число угадано.
    -  **Подсказки**:
        - `elif userGuess < targetNumber:`: Проверяет, если введенное число меньше загаданного.
        - `print("TOO LOW")`: Выводит подсказку, что нужно ввести число больше.
        - `else:`: Если число не угадано и не меньше загаданного, то оно больше.
        - `print("TOO HIGH")`: Выводит подсказку, что нужно ввести число меньше.
"""
