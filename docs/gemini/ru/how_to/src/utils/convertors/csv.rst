Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот блок кода содержит функции для конвертации данных из CSV в формат JSON и обратно.  Функции `csv2dict` и `csv2ns` преобразуют данные CSV в словарь и объекты SimpleNamespace соответственно.  Функция `csv_to_json` конвертирует CSV в JSON и сохраняет его в файл JSON.  Код обрабатывает возможные ошибки во время чтения и преобразования данных.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:** Код импортирует необходимые библиотеки `json`, `csv`, `pathlib`, `typing`, `types`, `logger` (предположительно из другого модуля), чтобы обеспечить функциональность работы с файлами, данными и логированием.

2. **Определение функций `csv2dict` и `csv2ns`:** Эти функции принимают путь к файлу CSV и выполняют чтение файла с помощью `read_csv_as_dict` и `read_csv_as_ns` соответственно, которые, вероятно, определены в другом модуле `src.utils.csv`.  Результат преобразования возвращается в виде словаря (для `csv2dict`) или объекта SimpleNamespace (для `csv2ns`).

3. **Определение функции `csv_to_json`:** Эта функция конвертирует CSV-файл в JSON-формат.
   - Она принимает пути к CSV и JSON файлам, а также флаг `exc_info` для логирования ошибок.
   - Читает данные из CSV с помощью `read_csv_file`.
   - Если чтение успешно, сохраняет данные в JSON-файл с помощью `json.dump`, форматируя данные с отступами.
   - Возвращает преобразованные данные в формате JSON или `None`, если произошла ошибка.

4. **Обработка исключений:**  В функции `csv_to_json` обработка исключений (`try...except`) позволяет поймать возможные ошибки во время чтения или преобразования данных и вывести об этом информацию в лог.


Пример использования
-------------------------
.. code-block:: python

    import json
    from pathlib import Path
    from hypotez.src.utils.convertors.csv import csv_to_json  # Импортируйте нужную функцию

    # Пример использования:
    csv_file_path = Path('data.csv')  # Замените на ваш путь к CSV файлу
    json_file_path = Path('data.json')  # Замените на ваш путь к JSON файлу

    json_data = csv_to_json(csv_file_path, json_file_path)

    if json_data:
        print("Преобразованные данные JSON:")
        print(json.dumps(json_data, indent=4))  # Распечатайте данные в удобочитаемом формате

    # Обратите внимание на  Path('...'). Это лучше, чем '...' для работы с путями.