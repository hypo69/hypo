Как использовать этот блок кода
========================================================================================

Описание
-------------------------
Этот код импортирует необходимые библиотеки для синтеза речи Google (gtts) и pyttsx3.  Он определяет класс TTS, который инициализирует движок синтеза речи pyttsx3 и предоставляет базовый функционал для работы с голосами.  Код устанавливает глобальную переменную MODE со значением 'dev' и импортирует модуль header.  Класс TTS содержит конструктор (__init__), который инициализирует pyttsx3 и выводит информацию о доступных голосах.

Шаги выполнения
-------------------------
1. **Импорт библиотек:** Импортируются библиотеки `pyttsx3` и `gtts`.  Также импортируется модуль `header` и используется декоратор `attr` (от `attr`).
2. **Инициализация глобальной переменной:** Устанавливается глобальная переменная `MODE` со значением 'dev'.
3. **Инициализация класса TTS:** Создается экземпляр класса `TTS`.
4. **Инициализация движка синтеза речи:** Внутри конструктора класса `TTS` происходит инициализация движка синтеза речи `pyttsx3` (`tts = pyttsx3.init()`).
5. **Получение списка голосов:** Получаются доступные голоса (`voices = tts.getProperty('voices')`).
6. **Вывод информации о голосах:** Происходит циклический обход списка доступных голосов (`for v in voices:`) и вывод информации о каждом голосе (например, имя, язык).

Пример использования
-------------------------
.. code-block:: python

    import hypotez.src.goog.text_to_speech as tts

    # Использование класса TTS
    tts_instance = tts.TTS()

    # Дальнейшие действия для работы с голосами, например:
    # Получить номер голоса и установить его. (Если реализовано)
    # ...

    # Пример использования gTTS (если предполагается, что это часть кода).
    # from gtts import gTTS  # Убедитесь, что этот import есть
    # text = "Hello, world!"
    # tts_instance = gTTS(text=text)
    # tts_instance.save("output.mp3")