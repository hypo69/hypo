Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневую директорию проекта, начиная с текущей директории файла.  Функция ищет директории вверх по дереву, пока не найдет директорию, содержащую один из файлов, указанных в аргументе `marker_files`. Если такая директория найдена, то она добавляется в `sys.path`, что позволяет импортировать модули из проекта.  Код также считывает данные из файла `settings.json` и `README.MD`, если они существуют, и сохраняет их в переменные.  Далее код определяет различные переменные, хранящие информацию о проекте (имя, версия, описание, автор, права и т.д.) из загруженных данных.


Шаги выполнения
-------------------------
1. **Определение функции `set_project_root`**:  Функция принимает кортеж `marker_files` с именами файлов или директорий, которые будут использоваться для поиска корневой директории проекта.

2. **Получение текущей директории**:  Функция определяет текущую директорию (`current_path`) с использованием `Path(__file__).resolve().parent`.

3. **Поиск корневой директории**: Функция итеративно перебирает родительские директории (`current_path.parents`) и проверяет наличие файлов/папок из списка `marker_files` в каждой директории с помощью `any((parent / marker).exists() for marker in marker_files)`.

4. **Добавление в `sys.path`**: Если корневая директория найдена, она добавляется в список `sys.path`, что позволяет импортировать модули из этой директории.

5. **Возврат корневой директории**: Функция возвращает найденную корневую директорию (`__root__`).

6. **Загрузка настроек**: Код пытается загрузить настройки из файла `settings.json` в переменную `settings`.  Обработка ошибок `FileNotFoundError` и `json.JSONDecodeError` позволяет программе не аварийно завершаться при отсутствии или неверном формате файла.

7. **Загрузка описания**: Аналогично, код пытается загрузить описание проекта из файла `README.MD` в переменную `doc_str`.

8. **Получение переменных проекта**: Используя `settings.get()`, код получает значения из настроек, если они присутствуют, в противном случае использует значения по умолчанию. Записывает полученные данные в переменные проекта.

9. **Возвращение значений**: Программа возвращает значения переменных `__root__`, `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__`.


Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.suppliers.bangood.header import set_project_root

    # Пример использования для нахождения корневой директории
    project_root = set_project_root()
    print(f"Корневая директория проекта: {project_root}")

    # Пример использования для импорта модуля из проекта
    from src import gs  # Предполагая, что gs находится в корневом каталоге проекта

    # Обратите внимание, что для корректной работы примера необходимо установить
    # необходимые зависимости (например, 'packaging', 'json'),
    # и создать соответствующие файлы (pyproject.toml, requirements.txt, settings.json, README.MD)
    # в директории проекта.