Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код JavaScript отвечает за загрузку и сохранение настроек расширения. Он взаимодействует с браузером для получения, отображения и сохранения пользовательских атрибутов, CSS-стилей и размеров всплывающего окна. Код валидирует вводимые данные, проверяя имена атрибутов и размеры окна. При успешном сохранении, он отображает сообщение об успехе. В случае ошибки отображает сообщение об ошибке. Также реализована возможность загрузки значений по умолчанию.

Шаги выполнения
-------------------------
1. **Получение настроек:** Код запрашивает данные настроек у браузерного хранилища, используя `browser.runtime.sendMessage({ "event": "loadOptions" })`.
2. **Заполнение полей:** Полученные настройки (атрибуты, CSS, размеры окна) записываются в соответствующие поля формы.
3. **Валидация ввода:** При нажатии кнопки "Сохранить", код проверяет корректность введенных атрибутов и размеров всплывающего окна с помощью функций `isValidAttrNames()` и `isValidStyleLength()`.
4. **Обработка ошибки:** Если атрибуты или размеры некорректны, отображается соответствующее сообщение об ошибке в элементе `message`.
5. **Сохранение настроек:** При успешной валидации, настройки сохраняются в хранилище браузера, используя `browser.storage.sync.set()`.
6. **Обратная связь:** При успешном сохранении, отображается сообщение об успехе, содержащее инструкции по приложению новых настроек. В случае ошибки сохранения отображается сообщение с информацией об ошибке.
7. **Загрузка значений по умолчанию:**  По нажатию кнопки "Показать значения по умолчанию", код устанавливает значения атрибутов и размеров всплывающего окна на значения по умолчанию, а также загружает CSS по умолчанию.

Пример использования
-------------------------
.. code-block:: javascript

    // Предполагаемый вызов функции, которая возвращает данные из браузера
    function loadOptions() {
        return {
            attributes: {
                element: "data-tryxpath-element",
                context: "data-tryxpath-context",
                // ... другие атрибуты
            },
            css: "body {width: 367px; height: auto;}",
            popupCss: "body{width:367px;height:auto;}"
        };
    }


    // Предполагаемое событие клика
    document.getElementById("save").addEventListener("click", () => {
        const options = loadOptions();
        if(options) {
          browser.storage.sync.set(options).then(() => {
            // Обработка успеха
          }).catch(err => {
            // Обработка ошибки
          });
        }
    });