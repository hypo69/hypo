Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет подкласс `PlaywrightCrawler`, называемый `Playwrid`. Он предоставляет дополнительную функциональность, такую как возможность устанавливать пользовательские настройки браузера, профили и параметры запуска с помощью Playwright.  Код загружает настройки из файла `playwrid.json` в папке `webdriver/playwright`.  Также поддерживает использование дополнительных файлов настроек, имена которых передаются в качестве аргумента `settings_name`.  Код настраивает параметры запуска Playwright (например, `headless`, `args`, `user-agent`) на основе загруженных настроек.  В случае ошибки во время выполнения, регистрирует критическую ошибку.

Шаги выполнения
-------------------------
1. **Импортирование необходимых модулей:**  Код импортирует необходимые библиотеки, включая `PlaywrightCrawler`, `Path`, `SimpleNamespace`, и другие для работы с файлами, настройками и логированием.

2. **Определение класса `Playwrid`:**  Создается класс `Playwrid`, который наследуется от `PlaywrightCrawler`. Это подкласс добавляет функциональность для настройки параметров запуска и загрузки настроек.

3. **Метод `__init__`:**  Инициализирует экземпляр `Playwrid` с опциональными параметрами `settings_name` (имя файла настроек) и `user_agent` (настройки user-agent). Загружает настройки из файла настроек, настраивает параметры запуска (`launch_options`) и вызывает конструктор базового класса `PlaywrightCrawler` для создания объекта Playwright.

4. **Метод `_load_settings`:**  Загружает настройки из файла `playwrid.json` или из файла с именем, указанным в `settings_name`, если таковой существует.  Возвращает объект `SimpleNamespace` с загруженными настройками.

5. **Метод `_set_launch_options`:**  Настраивает параметры запуска Playwright (`options`) на основе загруженных настроек, включая `headless` и `args`. Если в настройках присутствует `user-agent`, он также добавляется в опции.

6. **Метод `start`:**  Запускает Playwright Crawler и переходит на указанный URL.  Вызывает метод `run()` базового класса.  Включает обработку исключений, чтобы логгировать ошибки.

7. **Свойство `current_url`:**  Пока не реализовано.


Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.webdriver.playwright.playwrid import Playwrid

    # Создание экземпляра Playwrid с пользовательскими настройками
    browser = Playwrid(settings_name="custom_settings")

    # Запуск браузера и навигация на страницу
    browser.start("https://www.example.com")