Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневую директорию проекта.  Функция ищет вверх по дереву директорий, начиная с текущей,  и останавливается, когда встречает директорию, содержащую один из указанных маркеров (например, `pyproject.toml`, `requirements.txt`, `.git`).  Затем код устанавливает корневую директорию в `sys.path`, что позволяет импортировать модули из корня проекта.  Далее код загружает настройки из файла `settings.json` и документацию из `README.MD`, если такие файлы существуют.  Наконец, он инициализирует переменные, содержащие информацию о проекте, например, его название, версию, автора и прочее. Эти переменные могут быть использованы в других частях проекта.

Шаги выполнения
-------------------------
1. Импортирует необходимые модули (`sys`, `json`, `packaging.version`, `pathlib`).
2. Определяет функцию `set_project_root(marker_files)`.
3. Получает текущий путь к файлу.
4. Инициализирует переменную `__root__` текущим путем.
5. Итеративно проходит вверх по дереву директорий от текущей директории.
6. Для каждой родительской директории проверяет наличие указанных маркеров файлов (`marker_files`).
7. Если один из маркеров файлов найден, то корневая директория `__root__` обновляется до родительской.
8. Если корневая директория не добавлена в `sys.path`, то добавляет её в `sys.path` в начало списка.
9. Возвращает найденную корневую директорию `__root__`.
10. Вызывает функцию `set_project_root()` для получения корневой директории проекта.
11. Загружает настройки из файла `settings.json` в переменную `settings`. Обрабатывает исключения `FileNotFoundError` и `json.JSONDecodeError`.
12. Загружает документацию из файла `README.MD` в переменную `doc_str`. Обрабатывает исключения `FileNotFoundError` и `json.JSONDecodeError`.
13. Заполняет переменные, связанные с проектом (`__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__`) значениями из `settings` или задаёт значения по умолчанию.

Пример использования
-------------------------
.. code-block:: python

    # В этом примере предполагается, что у вас есть файл settings.json в корне проекта
    # и файл README.MD в корне проекта.
    import os
    from pathlib import Path
    import sys
    # ... (включите остальные импорты, если они нужны)
    from hypotez.src.endpoints.hypo69.small_talk_bot.header import set_project_root


    # Пример вызова функции для поиска корня проекта
    root_directory = set_project_root()
    print(f"Корневая директория проекта: {root_directory}")

    # Пример использования переменных, инициализированных в header.py
    print(f"Название проекта: {__project_name__}")
    print(f"Версия проекта: {__version__}")
    print(f"Доступ к README.MD: {__doc__}")


    # Доступ к файлам и директориям в корне проекта
    readme_path = root_directory / "README.MD"
    if readme_path.exists():
        with open(readme_path, 'r') as readme_file:
            print(readme_file.read())
    else:
        print("Файл README.MD не найден.")