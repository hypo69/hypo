Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код содержит тест функции `enrich_content` класса `TinyEnricher`. Функция предназначена для обогащения контента документа (в данном случае, текста), увеличивая его объем в три раза.  Тест проверяет, что результат обогащения не равен `None` и что его длина не меньше, чем в три раза больше длины исходного контента.  Код использует фреймворк `pytest` для тестирования. Он подключает необходимые модули, определяет входные данные (исходный текст и требования к обогащению), вызывает функцию `enrich_content`, и проверяет результат.

Шаги выполнения
-------------------------
1. Импортирует необходимые модули: `pytest`, `textwrap`, `logging`, `sys`, и `TinyEnricher` из модуля `tinytroupe.enrichment`.
2. Настраивает логирование.
3. Добавляет пути к каталогам, чтобы система Python могла найти нужные файлы.
4. Определяет переменную `content_to_enrich`, содержащую исходный текст документа.
5. Определяет переменную `requirements`, содержащую требования к обогащению текста.
6. Создает экземпляр класса `TinyEnricher`.
7. Вызывает метод `enrich_content` с заданными параметрами: `requirements`, `content`, `content_type`, `context_info`, `context_cache`, `verbose`.
8. Проверяет, что результат не равен `None`.
9. Проверяет, что длина результата не меньше, чем в три раза больше длины исходного контента.
10. Выводит отладочную информацию (длину результата и исходного контента).

Пример использования
-------------------------
.. code-block:: python

    import textwrap
    
    # ... (Импорт других необходимых модулей) ...
    
    content_to_enrich = textwrap.dedent(\\\
    """\nВаш исходный текст\n""").strip()
    
    requirements = textwrap.dedent(\\\
    """\nТребования к обогащению\n""").strip()
    
    try:
        result = TinyEnricher().enrich_content(requirements=requirements, \
                                               content=content_to_enrich, \
                                               content_type="Document", \
                                               context_info="Информация о контексте",\
                                               context_cache=None, verbose=True)
        
        if result is not None and len(result) >= len(content_to_enrich) * 3:
            print("Обогащение выполнено успешно!")
            print(result) # Выведите результат
        else:
            print("Проверка не пройдена.")
    
    except Exception as e:
        print(f"Ошибка: {e}")