Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код обрабатывает события клика на иконку расширения Chrome и получает URL текущей вкладки. Затем, если получено сообщение 'collectData', он отправляет URL на сервер, используя `sendDataToServer`. Он использует хранилище `chrome.storage.local` для получения предварительно собранных данных, если они есть, и отправляет их на сервер.

Шаги выполнения
-------------------------
1. Функция `chrome.browserAction.onClicked.addListener(tab => { ... });` регистрирует обработчик для клика на иконку расширения. При клике на иконку расширения, функция `chrome.tabs.sendMessage` отправляет сообщение с действием `collectData` и URL текущей вкладки в активную вкладку.

2. Функция `chrome.runtime.onMessage.addListener((message, sender, sendResponse) => { ... });` слушает сообщения, отправленные другими частями расширения, например, скриптами контента.

3. Если получено сообщение с действием 'collectData', функция `sendDataToServer(message.url)` вызывается с URL.

4. Функция `sendDataToServer(url)` получает предварительно собранные данные из хранилища `chrome.storage.local`.

5. Если данные найдены, функция `fetch(serverUrl, { ... });` отправляет POST-запрос на сервер с данными, используя URL из конфигурации.

6. Ответ сервера обрабатывается. Если запрос успешен, выводится сообщение об успешной отправке. В противном случае, выводится сообщение об ошибке.

7. Если предварительно собранные данные не найдены, выводится сообщение об отсутствии данных.


Пример использования
-------------------------
.. code-block:: javascript
    // В контент-скрипте (content.js)
    chrome.runtime.sendMessage({ action: 'collectData', url: window.location.href });
    // В другом скрипте расширения
    // ...
    // (Собираете данные)
    // ...
    chrome.storage.local.set({ collectedData: collectedData }, () => {
        // данные успешно сохранены
    });