Поставщик.
Класс поставщика описывает поведение программы для получения конечных данных. 
По сути данные информация любого типа, которую можно каталогизировать. для удобства я использую термин товар. 
При прямом парсинге сайта поставщик использует webdriver для получения данных с веб-страниц. выглядит это так:

---
 поставщик читает сценарий и через класс webdriver получает значения таких полей Как название краткое описание характеристики и цена. сырые данные отправляются в класс товар где структурируется конечный формат класса.

Аналогичным образом при помощи других классов поставщик может получать данные через API по почте или ссылке.

В будущем будет реализован слой коннектор между поставщиком и модулями получения и обработки целевых данных
---
В модуле каждого поставщика находится файл settings.json, в котором прописаны индивидуальные параметры для парсинга. в частности он содержит информация логин, списки сценариев. На составлении сценария в я подробно остановлюсь позже.


Поставщик запускается методом run()  класса Supplier. 
В обязательном параметре передаётся префикс присвоенный каждому поставщику.
from suppliers import supplier
supplier_prefix = ksp
s = supplier(supplier_prefix = supplier_prefix) 
s.run()
Что такое префикс поставщика?
 это имя которое отдаю модулю отвечающий за поведение этого поставщика. например....

При Инициализации класса поставщика загружаются параметры установок по умолчанию описанные в файле json с префиксом поставщика

Пример файла json:

По умолчанию метод Run запускает исполнение списка сценариев. В сценариях прописана последовательность действий для получения параметров товара.


 как поставщик получает исходные данные?
К Исходным данным у поставщика есть доступ через ряд коннекторов. это доступ по ссылке ftp, http, mail. подключение к базе данных поставщика, получение данных сайта поставщика при помощи API или прямой парсинг страниц. последний способ самый трудоемкий и медленный. но в большинстве случаев это единственный способ получения информации от китайских производителей.


Парсинг инструментом selenium.

Selenium позволяет работать напрямую с элементами дом дерева HTML страницы.
DOM дерево. 

принцип работы веб драйвера описан в разделе Driver.

 драйвер позволяет классу поставщик получить информацию о конкретном поле в дом дереве буквально несколькими методами.    execute_locator

Принцип работы локатора описан в разделе локатор

Исполняет сценарий поставщик последовательно один за другим собирает данные о товарах один за другим. 