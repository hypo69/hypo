Как использовать класс TinyTool
========================================================================================

Описание
-------------------------
Класс `TinyTool` служит основой для создания специализированных инструментов, которые могут быть использованы агентами. Он предоставляет методы для инициализации, обработки действий, проверки прав доступа, а также генерирует подсказки для определений и ограничений действий.  Этот класс абстрактный и требует реализации методов `_process_action`, `actions_definitions_prompt`, и `actions_constraints_prompt` в подклассах.

Шаги выполнения
-------------------------
1. **Инициализация:**  Создается экземпляр класса `TinyTool` с заданными параметрами:
    - `name`: Имя инструмента.
    - `description`: Краткое описание инструмента.
    - `owner`: Агент, владеющий инструментом (по умолчанию - любой агент).
    - `real_world_side_effects`: Флаг, указывающий, может ли инструмент иметь последствия в реальном мире.
    - `exporter`: Экспортер, позволяющий экспортировать результаты работы инструмента.
    - `enricher`: Обогатитель, улучшающий результаты.


2. **Обработка действия:** Метод `process_action` обрабатывает действие, переданное инструменту.
    - Вызывается `_protect_real_world()`, чтобы вывести предупреждение, если инструмент имеет реальные последствия.
    - Вызывается `_enforce_ownership(agent)`, чтобы проверить, владеет ли агент инструментом.
    - Вызывается абстрактный метод `_process_action(agent, action)`, который должен быть реализован в подклассах.


3. **Определение и ограничения действий:** Методы `actions_definitions_prompt` и `actions_constraints_prompt` генерируют подсказки для определения и ограничений доступных действий.

Пример использования
-------------------------
.. code-block:: python

    import json
    from tinytroupe.tools import TinyTool, TinyWordProcessor  # Импортируем необходимые классы

    # Создаем экземпляр инструмента
    word_processor = TinyWordProcessor(owner="agent1", exporter=None, enricher=None)

    # Пример действия в формате JSON
    action = {
        'type': 'WRITE_DOCUMENT',
        'content': json.dumps({
            'title': 'Мой документ',
            'content': '# Заголовок\nТекст документа.',
            'author': 'agent1'
        })
    }

    # Обработка действия
    result = word_processor.process_action(agent="agent1", action=action)

    if result:
        print("Документ успешно создан.")
    else:
        print("Ошибка при создании документа.")