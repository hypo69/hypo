
"""
GUESS:
=================
Сложность: 3
-----------------
Игра "Угадай число" - это простая игра, в которой компьютер выбирает случайное число от 1 до 100, а игрок пытается его угадать. После каждой попытки игроку сообщается, было ли его предположение слишком высоким или слишком низким. Цель игры - угадать число за наименьшее количество попыток.

Правила игры:
1. Компьютер выбирает случайное целое число в диапазоне от 1 до 100.
2. Игрок вводит свое предположение.
3. Компьютер сообщает, является ли предположение слишком низким, слишком высоким или правильным.
4. Игра продолжается, пока игрок не угадает число.
-----------------
Алгоритм:
1. Инициализировать счетчик числа попыток в 0.
2. Сгенерировать случайное число от 1 до 100 и запомнить его как targetNumber.
3. Начать цикл:
   3.1. Увеличить счетчик попыток на 1.
   3.2. Запросить у игрока предположение.
   3.3. Если предположение равно targetNumber, перейти к шагу 4.
   3.4. Если предположение меньше targetNumber, вывести "TOO LOW" и вернуться к шагу 3.
   3.5. Если предположение больше targetNumber, вывести "TOO HIGH" и вернуться к шагу 3.
4. Вывести сообщение "YOU GOT IT IN {количество попыток} GUESSES!"
5. Конец игры.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeVariables["<p align='left'>Инициализация переменных:
    <code><b>
    numberOfGuesses = 0
    targetNumber = random(1, 100)
    </b></code></p>"]
    InitializeVariables --> LoopStart{"Начало цикла: пока не угадано"}
    LoopStart -- Да --> IncreaseGuesses["<code><b>numberOfGuesses = numberOfGuesses + 1</b></code>"]
    IncreaseGuesses --> InputGuess["Ввод числа пользователем: <code><b>userGuess</b></code>"]
    InputGuess --> CheckGuess{"Проверка: <code><b>userGuess == targetNumber?</b></code>"}
    CheckGuess -- Да --> OutputWin["Вывод сообщения: <b>YOU GOT IT IN <code>{numberOfGuesses}</code> GUESSES!</b>"]
    OutputWin --> End["Конец"]
    CheckGuess -- Нет --> CheckLow{"Проверка: <code><b>userGuess < targetNumber</b></code>?"}
    CheckLow -- Да --> OutputLow["Вывод сообщения: <b>TOO LOW</b>"]
    OutputLow --> LoopStart
    CheckLow -- Нет --> OutputHigh["Вывод сообщения: <b>TOO HIGH</b>"]
    OutputHigh --> LoopStart
    LoopStart -- Нет --> End
```
Legenda:
    Start - Начало программы.
    InitializeVariables - Инициализация переменных: numberOfGuesses (количество попыток) устанавливается в 0, а targetNumber (загаданное число) генерируется случайным образом от 1 до 100.
    LoopStart - Начало цикла, который продолжается, пока число не угадано.
    IncreaseGuesses - Увеличение счетчика количества попыток на 1.
    InputGuess - Запрос у пользователя ввода числа и сохранение его в переменной userGuess.
    CheckGuess - Проверка, равно ли введенное число userGuess загаданному числу targetNumber.
    OutputWin - Вывод сообщения о победе, если числа равны, с указанием количества попыток.
    End - Конец программы.
    CheckLow - Проверка, меньше ли введенное число userGuess загаданного числа targetNumber.
    OutputLow - Вывод сообщения "TOO LOW", если введенное число меньше загаданного.
    OutputHigh - Вывод сообщения "TOO HIGH", если введенное число больше загаданного.
"""
import random

__author__ = 'hypo69 (hypo69@davidka.net)'


# Инициализация количества попыток
numberOfGuesses = 0
# Генерируем случайное число от 1 до 100
targetNumber = random.randint(1, 100)

# Основной игровой цикл
while True:
    # Увеличиваем количество попыток
    numberOfGuesses += 1
    # Запрашиваем ввод числа у пользователя
    try:
        userGuess = int(input("Угадай число от 1 до 100: "))
    except ValueError:
        print("Пожалуйста, введите целое число.")
        continue

    # Проверяем, угадано ли число
    if userGuess == targetNumber:
        print(f"YOU GOT IT IN {numberOfGuesses} GUESSES!")
        break  # Завершаем цикл, если число угадано
    elif userGuess < targetNumber:
        print("TOO LOW")  # Сообщаем, что загаданное число больше
    else:
        print("TOO HIGH")  # Сообщаем, что загаданное число меньше

"""
Пояснения:
1.  **Импорт модуля `random`**:
    - `import random`: Импортирует модуль `random`, который используется для генерации случайного числа.
2.  **Инициализация переменных**:
    - `numberOfGuesses = 0`: Устанавливает начальное количество попыток равным 0.
    - `targetNumber = random.randint(1, 100)`: Генерирует случайное целое число от 1 до 100, которое нужно угадать.
3.  **Основной цикл `while True:`**:
    - `while True:`: Запускает бесконечный цикл, который будет выполняться до тех пор, пока игрок не угадает число.
    - `numberOfGuesses += 1`: Увеличивает счетчик количества попыток на 1 с каждой итерацией цикла.
    - **Ввод данных**:
        -   `try...except ValueError`: Блок try-except обрабатывает возможные ошибки ввода. Если пользователь введет не целое число, то будет выведено сообщение об ошибке.
        -   `userGuess = int(input("Угадай число от 1 до 100: "))`: Запрашивает у пользователя число и преобразует его в целое число, сохраняя результат в `userGuess`.
    -  **Условия**:
        - `if userGuess == targetNumber:`: Проверяет, равно ли введенное число загаданному.
            - `print(f"YOU GOT IT IN {numberOfGuesses} GUESSES!")`: Выводит сообщение о победе и количестве попыток.
            - `break`: Прерывает цикл while, так как игра окончена.
        - `elif userGuess < targetNumber:`: Если введенное число меньше загаданного.
           - `print("TOO LOW")`: Выводит сообщение "TOO LOW".
        - `else:`: Если введенное число больше загаданного.
           - `print("TOO HIGH")`: Выводит сообщение "TOO HIGH".
"""
```