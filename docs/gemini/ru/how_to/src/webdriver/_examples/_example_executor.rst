Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код демонстрирует использование класса `ExecuteLocator` для работы с веб-драйвером Selenium. Он показывает примеры поиска элементов на веб-странице по различным локеторам (XPath, CSS), выполнение действий с элементами (клика, отправки сообщений), обработку ошибок и работу с несколькими локеторами. Код также включает примеры использования различных параметров, таких как `event`, `attribute`, `if_list`, `mandatory` и `locator_description` в локеторах.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:** Импортируются классы `webdriver.Chrome`, `ExecuteLocator`, `gs` и `ExecuteLocatorException` из соответствующих модулей.

2. **Создание экземпляра веб-драйвера:** Создается экземпляр веб-драйвера Chrome с использованием пути к исполняемому файлу драйвера, полученному из переменной `gs['chrome_driver_path']`.  Открывается веб-сайт `https://example.com`.

3. **Создание экземпляра `ExecuteLocator`:** Создается экземпляр класса `ExecuteLocator` с передачей в него экземпляра веб-драйвера.

4. **Примеры использования `execute_locator`:**
    - **Простой пример:** Выполняется поиск элемента по XPath и извлечение текста заголовка страницы.  Результат выводится на консоль.
    - **Пример с различными событиями и атрибутами:** Выполняется поиск и обработка элементов с разными параметрами, включая события (`click()`) и атрибуты.  Результат выводится на консоль.
    - **Обработка ошибок:** Показывается как обрабатывать возможные ошибки при выполнении локеторов, используя блок `try...except` и параметр `continue_on_error`. Если ошибка произойдет, то программа выводит сообщение об ошибке и продолжает выполнение.
    - **Отправка сообщений:** Используется метод `send_message` для отправки сообщения в текстовое поле. Пример показывает, как передавать сообщение, скорость ввода и опцию продолжения при ошибке. Результат выводится на консоль.
    - **Работа с множественными локеторами:** Пример использования списка локеторов для работы с несколькими элементами.  Возвращает список результатов для каждого локетора.
    - **Использование `evaluate_locator`:** Получение значения атрибута элемента страницы.
    - **Обработка исключений во время выполнения локетора:** Пример демонстрирует как обрабатывать исключения, возникающие при выполнении локетора.
    - **Полный пример тестирования:**  Демонстрация использования всех ключевых функций.

5. **Закрытие веб-драйвера:** Закрывается экземпляр веб-драйвера с помощью метода `driver.quit()`.

Пример использования
-------------------------
.. code-block:: python

    from selenium import webdriver
    from src.webdriver.executor import ExecuteLocator
    from src import gs  # Предполагается, что gs содержит путь к драйверу
    from src.logger.exceptions import ExecuteLocatorException

    def main():
        # ... (остальная часть кода)


    if __name__ == "__main__":
        main()