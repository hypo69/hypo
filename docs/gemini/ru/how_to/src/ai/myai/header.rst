Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневую директорию проекта.  Функция ищет в директориях, начиная с текущей, файлы `pyproject.toml`, `requirements.txt` и `.git`.  Если один из этих файлов найден, функция возвращает путь к директории, в которой он находится.  Если корневая директория не найдена, возвращает текущую директорию.  Кроме того, код загружает настройки проекта из файла `settings.json` и документацию из `README.MD`, если они существуют.  И, наконец, устанавливает глобальные переменные, такие как `__root__`, `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__`, отражающие информацию из `settings.json` или имеющие значения по умолчанию.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек**: Функция импортирует `sys`, `json`, `Version` из `packaging`, `Path` из `pathlib`.
2. **Определение функции `set_project_root`**: Функция принимает кортеж `marker_files`, содержащий имена файлов/директорий, по которым будет определяться корневая директория.
3. **Начальная установка корневой директории**: В качестве начального значения корневой директории берется родительская директория файла `header.py`.
4. **Поиск корневой директории**: Функция итерирует по родительским директориям текущей директории. Для каждой директории проверяется наличие файлов из `marker_files`. Если один из этих файлов существует, то функция устанавливает `__root__` в текущую директорию и прерывает цикл.
5. **Добавление корневой директории в `sys.path`**: Если корневая директория не была добавлена в `sys.path`, то добавляется в начало.
6. **Возвращение корневой директории**: Функция возвращает найденную корневую директорию.
7. **Получение корневой директории проекта**: Переменная `__root__` получает значение, возвращённое функцией `set_project_root()`.
8. **Загрузка настроек из файла `settings.json`**: Файл `settings.json` ищется в корневой директории проекта в директории `src`. Данные из файла загружаются в переменную `settings`. Обработка ошибок ( `FileNotFoundError`, `json.JSONDecodeError`) пропускается в случае отсутствия файла.
9. **Загрузка документации из файла `README.MD`**: Файл `README.MD` ищется в корневой директории проекта в директории `src`. Документация читается в переменную `doc_str`.  Обработка ошибок ( `FileNotFoundError`, `json.JSONDecodeError`) пропускается в случае отсутствия файла.
10. **Установка глобальных переменных**: Переменные `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__` получают значения из переменной `settings` или значения по умолчанию, если соответствующие ключи отсутствуют.


Пример использования
-------------------------
.. code-block:: python

    # Пример использования функции set_project_root
    project_root = set_project_root()
    print(f"Корневая директория проекта: {project_root}")

    # Пример использования глобальных переменных
    print(f"Название проекта: {__project_name__}")
    print(f"Версия проекта: {__version__}")
    print(f"Документация: {__doc__}")