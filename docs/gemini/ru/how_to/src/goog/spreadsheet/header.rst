Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневую директорию проекта, начиная с текущей директории файла.  Функция ищет файлы или директории-маркеры (например, `pyproject.toml`, `requirements.txt`, `.git`) в родительских директориях текущего файла, и останавливается, когда находит директорию, содержащую хотя бы один из этих маркеров. Также, функция добавляет найденную директорию в `sys.path`, что позволяет импортировать модули из проекта.  Затем, код загружает настройки проекта из файла `settings.json` и, если возможно, строит строку документации из файла `README.MD`.  И, наконец, код собирает информацию о проекте (имя, версия, описание, автор, авторские права, ссылка на поддержку разработчика).

Шаги выполнения
-------------------------
1. **Определение функции `set_project_root`**: Функция ищет корневую директорию проекта, используя корневые файлы в качестве маркеров.
2. **Поиск родительских директорий**:  Функция просматривает родительские директории текущей директории.
3. **Проверка наличия маркеров**: Для каждой родительской директории, проверяет, существуют ли в ней файлы/директории, перечисленные в аргументе `marker_files`.
4. **Добавление директории в `sys.path`**: Если корневая директория найдена, она добавляется в переменную `sys.path`.
5. **Возвращение корневой директории**: Функция возвращает найденную директорию проекта.
6. **Получение настроек проекта**:  Код пытается загрузить настройки из файла `settings.json` в переменную `settings`. Если файл не найден или содержит некорректный JSON, переменная `settings` останется `None`.
7. **Получение строки документации**:  Код пытается загрузить строку документации из файла `README.MD` в переменную `doc_str`.  Аналогично, если файл не найден или содержит некорректные данные, переменная `doc_str` останется `None`.
8. **Извлечение информации о проекте**: Код получает значения из переменной `settings` (если она не `None`), в соответствии с ключами `project_name`, `version`, `author`, `copyright`, `cofee` и заполняет соответствующие переменные. Если какой-то из ключей отсутствует или `settings` является `None`, по умолчанию используются значения.

Пример использования
-------------------------
.. code-block:: python

    # Предположим, что текущий файл находится в директории 'myproject/src/goog/spreadsheet'
    # и корневая директория проекта находится в 'myproject'
    # В директории 'myproject' есть файлы pyproject.toml, requirements.txt и settings.json.

    from hypotez.src.goog.spreadsheet.header import set_project_root

    project_root = set_project_root()
    print(f"Корневая директория проекта: {project_root}")
    print(f"Имя проекта: {__project_name__}")
    print(f"Версия проекта: {__version__}")
    print(f"Документация: {__doc__}")