Генерация контекстов для создания описаний персонажей
==========================================================================================

Описание
-------------------------
Этот блок кода предназначен для генерации массива контекстов, которые будут использованы для создания описаний персонажей.  Вводной информацией является широкий контекст, содержащий детали о желаемых персонажах (демографические параметры, физические характеристики, поведение, убеждения и т.д.).  На выходе генерируется массив JSON, содержащий более конкретные контексты, выведенные из исходного.

Шаги выполнения
-------------------------
1. **Анализ вводных данных**:  Код принимает на вход описание контекста, например, "сгенерировать 3 описания персонажей латиноамериканцев в возрасте от 20 до 40 лет, с различным экономическим статусом, с различным религиозным взглядом, семейным положением, наличием детей и профессиональной занятостью".
2. **Генерация контекстов**:  Код обрабатывает вводные данные и создает массив контекстов для последующего использования.  Каждый контекст является строкой, описывающей конкретного персонажа (например, "Мексиканский юрист, работающий в другой сфере, не женат, увлекается спортом и кино").
3. **Формирование JSON ответа**: Результатом работы является массив JSON, содержащий сгенерированные контексты для описаний персонажей.


Пример использования
-------------------------
.. code-block:: python

    import json

    def generate_person_contexts(input_context, num_persons=3):
        # Пример реализации (замените на вашу логику)
        # предполагаем, что input_context - это строка с описанием
        contexts = []
        for _ in range(num_persons):
            context = f"Пример персонажа: {input_context}"  # Замените на вашу логику генерации
            contexts.append(context)
        return json.dumps(contexts, indent=2)

    input_context = "Мексиканский человек, у которого была юридическая специальность, но сейчас работает в другой отрасли, не женат, ему нравятся спорт и кино"

    output_contexts = generate_person_contexts(input_context)


    print(output_contexts)