"""
FROG:
=================
Сложность: 5
-----------------
Игра "Лягушка" представляет собой простую текстовую игру, где игрок управляет лягушкой, которая пытается перебраться через реку по плавающим бревнам. Игрок вводит направление (влево или вправо), а игра обновляет положение лягушки и бревен, отображая текущую ситуацию на экране. Цель игры - добраться до другого берега, не упав в воду.

Правила игры:
1. Лягушка начинает на берегу реки (позиция 0).
2. По реке плывут бревна, представленные числами в массиве.
3. Игрок вводит направление "LEFT" или "RIGHT", чтобы переместить лягушку.
4. Если лягушка попадает на бревно, она продвигается вместе с бревном.
5. Если лягушка не попадает на бревно, она падает в воду и игра заканчивается.
6. Цель - добраться до другого берега (позиция 10), не упав в воду.
-----------------
Алгоритм:
1.  Установить начальное положение лягушки на берегу реки (позиция 0).
2.  Установить начальную позицию бревен на реке.
3.  Пока лягушка не достигла другого берега (позиция 10):
    3.1 Отобразить текущее положение лягушки и бревен на экране.
    3.2 Запросить у игрока ввод направления движения (LEFT или RIGHT).
    3.3 Обновить положение лягушки в соответствии с введенным направлением.
    3.4 Переместить бревна на реке.
    3.5 Проверить, находится ли лягушка на бревне.
        - Если лягушка не на бревне, вывести сообщение "SPLOOSH" и завершить игру.
    3.6 Если лягушка достигла другого берега (позиция 10), вывести сообщение о победе и завершить игру.
4. Конец игры.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeVariables["<p align='left'>Инициализация переменных:<br>
    <code>frogPosition = 0<br>
    river = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] <br>
    logPositions = [0, 1, 2, 4, 6]
    </code></p>"]
    InitializeVariables --> LoopStart{"Начало цикла: пока лягушка не на другом берегу"}
    LoopStart --> DisplayState["Отобразить состояние реки и лягушки"]
    DisplayState --> InputDirection["Запросить у игрока направление (LEFT/RIGHT)"]
    InputDirection --> UpdateFrogPosition["<p align='left'>Обновить позицию лягушки:<br>
    <code>if direction == 'LEFT': frogPosition -= 1<br>
    if direction == 'RIGHT': frogPosition += 1
    </code></p>"]
    UpdateFrogPosition --> MoveLogs["<p align='left'>Переместить бревна: <br>
    <code>for each log: logPosition += 1, if logPosition > 9, logPosition=0
    </code></p>"]
    MoveLogs --> CheckLog["Проверка: <code>frogPosition in logPositions?</code>"]
    CheckLog -- Да --> CheckWinCondition{"Проверка: <code>frogPosition == 10?</code>"}
    CheckWinCondition -- Да --> OutputWin["Вывод сообщения: <b>YOU MADE IT!</b>"]
    OutputWin --> End["Конец"]
    CheckWinCondition -- Нет --> LoopStart
    CheckLog -- Нет --> OutputLose["Вывод сообщения: <b>SPLOOSH!</b>"]
    OutputLose --> End
    LoopStart -- Нет --> End

```
Legenda:
    Start - Начало программы.
    InitializeVariables - Инициализация переменных: frogPosition (позиция лягушки) устанавливается в 0, river (река) – список из 10 нулей, logPositions (позиции бревен) – список начальных позиций бревен.
    LoopStart - Начало цикла, который продолжается, пока лягушка не достигнет другого берега.
    DisplayState - Отображение текущего состояния реки и положения лягушки.
    InputDirection - Запрос у игрока направления движения (LEFT или RIGHT).
    UpdateFrogPosition - Обновление позиции лягушки в соответствии с введенным направлением.
    MoveLogs - Перемещение бревен на реке, каждое бревно двигается на одну позицию вперед, если позиция больше 9, она обнуляется.
    CheckLog - Проверка, находится ли лягушка на бревне.
    CheckWinCondition - Проверка, достигла ли лягушка позиции 10 (другой берег).
    OutputWin - Вывод сообщения о победе ("YOU MADE IT!") и завершение игры.
    OutputLose - Вывод сообщения о проигрыше ("SPLOOSH!") и завершение игры.
    End - Конец программы.
"""


__author__ = 'hypo69 (hypo69@davidka.net)'

import random

# Инициализация начальных значений
frogPosition = 0 # Позиция лягушки
river = [0] * 10 # Река представлена списком из 10 элементов (0 - вода, 1 - бревно)
logPositions = [0, 1, 2, 4, 6] # Начальные позиции бревен

# Основной игровой цикл
while True:
    # Отображение текущего состояния реки и позиции лягушки
    river_display = list(river)
    river_display[frogPosition] = 'F'  # Ставим лягушку на реку
    print(' '.join(map(str,river_display)))

    # Проверка условия победы
    if frogPosition == 10:
        print("YOU MADE IT!")
        break  # Завершение игры, если лягушка добралась до другого берега

    # Запрос направления движения у пользователя
    direction = input("LEFT or RIGHT? ").upper()  # Преобразование ввода в верхний регистр

    # Обновление позиции лягушки
    if direction == "LEFT":
        frogPosition -= 1
    elif direction == "RIGHT":
        frogPosition += 1

    # Обновление позиции бревен
    for i in range(len(logPositions)):
        logPositions[i] = (logPositions[i] + 1) % 10


    # Проверка, находится ли лягушка на бревне
    if frogPosition not in logPositions:
        print("SPLOOSH!")
        break  # Завершение игры, если лягушка не на бревне
"""
Пояснения:
1.  **Инициализация переменных**:
    -  `frogPosition = 0`: Инициализирует позицию лягушки на берегу реки.
    -   `river = [0] * 10`: Создает список из 10 элементов, представляющих реку, где `0` означает воду.
    -   `logPositions = [0, 1, 2, 4, 6]`: Задает начальные позиции бревен на реке.
2.  **Основной игровой цикл `while True:`**:
    -   Цикл продолжается до тех пор, пока не будет достигнут конец игры.
    -   **Отображение текущего состояния**:
        -   `river_display = list(river)`: Создает копию списка `river`.
        -  `river_display[frogPosition] = 'F'`: Помечает позицию лягушки на реке символом `'F'`.
        -   `print(' '.join(map(str,river_display)))`: Выводит текущее состояние реки и лягушки на экран.
    -   **Проверка условия победы**:
        -   `if frogPosition == 10:`: Проверяет, достигла ли лягушка позиции 10 (другой берег).
        -   `print("YOU MADE IT!")`: Выводит сообщение о победе, если лягушка добралась до другого берега.
        -   `break`: Завершает игровой цикл.
    -   **Запрос направления движения**:
        -  `direction = input("LEFT or RIGHT? ").upper()`: Запрашивает у пользователя ввод направления движения ('LEFT' или 'RIGHT') и преобразует его в верхний регистр.
    -  **Обновление позиции лягушки**:
        - `if direction == "LEFT":`: Если направление 'LEFT', то позиция лягушки уменьшается на 1.
        -  `elif direction == "RIGHT":`: Если направление 'RIGHT', то позиция лягушки увеличивается на 1.
    -  **Обновление позиции бревен**:
         -   `for i in range(len(logPositions)):`: Проходит по списку позиций бревен.
        -  `logPositions[i] = (logPositions[i] + 1) % 10`:  Перемещает каждое бревно на одну позицию вправо, если позиция больше 9, она обнуляется.
    -   **Проверка положения лягушки**:
        -   `if frogPosition not in logPositions:`: Проверяет, находится ли лягушка на бревне.
        -   `print("SPLOOSH!")`: Выводит сообщение, если лягушка упала в воду.
        -   `break`: Завершает игру.
"""
```