Как использовать функции работы с CSV файлами
========================================================================================

Описание
-------------------------
Этот код предоставляет набор функций для работы с CSV (Comma-Separated Values) файлами.  Он позволяет сохранять данные в CSV, читать CSV в список словарей, конвертировать CSV в JSON и читать CSV как словарь.  Функции учитывают возможные ошибки, такие как отсутствие файла, некорректные данные и выдают соответствующие сообщения об ошибках, используя логгер.

Шаги выполнения
-------------------------
1. **Сохранение данных в CSV (save_csv_file):**
    - Функция принимает список словарей (`data`) и путь к файлу (`file_path`).
    - Проверяет, является ли входной параметр `data` списком словарей. Если нет, то генерирует исключение `TypeError`.
    - Проверяет, не пуст ли список `data`. Если пуст, то генерирует исключение `ValueError`.
    - Создает директорию, если она не существует.
    - Открывает CSV файл в режиме `'a'` (дополнения) или `'w'` (записи), используя UTF-8 кодировку.
    - Создает объект `DictWriter` для записи данных в CSV.
    - Если файл открывается в режиме `'w'` или файл не существует, то записывает заголовок CSV.
    - Записывает данные в CSV с помощью `writerows`.
    - Возвращает `True`, если запись прошла успешно, иначе `False` и выводит ошибку в лог.

2. **Чтение данных из CSV (read_csv_file):**
    - Функция принимает путь к файлу (`file_path`).
    - Открывает CSV файл в режиме чтения (`'r'`) с UTF-8 кодировкой.
    - Создает объект `DictReader` для чтения данных.
    - Читает все строки из файла и возвращает их как список словарей.
    - Возвращает `None`, если файл не найден или при возникновении других ошибок.  Выводит информацию об ошибке в лог.

3. **Преобразование CSV в JSON (read_csv_as_json):**
    - Функция принимает пути к CSV и JSON файлам.
    - Читает данные из CSV файла, используя `read_csv_file`.
    - Если чтение CSV завершилось неудачно (`data` равно `None`), функция возвращает `False`.
    - Сохраняет прочитанные данные в JSON файл с отступами (indent=4) для читабельности.
    - Возвращает `True`, если преобразование выполнено успешно, иначе `False` и выводит информацию об ошибке в лог.

4. **Преобразование CSV в словарь (read_csv_as_dict):**
    - Функция принимает путь к CSV файлу.
    - Читает данные из CSV файла, используя `csv.DictReader`.
    - Возвращает словарь с ключом `data` и списком прочитанных строк.
    - Возвращает `None` при возникновении ошибок и выводит сообщение об ошибке в лог.

5. **Чтение CSV в список словарей через Pandas (read_csv_as_ns):**
    - Функция принимает путь к CSV файлу.
    - Читает данные из CSV файла с помощью Pandas (`pd.read_csv`).
    - Преобразует DataFrame в список словарей с помощью `df.to_dict(orient='records')`.
    - Возвращает список словарей, если чтение прошло успешно.
    - Возвращает пустой список (`[]`) при возникновении ошибок (например, файла не найдено), выводит информацию об ошибке в лог.


Пример использования
-------------------------
.. code-block:: python

    import os
    from pathlib import Path
    from hypotez.src.utils.csv import save_csv_file, read_csv_file, read_csv_as_json, read_csv_as_dict, read_csv_as_ns

    # Пример данных
    data_to_save = [
        {'column1': 'value1', 'column2': 'value2'},
        {'column1': 'value3', 'column2': 'value4'}
    ]

    # Путь к файлу
    csv_file_path = Path("./data.csv")

    # Сохранение данных в CSV файл
    success = save_csv_file(data_to_save, csv_file_path, mode='w')
    if success:
        print("CSV файл успешно сохранен")
    else:
        print("Ошибка при сохранении CSV файла")

    # Чтение данных из CSV файла
    loaded_data = read_csv_file(csv_file_path)
    if loaded_data:
        print("Данные из CSV файла:", loaded_data)
    else:
        print("Ошибка при чтении CSV файла")


    # Пример преобразования CSV в JSON
    json_file_path = Path("./data.json")
    json_success = read_csv_as_json(csv_file_path, json_file_path)

    if json_success:
        print("Преобразование CSV в JSON успешно!")
    else:
        print("Ошибка при преобразовании CSV в JSON")