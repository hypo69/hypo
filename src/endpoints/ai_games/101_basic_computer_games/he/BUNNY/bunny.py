<BUNNY>:
=================
קושי: 2
-----------------
המשחק "ארנב" הוא משחק פשוט בו המחשב מדמה תנועה של ארנב שקופץ קדימה ואחורה על לוח משחק. השחקן צריך לנסות לנחש את המיקום הסופי של הארנב אחרי מספר קפיצות אקראיות.
המשחק מתחיל במיקום התחלתי של 0, הארנב קופץ באופן אקראי קדימה או אחורה, והשחקן צריך לנחש באיזה מיקום הארנב נמצא אחרי 10 קפיצות.
חוקי המשחק:
1. הארנב מתחיל במיקום 0.
2. הארנב מבצע 10 קפיצות.
3. כל קפיצה היא אקראית, או קפיצה קדימה (ב-1) או קפיצה אחורה (ב-1).
4. השחקן צריך לנחש את מיקום הארנב אחרי 10 קפיצות.
5. המשחק מסתיים לאחר שהשחקן מזין את הניחוש שלו.

-----------------
אלגוריתם:
1. אתחל את מיקום הארנב ל-0.
2. בצע לולאה 10 פעמים:
    2.1 צור מספר אקראי בין 1 ל-2.
    2.2 אם המספר האקראי הוא 1, קדם את מיקום הארנב ב-1.
    2.3 אם המספר האקראי הוא 2, החזר את מיקום הארנב ב-1.
3. בקש מהמשתמש לנחש את מיקום הארנב.
4. הצג את מיקום הארנב האמיתי.
5. בדוק האם הניחוש של השחקן תואם למיקום הארנב.
6. הצג הודעה מתאימה (ניצחון או הפסד).
7. סוף המשחק.
-----------------
תרשים זרימה:
```mermaid
flowchart TD
    Start["התחלה"] --> InitializePosition["<p align='left'>אתחול משתנה:
    <code><b>
    bunnyPosition = 0
    </b></code></p>"]
    InitializePosition --> LoopStart{"תחילת לולאה: 10 קפיצות"}
    LoopStart -- עבור כל קפיצה --> GenerateRandomJump["<p align='left'>יצירת קפיצה אקראית:
    <code><b>
    randomJump = random(1, 2)
    </b></code></p>"]
    GenerateRandomJump --> UpdatePosition{"<p align='left'>עדכון מיקום הארנב:
    <code><b>
    if randomJump == 1:
        bunnyPosition = bunnyPosition + 1
    else:
        bunnyPosition = bunnyPosition - 1
    </b></code></p>"}
    UpdatePosition --> LoopEnd{"סוף לולאת 10 קפיצות"}
    LoopEnd -- סיום הלולאה --> InputGuess["קלט ניחוש מהמשתמש: <code><b>userGuess</b></code>"]
    InputGuess --> OutputPosition["הצגת מיקום הארנב: <code><b>bunnyPosition</b></code>"]
    OutputPosition --> CheckGuess{"בדיקה: <code><b>userGuess == bunnyPosition?</b></code>"}
    CheckGuess -- כן --> OutputWin["הצגת הודעה: <b>YOU GOT IT!</b>"]
    OutputWin --> End["סוף"]
    CheckGuess -- לא --> OutputLose["הצגת הודעה: <b>TOO BAD!</b>"]
    OutputLose --> End
```
Legenda:
    Start - התחלת המשחק.
    InitializePosition - אתחול מיקום הארנב (bunnyPosition) ל-0.
    LoopStart - התחלת לולאה שמתבצעת 10 פעמים, מייצגת את 10 הקפיצות של הארנב.
    GenerateRandomJump - יצירת מספר אקראי (randomJump) בין 1 ל-2, שמייצג קפיצה קדימה (1) או אחורה (2).
    UpdatePosition - עדכון מיקום הארנב בהתאם למספר האקראי שנוצר.
    LoopEnd - סיום לולאת הקפיצות.
    InputGuess - קבלת ניחוש מיקום הארנב מהמשתמש (userGuess).
    OutputPosition - הצגת מיקום הארנב האמיתי לאחר 10 הקפיצות.
    CheckGuess - בדיקה האם הניחוש של השחקן תואם למיקום הארנב האמיתי.
    OutputWin - הצגת הודעה "YOU GOT IT!" אם הניחוש נכון.
    OutputLose - הצגת הודעה "TOO BAD!" אם הניחוש שגוי.
    End - סוף המשחק.
"""
```python
import random

# אתחול מיקום הארנב
bunnyPosition = 0

# לולאה המבצעת 10 קפיצות
for _ in range(10):
    # יצירת מספר אקראי 1 או 2
    randomJump = random.randint(1, 2)
    # אם המספר האקראי הוא 1 - הארנב קופץ קדימה
    if randomJump == 1:
        bunnyPosition += 1
    # אם המספר האקראי הוא 2 - הארנב קופץ אחורה
    else:
        bunnyPosition -= 1

# קבלת ניחוש מהמשתמש לגבי מיקום הארנב
try:
    userGuess = int(input("נחש את מיקום הארנב: "))
except ValueError:
    print("אנא הזן מספר שלם.")
    exit()

# הצגת המיקום האמיתי של הארנב
print(f"מיקום הארנב האמיתי: {bunnyPosition}")

# בדיקה האם הניחוש נכון
if userGuess == bunnyPosition:
    print("YOU GOT IT!")
# אם הניחוש לא נכון
else:
    print("TOO BAD!")
```
<הערות סיום>
הסבר מפורט לקוד:

1.  **ייבוא המודול `random`**:
    *   `import random`: ייבוא המודול `random`, המשמש ליצירת מספרים אקראיים.
2.  **אתחול מיקום הארנב**:
    *   `bunnyPosition = 0`: הגדרת משתנה בשם `bunnyPosition` שמאותחל ל-0. משתנה זה ישמש לשמירת מיקום הארנב על הלוח.
3.  **לולאת הקפיצות**:
    *   `for _ in range(10):`: לולאת `for` שחוזרת 10 פעמים, כאשר כל איטרציה מייצגת קפיצה של הארנב. המשתנה `_` משמש כמשתנה לולאה שאינו בשימוש.
    *   `randomJump = random.randint(1, 2)`: יצירת מספר שלם אקראי בין 1 ל-2 באמצעות הפונקציה `randint` מהמודול `random`. המספר 1 מייצג קפיצה קדימה, והמספר 2 מייצג קפיצה אחורה.
    *   `if randomJump == 1:`: תנאי `if` שבודק אם המספר האקראי שווה ל-1. אם כן, מתבצעת קפיצה קדימה.
        *   `bunnyPosition += 1`: הגדלת ערכו של `bunnyPosition` ב-1, כלומר הארנב קופץ צעד אחד קדימה.
    *   `else:`: אם המספר האקראי אינו 1, הוא בהכרח 2 (מכיוון שהטווח הוא רק 1 או 2).
        *   `bunnyPosition -= 1`: הקטנת ערכו של `bunnyPosition` ב-1, כלומר הארנב קופץ צעד אחד אחורה.
4.  **קלט מהמשתמש**:
    *   `try...except ValueError`: בלוק `try-except` נועד לטפל בשגיאות אפשריות בזמן קליטת קלט מהמשתמש. הוא מנסה להמיר את הקלט למספר שלם, ואם ההמרה נכשלת, הוא מדפיס הודעה ומסיים את התוכנית.
    *   `userGuess = int(input("נחש את מיקום הארנב: "))`: בקשה מהמשתמש להזין ניחוש לגבי מיקום הארנב, המרת הקלט למספר שלם ושמירתו במשתנה `userGuess`.
5.  **הצגת מיקום הארנב**:
    *   `print(f"מיקום הארנב האמיתי: {bunnyPosition}")`: הדפסת מיקומו הסופי של הארנב לאחר 10 הקפיצות.
6.  **בדיקת הניחוש**:
    *   `if userGuess == bunnyPosition:`: תנאי `if` שבודק האם הניחוש של המשתמש שווה למיקום האמיתי של הארנב.
        *   `print("YOU GOT IT!")`: הדפסת הודעה למשתמש שהוא צדק בניחוש.
    *   `else:`: אם הניחוש של המשתמש שונה ממיקום הארנב.
        *   `print("TOO BAD!")`: הדפסת הודעה למשתמש שהוא טעה בניחוש.
</הערות סיום>
