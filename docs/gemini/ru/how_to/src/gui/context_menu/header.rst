Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код загружает имя проекта из файла `settings.json`, определяет корневую директорию проекта и добавляет пути к директориям с бинарными файлами GTK, FFmpeg и Graphviz в переменную `sys.path`. Он также настраивает переменную окружения `WEASYPRINT_DLL_DIRECTORIES` для WeasyPrint, если она не установлена, и подавляет вывод предупреждений GTK.

Шаги выполнения
-------------------------
1. **Загрузка настроек проекта:** Код загружает файл `settings.json`, извлекает из него имя проекта (значение по умолчанию - "hypotez") и сохраняет его в переменной `project_name`.
2. **Определение корневой директории:** Определяет абсолютный путь к корневой директории проекта (__root__), используя имя проекта и текущую директорию.
3. **Добавление путей к бинарным директориям:** Определяет пути к директориям с бинарными файлами GTK, FFmpeg и Graphviz, относящиеся к проекту.
4. **Добавление путей в sys.path:** Цикл перебирает пути к бинарным директориям. Если путь не существует в sys.path, добавляет его в начало списка `sys.path`.
5. **Установка переменной окружения WeasyPrint:** Проверяет, есть ли в `sys.path` переменная окружения `WEASYPRINT_DLL_DIRECTORIES`. Если нет, добавляет путь к директории GTK в `sys.path`.
6. **Подавление вывода предупреждений GTK:** Использует `warnings.filterwarnings` для подавления предупреждений GTK, которые могут появляться во время выполнения кода.


Пример использования
-------------------------
.. code-block:: python

    # Допустим, что файл settings.json содержит:
    # {
    #   "project_name": "myproject"
    # }

    # В вашем коде:
    import sys
    from pathlib import Path
    import json
    # ... (ваш код из файла header.py)
    # ... (ваш код, использующий графические библиотеки)

    # Теперь вы можете использовать загруженные модули и пути.