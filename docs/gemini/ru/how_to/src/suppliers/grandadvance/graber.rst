Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет класс `Graber` для сбора данных о товарах со страницы grandadvanse.co.il.  Класс наследуется от базового класса `Grbr` и предоставляет функции для извлечения различных полей товара.  В коде используется асинхронный подход, а также декоратор `close_pop_up` для автоматического закрытия всплывающих окон.  Код содержит функции для обработки различных полей товара (например, `id_product`, `default_image_url`, `description_short`, `name`, `specification`, `local_saved_image`).  Ключевая особенность - возможность вызова функций для конкретных полей с помощью ключевых аргументов.

Шаги выполнения
-------------------------
1. **Инициализация:** Создается экземпляр класса `Graber` с объектом `Driver` для управления веб-драйвером. В `__init__` методе задаются имя поставщика `supplier_prefix` и выполняются начальные настройки.

2. **Обработка страницы:** Метод `grab_page` принимает `Driver` и обрабатывает запрос на страницу товара, извлекая данные.

3. **Вызов функций для извлечения данных:** Внутри метода `grab_page` вызывается асинхронная функция `fetch_all_data`.  Эта функция, в свою очередь, вызывает специализированные функции (например, `self.id_product`, `self.default_image_url`, `self.description_short`, `self.name`) для извлечения значений конкретных полей.  Ключевые аргументы функции `fetch_all_data` позволяют выбрать, какие поля извлекать.

4. **Возврат данных:** Метод `grab_page` возвращает объект `ProductFields` с собранными данными.

5. **Обработка локальных изображений:** Метод `local_saved_image` загружает локальное изображение.

Пример использования
-------------------------
.. code-block:: python

    from src.webdriver import Driver
    from hypotez.src.suppliers.grandadvance.graber import Graber
    import asyncio

    async def main():
        # Инициализация драйвера (замените на ваш способ инициализации)
        driver = Driver()
        await driver.start()

        # Создание экземпляра класса Graber
        graber = Graber(driver)

        # Пример использования для получения данных о товаре с id_product = 123
        try:
            fields = await graber.grab_page(driver, id_product='123', description_short='true')
            print(fields)  # Вывод полученных данных
        except Exception as e:
            print(f"Ошибка: {e}")

        await driver.quit()

    asyncio.run(main())