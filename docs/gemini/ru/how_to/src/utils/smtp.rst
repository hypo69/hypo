Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код предоставляет функции для отправки и получения электронной почты с помощью SMTP и IMAP серверов.  `send()` отправляет электронные письма, а `receive()` получает письма с IMAP сервера.  Код включает в себя обработку ошибок и логирование для отладки.  Важная особенность - использование переменных окружения для хранения данных авторизации, что улучшает безопасность.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:**
   Код импортирует `smtplib`, `imaplib`, `email`, `os`, `MIMEText` и `logger` из модуля `src.logger`. Эти библиотеки необходимы для взаимодействия с серверами электронной почты и обработки сообщений.

2. **Конфигурация (`_connection`):**
   Код определяет словарь `_connection`, который содержит настройки SMTP сервера (сервер, порт, пользователь, пароль, получатель). Важно:  **не храните пароли напрямую в коде!** Используйте переменные окружения (`os.environ`). Это обеспечит безопасность.

3. **Функция `send()`:**
   - Создает соединение с SMTP сервером, используя настройки из `_connection`.
   - Отправляет письмо с заданным темой, телом и адресом получателя.
   - Использует `MIMEText` для формирования тела письма.
   - Обрабатывает возможные исключения во время отправки письма, выводит сообщение об ошибке в лог с подробными данными (тема, тело, сообщение об ошибке).
   - Возвращает `True` при успешной отправке и `False` при ошибке.

4. **Функция `receive()`:**
   - Подключается к IMAP серверу, используя предоставленные данные пользователя и пароля.
   - Выбирает папку (например, "inbox").
   - Ищет все сообщения в указанной папке.
   - Извлекает каждое сообщение и преобразует его в словарь `email_data`, содержащий тему, отправителя и тело письма.
   - Декодирует тело письма, обработав возможные ошибки кодировки.
   - Обрабатывает возможные исключения во время получения письма, выводит сообщение об ошибке в лог с подробными данными.
   - Возвращает список словарей с данными о полученных письмах или `None` при ошибке.


Пример использования
-------------------------
.. code-block:: python

    # Установите переменные окружения для SMTP_SERVER, SMTP_PORT, SMTP_USER, SMTP_PASSWORD, SMTP_RECEIVER
    import os
    os.environ["SMTP_SERVER"] = "ваш_smtp_сервер"
    os.environ["SMTP_PORT"] = "587" # пример
    os.environ["SMTP_USER"] = "ваш_логин"
    os.environ["SMTP_PASSWORD"] = "ваш_пароль"
    os.environ["SMTP_RECEIVER"] = "адрес_получателя@example.com"
    
    # Отправка письма
    if send(subject="Тестовое письмо", body="Привет!", to="адрес_получателя@example.com"):
        print("Письмо отправлено успешно")
    else:
        print("Ошибка отправки письма")

    # Получение писем
    imap_server = "ваш_imap_сервер" # пример
    user = "ваш_логин" # пример
    password = "ваш_пароль"  # пример
    emails = receive(imap_server, user, password)
    if emails:
        for email in emails:
            print(f"Тема: {email['subject']}, Отправитель: {email['from']}, Тело: {email['body']}")
    else:
        print("Ошибка получения писем")