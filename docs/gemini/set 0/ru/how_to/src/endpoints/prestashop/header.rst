Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет корневой путь к проекту, используя файлы-маркеры (например, `pyproject.toml`, `requirements.txt`, `.git`). Он также добавляет этот путь в `sys.path`, чтобы импорты модулей из других частей проекта работали корректно. Далее, код загружает настройки из файла `settings.json` и документацию из файла `README.MD`. Если эти файлы не найдены, соответствующие переменные остаются пустыми.  Наконец, он определяет переменные, хранящие информацию о проекте, такую как имя, версию, документацию, автора и авторские права.

Шаги выполнения
-------------------------
1. **Инициализация**: Импортируются необходимые модули: `sys`, `json`, `pathlib`, `packaging.version`, и `gs` (предполагается, что `gs` содержит полезные пути к файлам).
2. **Определение корневого пути**: Функция `set_project_root()` ищет корневой каталог проекта, начиная с текущей директории и поднимаясь вверх по дереву каталогов. Она проверяет наличие файлов-маркеров в каждой родительской директории. Если найден корневой каталог, путь к нему записывается в переменную `__root__`. Если путь не найден, в `__root__` записывается путь текущей директории.  Также проверяет, находится ли путь в `sys.path`. Если нет, добавляет его в начало списка.  Наконец, функция возвращает объект `Path` с путем к корневому каталогу.
3. **Получение настроек**:  Код пытается загрузить данные из файла `settings.json` в переменную `settings` используя `json.load()`. Если файл не найден или содержимое некорректно, переменная `settings` остается `None`.
4. **Чтение документации**: Аналогично, код пытается загрузить строку документации из файла `README.MD` в переменную `doc_str`. При ошибке переменная `doc_str` остается `None`.
5. **Установка переменных проекта**: Код определяет несколько переменных, связанных с проектом, например, `__project_name__`, `__version__`, `__doc__` и другие. Значения для этих переменных считываются из словаря настроек `settings`. Если `settings` не найдены, используется значение по умолчанию (например, 'hypotez').


Пример использования
-------------------------
.. code-block:: python

    # Предполагается, что модуль gs уже импортирован
    # И что в проекте есть файлы pyproject.toml, settings.json и README.MD
    import os
    import sys

    from hypotez.src.logger.header import __root__, __project_name__, __version__


    print(f"Корневой путь проекта: {__root__}")
    print(f"Имя проекта: {__project_name__}")
    print(f"Версия проекта: {__version__}")

    # Пример работы с sys.path
    current_path = os.path.dirname(os.path.abspath(__file__))
    other_module_path = __root__ / 'other_module'
    if other_module_path not in sys.path:
        sys.path.append(str(other_module_path))

    try:
        # Импортируем модуль из другой директории
        import other_module  # Модуль должен быть в 'other_module' папке
        print("Модуль 'other_module' импортирован успешно.")
    except ImportError as e:
        print(f"Ошибка импорта: {e}")