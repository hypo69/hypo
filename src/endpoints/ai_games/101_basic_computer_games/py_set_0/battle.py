"""
<BATTLE>:
=================
Сложность: 3
-----------------
Это игра, где игрок должен угадать случайное число в диапазоне от 1 до 100. После каждой попытки игра сообщает, было ли введенное число больше или меньше загаданного. Игра заканчивается, когда игрок угадывает число, и выводит количество попыток.
Правила игры:
1. Компьютер выбирает случайное целое число от 1 до 100.
2. Игрок вводит число.
3. Если введенное число меньше загаданного, компьютер выводит "TOO LOW".
4. Если введенное число больше загаданного, компьютер выводит "TOO HIGH".
5. Если введенное число равно загаданному, компьютер выводит "YOU GOT IT IN N GUESSES!", где N - количество попыток.
-----------------
Алгоритм:
1. Выбрать случайное целое число в диапазоне от 1 до 100.
2. Установить счетчик количества попыток в 0.
3. Начать цикл:
   a. Увеличить счетчик попыток на 1.
   b. Запросить у игрока ввод числа.
   c. Если введенное число равно загаданному числу, то вывести сообщение "YOU GOT IT IN N GUESSES!", где N - количество попыток, и завершить игру.
   d. Если введенное число меньше загаданного числа, то вывести сообщение "TOO LOW" и перейти к началу цикла.
   e. Если введенное число больше загаданного числа, то вывести сообщение "TOO HIGH" и перейти к началу цикла.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeVariables["<p align='left'>Инициализация переменных:
    <code><b>
    numberOfGuesses = 0
    targetNumber = random(1, 100)
    </b></code></p>"]
    InitializeVariables --> LoopStart{"Начало цикла: пока не угадано"}
    LoopStart -- Да --> IncreaseGuesses["<code><b>numberOfGuesses = numberOfGuesses + 1</b></code>"]
    IncreaseGuesses --> InputGuess["Ввод числа пользователем: <code><b>userGuess</b></code>"]
    InputGuess --> CheckGuess{"Проверка: <code><b>userGuess == targetNumber?</b></code>"}
    CheckGuess -- Да --> OutputWin["Вывод сообщения: <b>YOU GOT IT IN <code>{numberOfGuesses}</code> GUESSES!</b>"]
    OutputWin --> End["Конец"]
    CheckGuess -- Нет --> CheckLow{"Проверка: <code><b>userGuess &lt; targetNumber</b></code>?"}
    CheckLow -- Да --> OutputLow["Вывод сообщения: <b>TOO LOW</b>"]
    OutputLow --> LoopStart
    CheckLow -- Нет --> OutputHigh["Вывод сообщения: <b>TOO HIGH</b>"]
    OutputHigh --> LoopStart
    LoopStart -- Нет --> End
```
"""
```
Пояснения:
Start - Начало программы.
InitializeVariables - Инициализация переменных: numberOfGuesses (счетчик попыток) устанавливается в 0, targetNumber (загаданное число) выбирается случайным образом от 1 до 100.
LoopStart - Начало цикла, который повторяется, пока игрок не угадает число.
IncreaseGuesses - Увеличение счетчика попыток на 1.
InputGuess - Запрос у пользователя ввода числа и сохранение его в переменную userGuess.
CheckGuess - Проверка, равно ли введенное число загаданному.
OutputWin - Вывод сообщения об успехе и количестве попыток.
End - Конец программы.
CheckLow - Проверка, меньше ли введенное число загаданного.
OutputLow - Вывод сообщения "TOO LOW", если введенное число меньше загаданного.
OutputHigh - Вывод сообщения "TOO HIGH", если введенное число больше загаданного.
LoopStart -- Нет --> End - Если цикл закончился (условие "пока не угадано" не выполняется), то программа заканчивается

```python
import random

def play_battle_game():
    """
    Запускает игру "BATTLE", в которой нужно угадать загаданное число.
    """
    # Инициализация переменных
    target_number = random.randint(1, 100) # Загаданное число
    number_of_guesses = 0 # Счетчик количества попыток
    
    # Игровой цикл, продолжается, пока число не будет угадано
    while True:
        number_of_guesses += 1 # Увеличиваем счетчик попыток
        try:
           user_guess = int(input("Введите число: ")) # Запрашиваем число у пользователя
        except ValueError:
            print("Пожалуйста, введите целое число.") # Выводим сообщение об ошибке при некорректном вводе
            continue

        # Проверка, угадал ли пользователь число
        if user_guess == target_number:
            print(f"ВЫ УГАДАЛИ ЧИСЛО ЗА {number_of_guesses} ПОПЫТОК!") # Выводим сообщение об успехе
            break # Завершаем игровой цикл
        
        # Проверка, больше ли число, чем загаданное
        if user_guess < target_number:
            print("СЛИШКОМ МАЛО") # Выводим подсказку, что число меньше
        else:
            print("СЛИШКОМ МНОГО") # Выводим подсказку, что число больше

if __name__ == "__main__":
    play_battle_game() # Запускаем игру, если файл запущен напрямую
```
```
Пояснения:
1. `import random`: Импортируем модуль `random` для генерации случайных чисел.
2. `def play_battle_game():`: Определяем функцию `play_battle_game`, которая содержит логику игры.
3. `target_number = random.randint(1, 100)`: Генерируем случайное целое число в диапазоне от 1 до 100 и сохраняем его в переменной `target_number`. Это число, которое игрок должен угадать.
4. `number_of_guesses = 0`: Инициализируем счетчик количества попыток, `number_of_guesses`, значением 0.
5. `while True:`: Начинаем бесконечный цикл, который будет продолжаться, пока игрок не угадает число.
6. `number_of_guesses += 1`: Увеличиваем счетчик количества попыток на 1.
7. `try...except ValueError:`: Используем блок try-except для обработки ошибки, если пользователь введет не число.
8. `user_guess = int(input("Введите число: "))`: Запрашиваем у пользователя ввод числа и преобразуем ввод в целое число, сохраняя результат в переменной `user_guess`.
9. `if user_guess == target_number:`: Проверяем, угадал ли пользователь загаданное число. Если да, выводим сообщение об успехе и количестве попыток, затем выходим из цикла с помощью `break`.
10. `if user_guess < target_number:`: Если число пользователя меньше загаданного, выводим сообщение "СЛИШКОМ МАЛО".
11. `else:`: Если число пользователя больше загаданного, выводим сообщение "СЛИШКОМ МНОГО".
12. `if __name__ == "__main__":`: Проверяем, запущен ли файл напрямую (не импортирован как модуль).
13. `play_battle_game()`: Если файл запущен напрямую, вызываем функцию `play_battle_game` для начала игры.

licence:MIT(../licence)
"""
__author__ = 'hypo69 (hypo69@davidka.net)'
```