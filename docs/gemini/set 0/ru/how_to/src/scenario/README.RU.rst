Как использовать модуль `src.scenario`
========================================================================================

Описание
-------------------------
Модуль `src.scenario` автоматизирует взаимодействие с поставщиками по сценариям, описанным в JSON-файлах. Он извлекает и обрабатывает данные о продуктах с веб-сайтов поставщиков, синхронизируя их с базой данных (например, PrestaShop).  Модуль включает чтение сценариев, взаимодействие с веб-сайтами, обработку данных и ведение журнала выполнения.

Шаги выполнения
-------------------------
1. **Подготовка сценариев**: Создайте JSON-файлы, описывающие взаимодействие со страницами поставщиков.  Каждый файл содержит список сценариев, каждый из которых включает URL страницы, название категории и идентификаторы категорий в базе данных PrestaShop (`presta_categories`).  Пример:

   ```json
   {
       "scenarios": {
           "Имя_категории": {
               "url": "https://example.com/категория",
               "name": "Имя_категории",
               "presta_categories": {
                   "default_category": 123,
                   "additional_categories": [456, 789]
               }
           }
       }
   }
   ```

2. **Загрузка списка файлов сценариев**: Создайте список путей к файлам сценариев.

3. **Запуск модуля**: Используйте функцию `run_scenario_files` из модуля `src.scenario`, передавая ей список файлов.  Функция выполнит все сценарии в указанных файлах по порядку.

   ```python
   import src.scenario as scenario

   scenario_files = ["scenario1.json", "scenario2.json"]
   scenario.run_scenario_files(scenario_files)
   ```

4. **Обработка каждого сценария**: Модуль `run_scenario_files` вызывает `run_scenario_file`, которая выполняет сценарий:
   - Загружает сценарий из файла.
   - Вызывает функцию `run_scenario` для каждого сценария в файле.
   - Функция `run_scenario` обрабатывает отдельный сценарий:
      -  Получает URL из сценария.
      - Переходит по URL и извлекает данные о продуктах.
      - Обрабатывает извлеченные данные.
      - Сохраняет данные в базе данных, используя идентификаторы категорий из сценария.
   - Записывает информацию о выполнении в журнал (`journal`).

5. **Сохранение журнала**: Модуль `dump_journal` сохраняет журнал (`journal`) выполнения в файл для последующего анализа.

Пример использования
-------------------------
.. code-block:: python

    import src.scenario as scenario

    scenario_files = ["path/to/scenario1.json", "path/to/scenario2.json"]
    scenario.run_scenario_files(scenario_files)

    # Дополнительно можно проверить наличие сообщений об ошибках в журнале