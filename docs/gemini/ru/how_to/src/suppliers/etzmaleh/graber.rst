Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код содержит класс `Graber`, предназначенный для извлечения данных о товарах со страницы `etzmaleh.co.il`. Класс наследуется от `Grbr` и предоставляет асинхронную функцию `grab_page` для сбора различных полей товара.  Класс реализует обработку полей, а также может иметь специфические функции для нестандартной обработки полей.  В коде используется декоратор `@close_pop_up` для закрытия всплывающих окон, но по умолчанию он не реализован.  Код предоставляет возможность передавать ID продукта и другие параметры для извлечения соответствующих полей.

Шаги выполнения
-------------------------
1. **Инициализация класса `Graber`:** Создается экземпляр класса `Graber`, передавая в конструктор объект драйвера `driver`.  Класс `Graber` наследуется от `Grbr` и устанавливает `supplier_prefix`.
2. **Вызов функции `grab_page`:**  Вызывается асинхронная функция `grab_page` с объектом драйвера, передавая словарь `kwards` с необходимыми данными (например, `id_product`).
3. **Обработка данных:** Внутри функции `grab_page` вызываются асинхронные функции для сбора конкретных полей товара (например, `id_product`, `name`, `description`).  Это делается с помощью функции `fetch_all_data` и `kwards`, который содержит необходимые параметры.  Функции, отвечающие за извлечение данных, могут быть реализованы в классе `Graber` или переопределены.
4. **Возврат данных:**  Функция `grab_page` возвращает объект `ProductFields` с собранными данными.

Пример использования
-------------------------
.. code-block:: python

    import asyncio
    from src.webdriver import Driver
    from hypotez.src.suppliers.etzmaleh.graber import Graber

    async def main():
        # Предполагается, что Driver уже инициализирован
        driver = Driver() 
        await driver.start_session()

        graber = Graber(driver)
        try:
            id_product = "123"  # Замените на фактический ID товара
            kwards = {"id_product": id_product}
            product_data = await graber.grab_page(driver=driver, **kwards)
            print(product_data)

        finally:
            await driver.quit_session()


    if __name__ == "__main__":
        asyncio.run(main())