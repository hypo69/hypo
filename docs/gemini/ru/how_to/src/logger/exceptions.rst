Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот модуль определяет пользовательские исключения, используемые в приложении для обработки ошибок, связанных с различными компонентами приложения, включая операции с файлами, полями продукта, подключениями к базе данных KeePass и ошибками PrestaShop WebService.  Модуль предоставляет набор классов исключений, которые наследуются от базового класса `CustomException`, обеспечивающего логирование ошибок и возможность передачи исходных исключений.

Шаги выполнения
-------------------------
1. **Импорт необходимых модулей:** Модуль импортирует классы исключений из `src.logger` и `selenium.common.exceptions`, а также из `pykeepass.exceptions`, что обеспечивает доступ к нужным функциям и классам для обработки ошибок.


2. **Определение пользовательских исключений:**  Модуль определяет несколько классов исключений, каждый из которых специализируется на определенном типе ошибки:
    - `CustomException`: Базовый класс, обрабатывающий логирование исключений и хранящий ссылку на исходную ошибку (если она есть).
    - `FileNotFoundError`: Исключение для ситуаций, когда файл не найден.
    - `ProductFieldException`: Исключение для ошибок, связанных с полями продукта.
    - `KeePassException`: Исключение для ошибок подключения к базе данных KeePass.
    - `DefaultSettingsException`: Исключение для проблем с настройками по умолчанию.
    - `WebDriverException`: Исключение для ошибок, связанных с WebDriver.
    - `ExecuteLocatorException`: Исключение для ошибок, связанных с исполнителями локаторов.
    - `PrestaShopException`: Общее исключение для ошибок PrestaShop WebService.
    - `PrestaShopAuthenticationError`: Исключение для ошибок аутентификации с PrestaShop WebService.


3. **Инициализация и обработка исключений:** Класс `CustomException` имеет метод `__init__`, принимающий сообщение об ошибке и (необязательный) объект исходного исключения, и метод `handle_exception`, который логирует информацию об ошибке и исходном исключении (если оно есть).


4. **Подробная информация об ошибках PrestaShop:** Класс `PrestaShopException`  позволяет сохранять дополнительные детали об ошибках PrestaShop, такие как код ошибки, сообщение об ошибке PrestaShop и т.д.


Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.logger.exceptions import FileNotFoundError, PrestaShopException

    try:
        # код, который может вызвать ошибку
        open("несуществующий_файл.txt", "r")
    except FileNotFoundError as e:
        # Обработка ошибки, когда файл не найден
        print(f"Ошибка: {e}")
        
    try:
        # Код, взаимодействующий с PrestaShop WebService
        # ...
    except PrestaShopException as e:
        # Обработка ошибки PrestaShop
        print(f"Ошибка PrestaShop: {e.msg} (Код ошибки: {e.error_code} ; Сообщение PrestaShop: {e.ps_error_msg})")