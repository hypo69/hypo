Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код содержит функции для проверки, находится ли текущее время в заданном интервале.  `interval` проверяет, попадает ли текущее время в заданный интервал времени, который полезен для запуска операций, которые должны выполняться только в определенные периоды времени (например, ночные задачи по обслуживанию).  `interval_with_timeout` добавляет возможность проверки с таймаутом, ожидая, что функция `interval` вернет результат в течение заданного времени.  Также реализована функция `input_with_timeout`, которая ожидает ввод от пользователя с ограничением по времени.

Шаги выполнения
-------------------------
1. **Инициализация:** Создается экземпляр класса `TimeoutCheck`.

2. **Проверка интервала (без таймаута):**  Функция `interval` принимает аргументы `start` и `end`, которые определяют начало и конец интервала времени (по умолчанию 23:00 и 06:00 соответственно). Функция возвращает `True`, если текущее время находится в интервале, и `False` - в противном случае.

3. **Проверка интервала с таймаутом:** Функция `interval_with_timeout` принимает аргументы `timeout`, `start` и `end`. Функция запускает поток для проверки интервала. Если результат получен в течение `timeout` секунд, функция возвращает результат проверки. В противном случае, функция возвращает `False` и выводит сообщение о таймауте.


4. **Получение ввода с таймаутом:** Функция `input_with_timeout` ожидает ввод от пользователя с таймаутом. Если пользователь введет данные в течение `timeout` секунд, функция возвращает введенную строку. Если таймаут истекает, функция возвращает `None` и выводит сообщение об этом.

Пример использования
-------------------------
.. code-block:: python

    from datetime import time
    from utils.date_time import TimeoutCheck

    timeout_check = TimeoutCheck()

    # Проверка интервала без таймаута
    if timeout_check.interval(start=time(22, 0), end=time(6, 0)):
        print("Текущее время находится в интервале.")
    else:
        print("Текущее время не находится в интервале.")


    # Проверка интервала с таймаутом
    if timeout_check.interval_with_timeout(timeout=2, start=time(22, 0), end=time(6, 0)):
        print("Текущее время находится в интервале (с таймаутом).")
    else:
        print("Текущее время не находится в интервале или произошел таймаут.")

    # Пример использования функции input_with_timeout
    user_input = timeout_check.input_with_timeout(timeout=3)
    if user_input:
        print(f"Пользователь ввел: {user_input}")
    else:
        print("Таймаут при вводе.")