Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код служит обработчиком сообщений для расширения Chrome. Он обрабатывает запросы на сбор данных с текущей страницы. При получении сообщения с действием 'collectData', код отправляет URL страницы на сервер для дальнейшей обработки.  Код использует API браузера Chrome, в частности `chrome.tabs.sendMessage` для отправки сообщения в контекст текущей вкладки и `chrome.runtime.onMessage` для прослушивания сообщений из других частей расширения.  Он хранит собранные данные в локальном хранилище Chrome и отправляет их на сервер с помощью `fetch`.

Шаги выполнения
-------------------------
1. **Обработка события клика на иконку расширения**:  Функция `chrome.browserAction.onClicked.addListener` прослушивает клик на иконку расширения. При клике эта функция отправляет сообщение в активную вкладку с указанием действия `collectData` и URL текущей страницы.

2. **Прием сообщения о сборе данных**: Функция `chrome.runtime.onMessage.addListener` прослушивает сообщения, пришедшие из других частей расширения.

3. **Проверка действия сообщения**: Если полученное сообщение имеет свойство `action`, равное `'collectData'`, код получает URL из сообщения.

4. **Отправка URL на сервер**: Вызывается функция `sendDataToServer`, получающая в качестве аргумента URL страницы.

5. **Получение собранных данных из хранилища**: Функция `sendDataToServer` запрашивает сохранённые данные из локального хранилища Chrome с ключом `collectedData`.

6. **Проверка наличия данных**: Если данные найдены, код отправляет их на сервер.

7. **Отправка данных на сервер с помощью `fetch`**:  Используется функция `fetch` для отправки POST-запроса на сервер с указанным URL. В запросе передаются собранные данные.

8. **Обработка ответа от сервера**: Обрабатывается ответ сервера. При успешной отправке выводятся сообщения в консоль. При ошибке выводится сообщение об ошибке.

9. **Обработка отсутствия данных**: Если в хранилище нет данных, в консоль выводится сообщение об отсутствии собранных данных.


Пример использования
-------------------------
.. code-block:: javascript

    // Внутри скрипта контента (content.js)
    chrome.runtime.sendMessage({ action: 'collectData', url: window.location.href });

    // Внутри другого скрипта расширения (например, popup.js)
    // ... (логика для сбора данных)
    chrome.storage.local.set({ collectedData: collectedData });