Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код содержит тесты для модуля `extraction` из проекта `TinyTroupe`. Он демонстрирует экспорт данных в различные форматы (JSON, текст, docx) и нормализацию концепций. Тесты проверяют корректность экспорта, сохранение данных и правильность нормализации.  Функции `test_export_json`, `test_export_text`, `test_export_docx` тестируют экспорт файлов с различными типами данных, а `test_normalizer` тестирует процесс нормализации.

Шаги выполнения
-------------------------
1. **Импорт необходимых библиотек:** Код импортирует необходимые модули `pytest`, `os`, `json`, `random`, `logging`, `sys`, `docx` и собственные модули `testing_utils`, `ArtifactExporter`, `Normalizer`, `utils` из проекта.  Импорт `sys.path.append(...)` добавляет необходимые пути к модулям в систему.

2. **Определение фикстуры `exporter`:** Фикстура `exporter` создаёт экземпляр класса `ArtifactExporter` с указанием базовой папки для экспорта.

3. **Тестирование экспорта JSON:** Функция `test_export_json` выполняет следующие действия:
   - Определяет данные артефакта в словаре `artifact_data`.
   - Вызывает метод `exporter.export()` для экспорта данных в формате JSON.
   - Проверяет существование созданного JSON файла с помощью `os.path.exists()`.
   - Читает и загружает данные из созданного файла.
   - Проверяет соответствие данных в файле исходным данным.


4. **Тестирование экспорта текста:** Функция `test_export_text` аналогично `test_export_json`, но экспортирует данные как текстовый файл `.txt`.


5. **Тестирование экспорта docx:** Функция `test_export_docx` экспортирует данные как файл `.docx`, используя маркировку Markdown.
    - проверяет существование созданного файла `.docx`
    - читает созданный документ `.docx`
    - проверяет, что в документе содержатся определённые части исходных данных.
    - проверяет, что в документе отсутствуют Markdown теги.


6. **Тестирование нормализации:** Функция `test_normalizer`:
   - Определяет список концепций для нормализации.
   - Создаёт экземпляр класса `Normalizer`.
   - Проверяет, что количество нормализованных элементов соответствует заданному значению `n`.
   - Выполняет нормализацию нескольких подвыборок концепций.
   - Проверяет, что карта нормализации не пуста после нормализации новых концепций.
   - Проверяет, что длина нормализованного списка концепций равна длине входного списка.
   - Проверяет, что все элементы из нормализованных концепций присутствуют в ключах карты нормализации.


Пример использования
-------------------------
.. code-block:: python

    # Предполагается, что модуль extraction уже импортирован.
    import os
    from tinytroupe.extraction import ArtifactExporter, Normalizer
    from tinytroupe import utils

    # Создайте экземпляр ArtifactExporter
    exporter = ArtifactExporter(base_output_folder="./test_exports")

    # Пример использования для экспорта JSON
    artifact_data = {"key": "value"}
    exporter.export("my_artifact", artifact_data, content_type="record", target_format="json")

    # Пример использования для нормализации
    concepts = ["Concept 1", "Concept 2"]
    normalizer = Normalizer(concepts, n=2, verbose=True)
    normalized_concepts = normalizer.normalize(concepts)