Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот JavaScript-код реализует функционал всплывающего окна (popup) для расширения браузера, позволяющего выполнять запросы XPath и отображать результаты в popup'е. Код взаимодействует с содержимым веб-страницы (content script) через API браузера. Он собирает настройки из элементов интерфейса popup'a, формирует сообщение для content script, отправляет это сообщение и обрабатывает полученные результаты, отображая их в таблице popup'a. Код включает обработку ошибок, управление видимостью различных блоков, сохранение/восстановление состояния.

Шаги выполнения
-------------------------
1. **Инициализация переменных**: Код инициализирует переменные, хранящие ссылки на элементы popup'a (например, поля ввода, чекбоксы).
2. **Определение функций**: Определяются функции для взаимодействия с другими сценариями (content script), для отправки сообщений в активную вкладку, для отображения результатов в таблице, для обработки ошибок, для управления видимостью элементов.
3. **Функция `sendToActiveTab`**: Отправляет сообщение в активную вкладку браузера.
4. **Функция `sendToSpecifiedFrame`**: Отправляет сообщение в указанный iframe, выполняющий валидацию запроса, и обращается к `execContentScript()`, чтобы выполнить функции в content script.
5. **Функция `collectPopupState`**: Считывает текущее состояние popup'a (например, значения полей, отмеченные чекбоксы) и возвращает его в виде объекта.
6. **Функции управления видимостью**: Изменяют видимость различных блоков в popup'e (например, `changeContextVisible`, `changeResolverVisible`, `changeFrameIdVisible`).
7. **Функция `makeExecuteMessage`**: Создаёт сообщение, содержащее данные запроса (выражение XPath, настройки).
8. **Функция `getSpecifiedFrameId`**: Определяет id фрейма на основе выбранного элемента в списке или из значения поля ввода.
9. **Функция `execContentScript`**: Выполняет content script, необходимые для обработки запроса.
10. **Функция `sendExecute`**: Отправляет сообщение с запросом в указанный iframe.
11. **Обработка результатов**: Обрабатывает сообщения от `content script` с результатами выполнения запроса.
12. **Функция `showError`**: Отображает сообщение об ошибке.
13. **`genericListener`**: Обработчик сообщений от content script, отвечает на `showResultsInPopup`, `restorePopupState`, `insertStyleToPopup`, `addFrameId`.
14. **Обработка событий**: Вешает обработчики событий на элементы popup'a (кнопки, поля ввода), вызывающие соответствующие функции.
15. **Функции `showDetailsPage`, `updateDetailsTable`**: Отображают результаты поиска в popup'е.
16. **Сохранение/восстановление состояния**: При закрытии popup'a сохраняет текущее состояние (через функцию `collectPopupState`) и восстанавливает его при открытии (через `restorePopupState`).


Пример использования
-------------------------
.. code-block:: javascript
    
    // Пример использования функции для отправки сообщения в активную вкладку
    sendToActiveTab({ "event": "initializeBlankWindows" });