Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневую директорию проекта, начиная от текущей директории. Функция ищет файлы `pyproject.toml`, `requirements.txt` и `.git` в родительских директориях текущего файла и возвращает путь к найденной корневой директории. Если корневая директория не найдена, возвращается директория, в которой находится текущий файл. Кроме того, код загружает настройки из файла `settings.json` и документацию из `README.MD`, если они существуют.  Он также инициализирует переменные, содержащие имя проекта, версию, документацию, детали, автора, копирайт и ссылку на спонсорство (кофе).

Шаги выполнения
-------------------------
1. **Определение функции `set_project_root`**: Функция `set_project_root` принимает кортеж `marker_files` с именами файлов или каталогов, которые используются для определения корневой директории проекта.
2. **Установка начального пути**: Переменная `current_path` получает путь к директории, где находится текущий файл.
3. **Поиск корневой директории**: Цикл `for` перебирает родительские директории, начиная от `current_path`. Для каждой родительской директории проверяется, существует ли хотя бы один из файлов или каталогов, перечисленных в `marker_files`.
4. **Установка корневого пути**: Если один из файлов или каталогов найден, `__root__` устанавливается на родительскую директорию. Цикл завершается.
5. **Добавление корневого пути в sys.path**: Если корневой путь не содержится в `sys.path`, он добавляется в него в начале списка.
6. **Возврат корневого пути**: Функция возвращает путь к корневой директории.
7. **Получение корневого пути проекта**: Переменная `__root__` получает корневой путь проекта, используя функцию `set_project_root()`.
8. **Загрузка настроек**: Файл `settings.json` в директории `src` загружается в переменную `settings`. Обработка ошибок `FileNotFoundError` и `json.JSONDecodeError` предотвращает сбой программы при отсутствии или некорректности файла.
9. **Загрузка документации**: Файл `README.MD` в директории `src` загружается в переменную `doc_str`. Обработка ошибок `FileNotFoundError` и `json.JSONDecodeError` предотвращает сбой программы при отсутствии или некорректности файла.
10. **Инициализация переменных**: Переменные `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__` и `__cofee__` инициализируются значениями из `settings` или принимают значения по умолчанию.


Пример использования
-------------------------
.. code-block:: python

    # Пример использования функции set_project_root
    import sys
    from pathlib import Path
    from hypotez.src.webdriver.crawlee_python.header import set_project_root


    current_directory = Path(__file__).resolve().parent
    root_directory = set_project_root()

    # Вывод пути к корневой директории
    print(f"Root directory: {root_directory}")

    # Проверка, что корневой путь добавлен в sys.path
    print(f"Root directory in sys.path: {str(root_directory) in sys.path}")


    # Пример использования переменных, полученных из файла настроек
    project_name = __project_name__
    version = __version__
    print(f"Project Name: {project_name}")
    print(f"Version: {version}")