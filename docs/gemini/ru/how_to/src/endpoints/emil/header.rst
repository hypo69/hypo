Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневой каталог проекта, начиная с текущего каталога.  Функция ищет файлы `pyproject.toml`, `requirements.txt` и `.git` в родительских каталогах, чтобы определить, где находится корень проекта. Если корневой каталог найден, путь к нему добавляется в `sys.path`.  Код также загружает настройки из файла `settings.json` и  документацию из файла `README.MD`, если они существуют.  Наконец, он определяет переменные, содержащие информацию о проекте, такие как имя, версия, автор и т.д., используя данные из `settings.json`. Если файл `settings.json` или `README.MD` не найден, или данные в них не валидны, соответствующие переменные принимают значения по умолчанию.

Шаги выполнения
-------------------------
1. Функция `set_project_root` принимает кортеж `marker_files`, содержащий имена файлов или каталогов, используемых для определения корневого каталога проекта.
2. Функция начинает поиск корневого каталога с текущего каталога и просматривает все родительские каталоги, пока не найдет каталог, содержащий один из файлов из `marker_files`.
3. Если корневой каталог найден, его путь добавляется в `sys.path`, чтобы импортировать модули из корневого каталога.
4. Функция возвращает путь к корневому каталогу.
5. После определения корневого каталога, код пытается загрузить данные из файла `settings.json`, расположенного в корневом каталоге проекта.
6. Если файл `settings.json` найден и корректно отформатирован, его содержимое загружается в переменную `settings`.
7. Аналогично, код пытается загрузить документацию из файла `README.MD`.
8. Значения переменных `__project_name__`, `__version__`, `__author__`, `__copyright__`, `__cofee__`, и `__doc__` инициализируются данными из переменной `settings` или значениями по умолчанию, если файл `settings.json` не найден или не содержит нужных данных.
9.  Код обрабатывает потенциальные `FileNotFoundError` и `json.JSONDecodeError`, устанавливая значения переменных по умолчанию, если файл не найден или некорректен.

Пример использования
-------------------------
.. code-block:: python

    # В этом примере предполагается, что вы находитесь в подкаталоге проекта.
    from hypotez.src.endpoints.emil.header import set_project_root

    # Вызов функции для определения корневого каталога проекта
    root_path = set_project_root()

    # Теперь вы можете использовать root_path для доступа к файлам проекта, например:
    print(f"Корневой каталог проекта: {root_path}")
    print(f"Имя проекта: {__project_name__}")
    print(f"Версия проекта: {__version__}")