Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот JavaScript-код служит обработчиком сообщений для расширения Chrome. Он отвечает на различные события, связанные с взаимодействием с вкладками, управлением стилями и хранением данных. Код загружает стили, сохраняет состояние всплывающего окна, обрабатывает запросы о результатах поиска, обновляет стили в открытых вкладках и загружает настройки из хранилища.

Шаги выполнения
-------------------------
1. **Обработка сообщений:** Код регистрирует обработчик `browser.runtime.onMessage`, который принимает сообщения от других частей расширения.

2. **Обработка конкретных событий:** Для каждого типа сообщения (например, `storePopupState`, `requestInsertStyleToPopup`, `showAllResults`) вызывается соответствующая функция обработки, например `genericListener.listeners.showAllResults`.

3. **Запрос стилей:** При необходимости, функция `loadDefaultCss` загружает стили из файла `/css/try_xpath_insert.css` с помощью `XMLHttpRequest`.

4. **Обновление стилей в табах:** Если нужно обновить стили в определённых вкладках, функция `updateCss` удаляет устаревшие стили и добавляет новые используя `browser.tabs.removeCSS` и `browser.tabs.insertCSS`, а также отправляет сообщения вкладкам для подтверждения.

5. **Хранение состояния:** Код сохраняет состояние всплывающего окна в переменной `popupState`.

6. **Передача данных:**  Функции отправляют сообщения в другие части расширения (например, `browser.tabs.sendMessage`), передавая необходимые данные (например, стили, результаты запросов).

7. **Получение и установка настроек:** Код запрашивает настройки из хранилища расширения (browser.storage.sync.get) и устанавливает значения в переменные (`attributes`, `css`, `popupCss`). Если значение `css` отсутствует, то загружается значение по умолчанию из файла стилей.

8. **Возврат ответов:**  Некоторые функции (`loadResults`, `loadOptions`) возвращают ответы в виде объектов.


Пример использования
-------------------------
.. code-block:: javascript

    // В другой части расширения (например, в popup.js) для отправки запроса на обновление стилей
    browser.runtime.sendMessage({
        "event": "updateCss",
        "expiredCssSet": { "css1": true, "css2": true},
        "newCss": "body{color: red}"
    });

    // В другой части расширения (например, в content.js) для получения данных из хранилища:
    browser.runtime.sendMessage({ "event": "loadOptions" }, function(response) {
      console.log(response.attributes);
    });