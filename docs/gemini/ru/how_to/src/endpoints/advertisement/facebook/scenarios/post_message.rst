Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Файл `post_message.py` содержит функции для публикации сообщения в Facebook.  Функции `post_title`, `upload_media`, `update_images_captions` и `publish` обеспечивают  последовательное выполнение операций: добавление заголовка и описания, загрузка медиафайлов, добавление подписей к медиа и публикацию сообщения. Функция `post_message` объединяет все эти шаги в единый процесс публикации.

Шаги выполнения
-------------------------
1. **Загрузка локаторов:** Функция `post_title` и `upload_media` используют локаторы из файла `post_message.json`.  Файл `post_message.json` должен содержать необходимые для работы локаторы элементов на странице Facebook.

2. **Добавление заголовка и описания (post_title):**
    - Функция `post_title` принимает объект `Driver` и объект `SimpleNamespace` (или строку) с данными для сообщения.
    - Прокручивает страницу назад.
    - Открывает форму добавления поста.
    - Формирует текст сообщения, объединяя заголовок и описание.
    - Добавляет сгенерированное сообщение в поле ввода сообщения.

3. **Загрузка медиа (upload_media):**
    - Функция `upload_media` принимает объект `Driver` и список или объект `SimpleNamespace` с путями к медиафайлам.
    - Открывает форму добавления медиа.
    - Обрабатывает различные типы входных данных (список объектов, один объект, путь к файлу).
    - Циклически загружает медиафайлы.
    - Если `without_captions` = `True`, пропуск шага добавления подписей.
    - Открывает форму для редактирования свойств загруженных медиа.
    - Загружает медиа в форму.

4. **Добавление подписей к медиа (update_images_captions):**
    - Функция `update_images_captions` принимает объект `Driver`, список объектов `SimpleNamespace` с описанием медиа и список элементов `WebElement` (полей для подписей).
    - Читает данные для перевода локалей из файла `translations.json`.
    - Формирует подписи для каждого медиафайла, используя данные из объекта `SimpleNamespace` и локале.
    - Добавляет подготовленные подписи в поля для подписей.

5. **Публикация (publish):**
    - Функция `publish` обрабатывает публикацию сообщения, ожидая, пока форма редактирования сообщения освободиться.
    - Пробует опубликовать сообщение.
    - Обрабатывает возможные ошибки при публикации (например, модальные окна) и делает попытки повторной публикации.
    - Если не удаётся опубликовать, возвращает `False`.

6. **Создание сообщения (post_message):**
    - Функция `post_message` объединяет все предыдущие этапы,  принимая на вход объект `Driver` и объект `SimpleNamespace` с информацией о сообщении, медиафайлах и параметрами публикации (например, `no_video`, `without_captions`).
    - Вызывает функции `post_title`, `upload_media`, и `publish` для публикации сообщения.
    - Возвращает `True`, если сообщение опубликовано успешно, `False` в противном случае.


Пример использования
-------------------------
.. code-block:: python

    from selenium import webdriver
    from src.webdriver import Driver
    from pathlib import Path
    import json
    from src import gs

    # Предполагается, что у вас есть объект Driver, установленный
    driver = Driver(webdriver.Chrome())

    # Путь к файлу с локаторами
    locator_file_path = Path(gs.path.src / 'endpoints' / 'advertisement' / 'facebook' / 'locators' / 'post_message.json')

    with open(locator_file_path, 'r', encoding='utf-8') as f:
        locators = json.load(f)

    # Подготовка данных для сообщения
    message = SimpleNamespace(
        title="Мой заголовок",
        description="Описание моего поста",
        products=[
            SimpleNamespace(local_saved_image="путь/к/изображению.jpg"),
            SimpleNamespace(local_saved_image="путь/к/изображению2.jpg")
        ]
    )


    # Инициализация объекта Driver
    d = Driver(webdriver.Chrome())
    d.get("url страницы") # Загружаем страницу Facebook


    if post_message(d, message):
        print("Сообщение опубликовано успешно")
    else:
        print("Ошибка при публикации сообщения")

    driver.quit()