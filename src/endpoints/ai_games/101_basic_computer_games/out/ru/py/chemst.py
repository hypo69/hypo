"""
CHEMST:
=================
Сложность: 5
-----------------
Игра "Химик" - это текстовая игра, в которой игрок должен угадать химическую формулу, основываясь на предоставленных подсказках. Игра использует упрощенную систему химических элементов и молекул. Цель игры - угадать молекулярную формулу, вводя последовательности букв, соответствующие химическим элементам. Если введенная формула верна, игра заканчивается победой, иначе игра продолжается с новыми подсказками.
Правила игры:
1. Компьютер выбирает случайную химическую формулу из списка предопределенных формул.
2. Игрок вводит свои предположения о химической формуле посимвольно.
3. После ввода каждого символа, компьютер сообщает, соответствует ли он загаданной формуле или нет.
4. Если введенная строка полностью совпадает с загаданной формулой, игрок побеждает и игра заканчивается.
5. Игра продолжается до тех пор, пока игрок не угадает формулу.
-----------------
Алгоритм:
1.  Выбрать случайную химическую формулу из списка формул.
2.  Установить индекс текущей позиции в формуле в 0.
3.  Начать цикл "пока формула не угадана":
    3.1 Запросить ввод символа у игрока.
    3.2 Если введенный символ соответствует символу формулы в текущей позиции, то перейти к шагу 3.3, иначе к шагу 3.4.
    3.3 Увеличить индекс текущей позиции на 1.
    3.4 Вывести сообщение об ошибке и перейти к шагу 3.1.
    3.5 Если индекс текущей позиции равен длине формулы, то вывести сообщение о победе и завершить цикл.
4. Конец игры.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> SelectFormula["Выбрать случайную формулу"]
    SelectFormula --> InitializeIndex["Инициализация: <code><b>currentIndex = 0</b></code>"]
    InitializeIndex --> LoopStart{"Начало цикла: пока не угадана"}
    LoopStart --> InputSymbol["Ввод символа: <code><b>userSymbol</b></code>"]
    InputSymbol --> CheckSymbol{"Проверка: <code><b>userSymbol == targetFormula[currentIndex]?</b></code>"}
    CheckSymbol -- Да --> IncreaseIndex["<code><b>currentIndex = currentIndex + 1</b></code>"]
    IncreaseIndex --> CheckEnd{"Проверка: <code><b>currentIndex == len(targetFormula)?</b></code>"}
    CheckEnd -- Да --> OutputWin["Вывод сообщения: <b>YOU GOT IT RIGHT!</b>"]
    OutputWin --> End["Конец"]
    CheckEnd -- Нет --> LoopStart
    CheckSymbol -- Нет --> OutputError["Вывод сообщения: <b>WRONG, TRY AGAIN</b>"]
     OutputError --> LoopStart
```

Legenda:
    Start - Начало игры.
    SelectFormula - Выбор случайной химической формулы из предопределенного списка.
    InitializeIndex - Инициализация переменной currentIndex (текущий индекс) значением 0.
    LoopStart - Начало цикла, который продолжается, пока формула не будет угадана.
    InputSymbol - Запрос у пользователя ввода символа и сохранение его в переменной userSymbol.
    CheckSymbol - Проверка, совпадает ли введенный символ userSymbol с символом загаданной формулы targetFormula в позиции currentIndex.
    IncreaseIndex - Увеличение значения currentIndex на 1, если символ угадан.
    CheckEnd - Проверка, равен ли currentIndex длине загаданной формулы targetFormula.
    OutputWin - Вывод сообщения о победе, если формула угадана.
    End - Конец игры.
    OutputError - Вывод сообщения об ошибке, если символ не угадан.
"""
import random

__author__ = 'hypo69 (hypo69@davidka.net)'

"""
Пояснения:
1.  Импортируется модуль `random` для выбора случайной формулы.
2.  Определяется список `formulas`, содержащий несколько химических формул.
3.  Выбирается случайная формула из списка и сохраняется в `targetFormula`.
4.  Инициализируется переменная `currentIndex` для отслеживания текущей позиции в формуле, которую нужно угадать.
5.  Начинается основной цикл игры, который продолжается до тех пор, пока игрок не угадает формулу.
6.  Внутри цикла программа просит игрока ввести один символ.
7.  Проверяется, соответствует ли введенный символ символу в `targetFormula` в позиции `currentIndex`.
    -   Если символы совпадают, `currentIndex` увеличивается на 1.
    -   Если символы не совпадают, выводится сообщение об ошибке, и игрок может попробовать снова.
8.  Если `currentIndex` равен длине `targetFormula`, это значит, что игрок угадал всю формулу, и выводится сообщение о победе.
"""
formulas = ["H2O", "CO2", "NaCl", "CH4", "C6H12O6"]
targetFormula = random.choice(formulas)
currentIndex = 0

print("Добро пожаловать в игру 'Химик'!")
print("Попробуйте угадать химическую формулу, вводя по одному символу.")

while True:
    userSymbol = input(f"Введите следующий символ ({currentIndex + 1} из {len(targetFormula)}): ").upper()

    if currentIndex < len(targetFormula) and userSymbol == targetFormula[currentIndex]:
        currentIndex += 1
        if currentIndex == len(targetFormula):
          print("ПОЗДРАВЛЯЮ! Вы угадали формулу!")
          break
    else:
        print("Неверно, попробуйте еще раз!")
"""
Пояснения:
1.  **Импорт модуля `random`**:
    -   `import random`: Импортирует модуль `random`, который используется для выбора случайной химической формулы.
2.  **Список формул**:
    -   `formulas = ["H2O", "CO2", "NaCl", "CH4", "C6H12O6"]`: Создает список химических формул, из которого будет выбрана загаданная формула.
3.  **Выбор случайной формулы**:
    -   `targetFormula = random.choice(formulas)`: Выбирает случайную формулу из списка `formulas` и сохраняет ее в переменную `targetFormula`.
4.  **Инициализация индекса**:
    -   `currentIndex = 0`: Инициализирует переменную `currentIndex`, которая будет использоваться для отслеживания текущей позиции в формуле, которую игрок пытается угадать.
5.  **Приветствие**:
    -   Выводит приветственное сообщение и инструкцию для игрока.
6.  **Основной цикл `while True:`**:
    -   Бесконечный цикл, который продолжается до тех пор, пока игрок не угадает всю формулу.
    -   **Ввод символа**:
        -   `userSymbol = input(f"Введите следующий символ ({currentIndex + 1} из {len(targetFormula)}): ").upper()`: Запрашивает у игрока ввод символа и переводит его в верхний регистр для сравнения с формулой.
    -   **Проверка символа**:
        -   `if currentIndex < len(targetFormula) and userSymbol == targetFormula[currentIndex]:`: Проверяет, что текущий индекс не выходит за пределы длины формулы и введенный символ совпадает с соответствующим символом в `targetFormula`.
        -   `currentIndex += 1`: Если символ угадан, то индекс увеличивается на 1.
        -   `if currentIndex == len(targetFormula):`: Проверяет, если индекс достиг конца формулы, значит игрок угадал формулу полностью.
        -   `print("ПОЗДРАВЛЯЮ! Вы угадали формулу!")`: Выводит сообщение о победе.
        -   `break`: Завершает цикл.
    -   **Обработка ошибки**:
        -   `else:`: Если введенный символ не соответствует ожидаемому символу в формуле.
        -   `print("Неверно, попробуйте еще раз!")`: Выводит сообщение об ошибке и просит игрока попробовать снова.
"""
```
