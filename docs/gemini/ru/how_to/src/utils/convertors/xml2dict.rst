Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код предоставляет функции для преобразования XML-строки или XML-дерева (ElementTree) в словарь Python. Функции обрабатывают атрибуты элементов, текстовые значения и вложенные элементы, создавая иерархическую структуру словаря, отражающую структуру XML.  Важная особенность - обработка атрибутов, включая namespace, и поддержка множественных элементов с одинаковым именем.  Также, код игнорирует атрибут `{http://www.w3.org/1999/xlink}href`.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:** Код импортирует модуль `xml.etree.ElementTree` (или `xml.etree.cElementTree` в зависимости от наличия).
2. **Функция `_parse_node`:** Рекурсивно анализирует XML-узел (элемент).
   - Создает пустой словарь `tree`.
   - Извлекает атрибуты XML-элемента и добавляет их в словарь `attrs`.
   - Игнорирует атрибут `{http://www.w3.org/1999/xlink}href`.
   - Извлекает текстовое значение элемента (`.text`) и очищает от пробелов.
   - Если у элемента есть атрибуты, добавляет `attrs` в `tree`.
   - Перебирает все дочерние элементы (`list(node)`).  Для каждого дочернего элемента:
     - Рекурсивно вызывает `_parse_node` для получения словаря `ctree`.
     - Добавляет `ctag` (имя тега) и `ctree` в `tree`.
     - Если `ctree` не пустой (имеются дочерние элементы), то обнуляет `value`.
     - Если `ctag` уже существует в `tree`, а значение не список, превращает его в список.
     - Добавляет `ctree` в список значений `ctag`.
   - Если у элемента нет дочерних элементов, добавляет `value` в `tree`.
   - Если в `tree` только поле `value`, возвращает это значение напрямую.
   - Возвращает `tree`.
3. **Функция `_make_dict`:** Создает словарь из тега и значения.
   - Если тег содержит namespace, обрабатывает его, добавляя `xmlns` в словарь.
   - Возвращает словарь с именем тега в качестве ключа и значением, которое может быть как строкой, так и словарем, если был namespace.
4. **Функция `xml2dict`:** Принимает XML-строку, преобразует её в `ElementTree` и вызывает `ET2dict`.
5. **Функция `ET2dict`:** Принимает XML-дерево (ElementTree), обрабатывает его корневой узел с помощью `_parse_node` и возвращает результат.


Пример использования
-------------------------
.. code-block:: python

    import xml.etree.ElementTree as ET
    from hypotez.src.utils.convertors.xml2dict import xml2dict

    xml_string = """
    <root xmlns="http://example.com" attr1="value1" attr2="{http://example.com}value2">
        <child>Text1</child>
        <child>Text2</child>
        <grandchild>Grandchild Text</grandchild>
    </root>
    """

    result = xml2dict(xml_string)
    print(result)