Как использовать функцию set_project_root
========================================================================================

Описание
-------------------------
Функция `set_project_root` определяет корневой каталог проекта, начиная с текущего каталога файла. Она ищет вверх по дереву каталогов, пока не найдет каталог, содержащий один из заданных маркеров файлов (например, `pyproject.toml`, `requirements.txt`, `.git`). Если такой каталог найден, он добавляется в `sys.path` для корректного импорта модулей из других каталогов проекта. В противном случае в `sys.path` добавляется каталог, где расположен скрипт.  Функция возвращает Path объект корневого каталога проекта.

Шаги выполнения
-------------------------
1. Функция принимает кортеж `marker_files` с именами файлов или каталогов, по которым она ищет корневой каталог проекта.
2. Она начинает поиск с текущего каталога, где расположен файл `header.py`
3. Циклически проходит по родительским каталогам, проверяя существование файлов/каталогов из списка `marker_files`.
4. Если один из файлов/каталогов найден в текущем родительском каталоге, функция возвращает найденный родительский каталог как корневой каталог проекта.
5. Если корневой каталог найден, то функция добавляет его в `sys.path` для корректного импорта модулей.
6. В противном случае возвращает текущий каталог как корневой каталог.

Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.templates.header import set_project_root
    import pathlib

    # Пример использования функции для получения корневого каталога проекта
    project_root = set_project_root()
    print(f"Корневой каталог проекта: {project_root}")

    # Проверка, что корневой каталог добавлен в sys.path
    print(f"Путь к проекту в sys.path: {'True' if str(project_root) in sys.path else 'False'}")
    
    # Дополнительный пример
    some_file_path = pathlib.Path(project_root, 'some_file.txt')
    print(f"Путь к файлу в проекте: {some_file_path}")