Как использовать конфигурацию TinyTroupe для OpenAI или Azure OpenAI
==================================================================================

Описание
-------------------------
Этот файл `config.ini` содержит конфигурацию для взаимодействия с API OpenAI или Azure OpenAI. Он определяет тип API, параметры модели, ограничения времени, количество попыток и другие настройки, необходимые для работы с сервисом.

Шаги выполнения
-------------------------
1. **Выбор типа API**:
   Конфигурация позволяет использовать OpenAI или Azure OpenAI.  По умолчанию выбран OpenAI (`API_TYPE=openai`).  Если необходимо использовать Azure, измените значение `API_TYPE` на `azure`.

2. **Настройка параметров модели**:
   Устанавливает модель (`MODEL`), максимальное количество токенов (`MAX_TOKENS`), температуру (`TEMPERATURE`), штрафы за частоту (`FREQ_PENALTY`) и присутствие (`PRESENCE_PENALTY`) повторений в генерируемом тексте, таймаут (`TIMEOUT`), максимальное количество попыток (`MAX_ATTEMPTS`), время ожидания (`WAITING_TIME`), и множитель экспоненциального замедления (`EXPONENTIAL_BACKOFF_FACTOR`).

3. **Настройка модели встраивания**:
   Устанавливает модель для встраивания текста (`EMBEDDING_MODEL`).

4. **Выбор кеширования API-вызовов**:
   Отключает (`CACHE_API_CALLS=False`) или включает (`CACHE_API_CALLS=True`) кеширование API-вызовов для повышения производительности.  Указывает имя файла для кеша (`CACHE_FILE_NAME`).

5. **Настройка максимальной длины отображаемого контента**:
   Определяет максимальную длину текста, который будет отображаться (`MAX_CONTENT_DISPLAY_LENGTH`).

6. **Настройка защиты от вредного контента и нарушения авторских прав**:
   Включить или отключить (`RAI_HARMFUL_CONTENT_PREVENTION`, `RAI_COPYRIGHT_INFRINGEMENT_PREVENTION`) соответствующие функции для предотвращения генерации вредного или нарушающего авторские права контента.


7. **Настройка уровня ведения журнала**:
   Устанавливает уровень ведения журнала (`LOGLEVEL`), выбирая из доступных вариантов `ERROR`, `WARNING`, `INFO`, `DEBUG`.


Пример использования
-------------------------
.. code-block:: python

    import configparser

    config = configparser.ConfigParser()
    config.read('config.ini')

    api_type = config['OpenAI']['API_TYPE']
    model = config['OpenAI']['MODEL']
    max_tokens = int(config['OpenAI']['MAX_TOKENS'])

    print(f"Используемый тип API: {api_type}")
    print(f"Используемая модель: {model}")
    print(f"Максимальное количество токенов: {max_tokens}")