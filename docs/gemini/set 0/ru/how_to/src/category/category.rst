Как использовать класс `Category` для работы с категориями PrestaShop
===================================================================

Описание
-------------------------
Этот класс `Category` предназначен для работы с категориями продуктов в системе PrestaShop. Он предоставляет методы для получения родительских категорий и асинхронного обхода структуры категорий. Класс наследуется от `PrestaCategory`, предоставляя расширенные возможности для взаимодействия с API PrestaShop.

Шаги выполнения
-------------------------
1. **Инициализация объекта `Category`:**
   - Создайте экземпляр класса `Category`, передав в конструктор `api_credentials` — данные для авторизации.
   - `api_credentials` должен содержать необходимые данные для доступа к API Престашоп.

2. **Получение родительских категорий:**
   - Используйте метод `get_parents(id_category, dept)`, чтобы получить список родительских категорий для заданной категории по ID.
   - `id_category` — идентификатор категории, для которой нужно получить родителей.
   - `dept` — глубина для поиска родительских категорий.
   - Метод возвращает список родительских категорий.

3. **Асинхронный обход категорий (`crawl_categories_async`):**
   - Используйте метод `crawl_categories_async(url, depth, driver, locator, dump_file, default_category_id, category=None)`, чтобы асинхронно обходить категории и собирать их в иерархический словарь.
   - `url` — URL начальной категории.
   - `depth` — максимальная глубина обхода (рекурсии).
   - `driver` — экземпляр Selenium WebDriver.
   - `locator` — XPath-выражение для поиска ссылок на дочерние категории.
   - `dump_file` — путь к файлу, куда будет сохраняться результат.
   - `default_category_id` — ID категории по умолчанию.
   - `category` (необязательно) —  существующий словарь категории для продолжения обхода.  По умолчанию `None`.  Метод возвращает обновлённый или новый словарь категории.
   - Внутри метода происходит проверка на дубликаты ссылок.

4. **Синхронный обход категорий (`crawl_categories`):**
   - Используйте метод `crawl_categories(url, depth, driver, locator, dump_file, id_category_default, category={})`, чтобы синхронно обходить категории и собирать их в иерархический словарь.
   - Параметры аналогичны `crawl_categories_async`, но этот метод выполняется синхронно.
   - Результат также сохраняется в JSON файл, используя `j_loads` и `j_dumps` для безопасной работы с JSON.


5. **Проверка отсутствующих ключей:**
   - Используйте функцию `compare_and_print_missing_keys(current_dict, file_path)`, чтобы сравнить текущий словарь с данными из файла и вывести список ключей, которых нет в текущем словаре.

Пример использования
-------------------------
```python
# Пример использования метода crawl_categories для обхода категорий
from selenium import webdriver
from pathlib import Path

# ... (Инициализация драйвера и других необходимых переменных)

# Вызов функции
result = category_instance.crawl_categories(
    url="https://example.com/categories",
    depth=2,
    driver=driver,
    locator="//a[@class='category-link']",  # Замените на реальный локатор
    dump_file=Path("categories.json"),
    id_category_default=123,  # Замените на ID категории по умолчанию
)

# Обработка результата
print(result)

# Пример сравнения с данными из файла
compare_and_print_missing_keys(result, "categories.json")
```
**Важно:**  Замените `https://example.com/categories`, `//a[@class='category-link']`, и `123` на соответствующие значения для вашего сайта.  Убедитесь, что у вас установлены необходимые библиотеки (Selenium, requests, lxml).  Также убедитесь в корректности логики `execute_locator` и `_is_duplicate_url` в контексте вашего кода.