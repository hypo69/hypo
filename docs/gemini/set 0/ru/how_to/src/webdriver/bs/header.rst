Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневую директорию проекта, начиная с текущей директории файла. Он ищет файлы, такие как `pyproject.toml`, `requirements.txt` или `.git` в родительских директориях. Если корневая директория найдена, она добавляется в `sys.path`, что позволяет импортировать модули из проекта. Далее код загружает настройки из файла `settings.json` в переменную `settings`, и  `README.MD` в переменную `doc_str`. Затем, он устанавливает значения переменных, таких как имя проекта, версию, документацию, автора, копирайт и ссылку на спонсорскую поддержку,  на основе данных из `settings.json` или возвращает значения по умолчанию, если файл или данные в нем отсутствуют.


Шаги выполнения
-------------------------
1. **Импортирует необходимые библиотеки**: `sys`, `json`, `pathlib`, `packaging.version`.

2. **Определяет функцию `set_project_root`**:
    - Принимает кортеж `marker_files` с именами файлов или директорий, используемых для поиска корневой директории проекта.
    - Получает текущую директорию файла с помощью `Path(__file__).resolve().parent`.
    - Итерируется по родительским директориям текущей директории.
    - Проверяет, существует ли хотя бы один из файлов/директорий из `marker_files` в текущей родительской директории.
    - Если найден, то устанавливает `__root__` в найденную директорию и прерывает цикл.
    - Добавляет корневую директорию в `sys.path`, если она еще не присутствует в нём.
    - Возвращает корневую директорию `__root__`.

3. **Находит корневую директорию проекта**: Вызывает функцию `set_project_root()` для определения корневой директории и сохраняет её в переменной `__root__`.

4. **Загружает настройки из файла `settings.json`**:
   -  Попытка открыть файл `gs.path.root / 'src' / 'settings.json'` и загрузить данные из него в переменную `settings` с помощью `json.load()`.
   - Обработка исключений `FileNotFoundError` и `json.JSONDecodeError` для предотвращения сбоя программы, если файл не найден или содержит некорректные данные.

5. **Загружает документацию из файла `README.MD`**:
    - Попытка открыть файл `gs.path.root / 'src' / 'README.MD'`, прочитать его содержимое и сохранить в переменную `doc_str`
    - Обработка исключений `FileNotFoundError` и `json.JSONDecodeError`.

6. **Устанавливает значения переменных**:
   - Назначает переменным `__project_name__`, `__version__`, `__doc__`, `__author__`, `__copyright__`, `__cofee__` значения, полученные из `settings`, если они доступны, или использует значения по умолчанию, если соответствующие поля в `settings.json` отсутствуют или содержат некорректные данные.


Пример использования
-------------------------
.. code-block:: python

    # Предполагается, что модуль gs уже импортирован и path.root доступен
    from pathlib import Path
    # ... (ваш код импортирования) ...
    # ... (ваш код, который использует settings, version и т.д.) ...