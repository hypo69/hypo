Как использовать функцию `login`
========================================================================================

Описание
-------------------------
Функция `login` предназначена для авторизации на сайте поставщика Morlevi. Она пытается войти в систему, обрабатывая возможные модальные окна и ошибки во время процесса входа.

Шаги выполнения
-------------------------
1. **Получение ссылки:** Функция получает URL сайта Morlevi (`https://www.morlevi.co.il`).
2. **Попытка входа:** Вызывается вспомогательная функция `_login` для выполнения процесса входа.
3. **Обработка модальных окон:** Если вход не удался, функция пытается закрыть модальные окна, используя локейторы из `_s.locators['login']['close_pop_up_locator']`.
4. **Повторная попытка входа:** После закрытия модального окна функция повторно вызывает `_login`, если это необходимо.
5. **Обработка ошибок:** Если на любом шаге возникает ошибка, функция `login` логгирует её и возвращает `None`.

Пример использования
-------------------------
.. code-block:: python

    # Предполагается, что supplier - это объект, содержащий данные о поставщике, включая driver, locators и settings.
    from hypotez.src.suppliers.ivory.__morlevi__ import login, Product

    supplier = Supplier(...)  # Инициализация объекта Supplier
    if login(supplier):
        print("Успешная авторизация.")
        # Дальнейшие действия после успешной авторизации
    else:
        print("Ошибка авторизации.")
```

```rst
Как использовать функцию `grab_product_page`
========================================================================================

Описание
-------------------------
Функция `grab_product_page` предназначена для сбора данных о продукте с сайта Morlevi. Она извлекает информацию о продукте, включая ID, SKU, название, описание, цену и изображения.

Шаги выполнения
-------------------------
1. **Создание объекта Product:** Создается объект `Product` с указанным поставщиком (`s`).
2. **Закрытие модального окна (если необходимо):** Если на странице продукта появляется модальное окно, функция его закрывает.
3. **Извлечение ID:** Извлекает ID продукта с помощью локейтора. Если `sku_locator` возвращает список, берется первый элемент.
4. **Извлечение SKU и URL:** Формирует SKU и URL продукта.
5. **Извлечение заголовка (title):** Извлекает заголовок страницы продукта.
6. **Извлечение описания (summary и description):** Извлекает краткое и полное описание продукта.
7. **Извлечение цены:** Извлекает цену продукта, обрабатывает возможные ошибки форматирования.
8. **Извлечение цены без НДС (price tax excluded):** Устанавливает цену без НДС, равную цене.
9. **Извлечение доставки (delivery):** TODO: перенести в комбинации.
10. **Извлечение изображений:** Извлекает ссылку на главное изображение продукта.
11. **Установка дополнительных полей (combinations, qty, supplier):** Устанавливает дополнительные поля, такие как комбинации, количество и имя поставщика.
12. **Установка rewritten URL:** Устанавливает rewritten URL продукта.

Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.suppliers.ivory.__morlevi__ import grab_product_page, Supplier

    supplier = Supplier(...)  # Инициализация объекта Supplier
    product_page = grab_product_page(supplier)

    # Обработка полученного объекта product_page, например, сохранение в базу данных.
    if product_page:
        print(product_page.fields)
```

```rst
Как использовать функцию `list_products_in_category_from_pagination`
========================================================================================

Описание
-------------------------
Функция `list_products_in_category_from_pagination` извлекает ссылки на все продукты в заданной категории на сайте Morlevi, переходя по страницам пагинации.

Шаги выполнения
-------------------------
1. **Получение списка ссылок на продукты на текущей странице:**  Находит все ссылки на продукты на текущей странице.
2. **Обработка отсутствия продуктов:** Если на странице нет продуктов, возвращает пустой список.
3. **Добавление ссылок в список:** Добавляет ссылки в список `list_products_in_category`.
4. **Обработка пагинации:** Находит все ссылки на страницы пагинации.
5. **Переход по страницам:** Для каждой ссылки на страницу пагинации:
    * Переходит на страницу.
    * Извлекает ссылки на продукты.
    * Добавляет ссылки в список `list_products_in_category`.
    * Проверяет, не зациклилась ли навигация по страницам.
6. **Уникализация ссылок:** Удаляет повторяющиеся ссылки из списка.
7. **Возврат списка:** Возвращает список с уникальными ссылками на продукты.

Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.suppliers.ivory.__morlevi__ import list_products_in_category_from_pagination, Supplier

    supplier = Supplier(...)  # Инициализация объекта Supplier
    product_links = list_products_in_category_from_pagination(supplier)

    # Обработка полученного списка ссылок на продукты, например, получение данных по каждой ссылке
    for link in product_links:
        # Дополнительные действия для каждой ссылки
        ...

```

**Примечание:**  В примерах `Supplier(...)` - это предполагаемый объект, содержащий данные о поставщике. Вам нужно заменить его на ваш собственный способ инициализации объекта.  Также, в примерах  не хватает импорта необходимых модулей.  Для полного использования кода, необходимо импортировать все необходимые классы и модули из файлов `Product`, `settings` и других файлов,  на которые ссылается код.