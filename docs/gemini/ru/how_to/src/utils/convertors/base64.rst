Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот модуль предоставляет функцию `base64_to_tmpfile`, которая декодирует Base64 закодированное содержимое и записывает его в временный файл с указанным расширением.  Функция определяет расширение файла по имени входного файла и создаёт временный файл с этим же расширением.

Шаги выполнения
-------------------------
1. Импортирует необходимые модули: `base64`, `tempfile` и `os`.
2. Определяет функцию `base64_to_tmpfile` принимающую два аргумента:
    - `content` (строка): Base64 закодированное содержимое, которое нужно декодировать.
    - `file_name` (строка): Имя файла, из которого извлекается расширение для временного файла.
3. Извлекает расширение файла из `file_name`.
4. Создаёт временный файл с указанным расширением с помощью `tempfile.NamedTemporaryFile(delete=False, suffix=ext)`. Флаг `delete=False` гарантирует, что файл не будет удалён после закрытия. `suffix=ext` добавляет расширение к имени временного файла.
5. Декодирует Base64 содержимое с помощью `base64.b64decode(content)`.
6. Записывает декодированное содержимое в временный файл с помощью `tmp.write(...)`.
7. Возвращает путь к созданному временному файлу.


Пример использования
-------------------------
.. code-block:: python

    import base64
    from hypotez.src.utils.convertors.base64 import base64_to_tmpfile

    base64_content = "SGVsbG8gd29ybGQh"  # Base64 закодированное содержимое "Hello world!"
    file_name = "example.txt"
    tmp_file_path = base64_to_tmpfile(base64_content, file_name)
    print(f"Временный файл создан по пути: {tmp_file_path}")