Как использовать этот блок кода для анализа кода и генерации документации
========================================================================================

Описание
-------------------------
Этот блок кода представляет собой шаблон для инструкций, как анализировать и документировать код. Он определяет основные требования к анализу кода, требуя подробного описания алгоритма работы, объяснения всех элементов кода (импортов, классов, функций, переменных) и выявления потенциальных ошибок или улучшений.  Он также задает формат ответа, который включает исходный код, пошаговое описание алгоритма, детальное объяснение и потенциальные улучшения.

Шаги выполнения
-------------------------
1. **Прочитайте основные требования**: Ознакомьтесь с требованиями к анализу кода, включая формат ответа.
2. **Анализируйте исходный код**: Предоставьте исходный код для анализа.
3. **Опишите алгоритм работы**: Создайте пошаговую блок-схему, отображающую перемещение данных между функциями или классами в коде.
4. **Объясните все элементы**:  Детально опишите импорты, классы, функции, переменные и их связи с другими частями проекта.
5. **Найдите потенциальные ошибки и улучшения**:  Укажите возможные ошибки в коде и предложите улучшения.
6. **Форматируйте ответ**:  Представьте ответ в заданном формате, используя разметку <input code>, <algorithm>, <explanation>.
7. **Проверьте соответствие формату**: Убедитесь, что ответ соответствует заданному формату и всем требованиям.

Пример использования
-------------------------
.. code-block:: markdown
    **Резюме для промпта:**

    ### Основные требования:
    1. **Анализ кода**:
       - Предоставьте исходный код без изменений.
       - Опишите алгоритм работы кода в виде пошаговой блок-схемы, показывая перемещение данных между функциями или классами.
       - Объясните работу кода, включая импорты, классы, функции, переменные и их связи с другими частями проекта.
       - Укажите потенциальные ошибки или улучшения, если они есть.

    2. **Формат ответа**:
       - **<input code>**: Исходный код без изменений.
       - **<algorithm>**: Пошаговое описание алгоритма работы кода с примерами.
       - **<explanation>**: Детальное объяснение кода, включая:
         - Импорты: их назначение и связи с другими модулями.
         - Классы: их назначение, атрибуты и методы, связи с другими компонентами.
         - Функции: описание назначения, аргументов и возвращаемых значений.
         - Переменные: описание типов и использования.
         - Связь с другими частями проекта и потенциальные ошибки или улучшения.

    ### Пример вызова:
    Представлен код, который анализируется и объясняется в соответствии с инструкциями.