Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот JavaScript-код обрабатывает запросы от расширения браузера Try XPath.  Он отвечает на различные события, связанные с выполнением XPath-запросов, навигацией по страницам и кадрам, обновлением стилей, и управлением фокусом на элементах.  Код отвечает на команды от расширения, выполняет запросы, взаимодействует с документами и элементами страницы, включая работу с кадрами, и отправляет результаты обратно в расширение. Он инициализирует слушатели событий для обработки сообщений, поступающих от расширения.

Шаги выполнения
-------------------------
1. **Обработка сообщений от расширения:** Код устанавливает слушатель (`window.addEventListener('message', ...`)), который обрабатывает сообщения, приходящие из расширения.  Входящие сообщения содержат информацию о запросе (например, XPath-выражение, тип результата, контекст поиска).

2. **Инициализация:** При первом запуске выполняется проверка `tx.isContentLoaded`, предотвращая повторную инициализацию.  Установка переменных (например, `contextItem`, `currentItems`) для хранения данных о контексте и результатах запроса.

3. **Обработка запросов:** Код содержит функцию `genericListener` которая, в зависимости от типа сообщения (например, `execute`, `focusItem`), вызывает соответствующую обработку:
    - **`execute`:** Обрабатывает запрос выполнения XPath-выражения.  Поиск элементов по XPath в указанном контексте.  Получение и возвращение результатов.
    - **`focusItem`:**  Устанавливает фокус на указанный элемент.
    - **`focusContextItem`:** Устанавливает фокус на элемент контекста.
    - **`focusFrame`:**  Фокусирует указанный iframe. Работает с различными обработчиками для разных случаев, в том числе с  пустыми окнами.

4. **Обновление стилей:** Код обновляет CSS,  вставляя, удаляя или изменяя стили, определенные расширением. Используется `updateCss` для отправки обновлений расширению. `updateStyleElement` добавляет или обновляет стили в текущем документе.

5. **Взаимодействие с кадрами (frames):** Код умеет обрабатывать запросы, связанные с кадрами (iframe). Функция `traceBlankWindows` определяет, находится ли iframe в пустом окне.  Функция `getFrames` получает указанные кадра по заданным индексам.  Функции для управления и работы с кадрами.

6. **Обработка ошибок:**  В коде присутствуют обработчики ошибок `try...catch`.  В случае возникновения проблем (например, при работе с кадрами), генерируется сообщение об ошибке и передается расширению.

7. **Сохранение и восстановление атрибутов:** Функции `saveAttrForItem`, `restoreItemAttrs` сохраняют и восстанавливают атрибуты элементов, для корректного отображения после обновления.

8. **Результат:** После выполнения запроса, расширение получает результат и данные.


Пример использования
-------------------------
.. code-block:: javascript
    //Пример отправки запроса выполнения XPath-выражения.  Этот код находится в расширении браузера.
    browser.runtime.sendMessage({
        "event": "execute",
        "main": {
            "method": "evaluate",
            "expression": "//div[@id='someDiv']",
            "resultType": "ANY_TYPE(0)",
            "resolver": ""
        },
        "context": null,
        "frameDesignation": null
    });