# Инструкции по генерации документации к коду на Python

## Обзор

Данный документ описывает формат документации, который необходимо использовать для каждого файла Python-кода.  Документация должна быть сгенерирована в формате Markdown и включать структурированное описание кода, включая классы, функции, методы и их параметры, возвращаемые значения и возможные исключения.  Включён порядок создания, а также описание используемых заголовков и элементов форматирования.

## Требования к формату документации

* **Формат файла:** Markdown (.md)
* **Заголовок:** Каждый файл должен начинаться с заголовка и краткого описания содержимого.
* **Комментарии:** Для всех классов и функций используйте следующий формат комментариев:

```python
def function(param: str, param1: Optional[str | dict | str] = None) -> dict | None:
    """
    Args:
        param (str): Описание параметра `param`.
        param1 (Optional[str | dict | str], optional): Описание параметра `param1`. По умолчанию `None`.

    Returns:
        dict | None: Описание возвращаемого значения. Возвращает словарь или `None`.

    Raises:
        SomeError: Описание ситуации, при которой возникает исключение `SomeError`.
    """
```

* **Обработка исключений:** Используйте `ex` вместо `e` в блоках обработки исключений.
* **Оглавление (TOC):** В начале каждого файла документации должен быть раздел оглавления.  Структура должна содержать ссылки на все основные разделы документации модуля.
* **Форматирование:** Используйте правильный синтаксис Markdown для всех заголовков, списков и ссылок.  Для документации классов, функций и методов используйте структурированные разделы с описаниями, деталями параметров, возвращаемыми значениями и вызываемыми исключениями. Пример:

```markdown
## Функции

### `function_name`

**Описание:** Краткое описание функции.

**Параметры:**
- `param` (str): Описание параметра `param`.
- `param1` (Optional[str | dict | str], optional): Описание параметра `param1`. По умолчанию `None`.

**Возвращаемое значение:**
- `dict | None`: Описание возвращаемого значения.

**Возможные исключения:**
- `SomeError`: Описание ситуации, при которой возникает исключение `SomeError`.
```

* **Заголовки разделов:** Используйте заголовки уровней 1 (`#`), 2 (`##`), 3 (`###`) и 4 (`####`) последовательно по всему файлу.


## Структура файла документации

```markdown
# Имя модуля

## Обзор

Краткое описание цели модуля.

## Классы

### `Имя класса`

**Описание:** Краткое описание класса.

**Методы:**
- `метод_1`: Краткое описание метода.
- `метод_2`: Краткое описание метода.


## Функции

### `Имя функции`

**Описание:** Краткое описание функции.

**Параметры:**
- `параметр_1` (тип): Описание параметра.
- `параметр_2` (тип, опционально): Описание параметра. По умолчанию `значение_по_умолчанию`.

**Возвращаемое значение:**
- `тип_возвращаемого_значения`: Описание возвращаемого значения.

**Возможные исключения:**
- `Исключение`: Описание ситуации, при которой возникает исключение.

## Оглавление


[Ссылка на Обзор](#Обзор)
[Ссылка на Классы](#Классы)
[Ссылка на Функции](#Функции)
```

Следуйте приведенному формату, чтобы гарантировать соответствие требованиям к генерации документации.