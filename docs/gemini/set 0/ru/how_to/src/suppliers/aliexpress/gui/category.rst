Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет класс `CategoryEditor`, который представляет собой окно PyQt для редактирования категорий рекламных кампаний AliExpress.  Он позволяет открыть JSON-файл, содержащий данные кампании, загрузить эти данные, отобразить информацию о кампании и категориях, а также подготовить категории к использованию.  Код использует асинхронные операции для подготовки категорий, что улучшает отзывчивость приложения.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:** Код импортирует необходимые библиотеки PyQt6, а также `asyncio`, `SimpleNamespace`, `Path` и вспомогательные функции `j_loads_ns`, `j_dumps` для работы с JSON-данными и асинхронными операциями.

2. **Определение класса `CategoryEditor`:** Создается класс `CategoryEditor`, наследующий от `QtWidgets.QWidget`. Он хранит данные кампании, путь к файлу, экземпляр класса `AliCampaignEditor` для подготовки категорий.

3. **Инициализация `CategoryEditor`:** В конструкторе `__init__` выполняется настройка пользовательского интерфейса (UI) с кнопками для открытия файла, подготовки всех категорий и подготовки отдельной категории, а также метками для отображения названия файла и названия кампании.

4. **Открытие JSON-файла:** При нажатии на кнопку "Открыть JSON-файл" вызывается метод `open_file`, который использует диалоговое окно для выбора файла JSON.

5. **Загрузка JSON-файла:** Метод `load_file` загружает выбранный файл JSON.  Он использует `j_loads_ns` для обработки данных JSON и преобразования их в объект `SimpleNamespace`.  Важной частью является проверка на наличие ошибок при загрузке.

6. **Создание виджетов:** Метод `create_widgets` динамически создает виджеты (метки) для отображения данных загруженного файла JSON (название кампании, категории).  Он удаляет предыдущие виджеты, сохраняя кнопки для открытия файла и подготовки.

7. **Асинхронная подготовка категорий:** При нажатии на кнопки "Подготовить все категории" или "Подготовить категорию" вызываются соответствующие асинхронные методы `prepare_all_categories_async` и `prepare_category_async`, которые передают обработку в класс `AliCampaignEditor`.

8. **Обработка ошибок:** Код обрабатывает возможные исключения при загрузке и подготовке данных, отображая сообщения об ошибках пользователю.

Пример использования
-------------------------
.. code-block:: python

    import sys
    from PyQt6.QtWidgets import QApplication
    from hypotez.src.suppliers.aliexpress.gui.category import CategoryEditor

    if __name__ == "__main__":
        app = QApplication(sys.argv)
        main_app = SimpleNamespace()  # Замените на ваш основной объект приложения
        editor = CategoryEditor(main_app=main_app)
        editor.show()
        sys.exit(app.exec())