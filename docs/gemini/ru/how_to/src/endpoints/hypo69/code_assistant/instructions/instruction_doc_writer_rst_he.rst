**הוראות ליצירת תיעוד קוד**
================================================================================

**1. ניתוח הקוד:** הבין את הלוגיקה והפעולות שביצוע הפונקציה או הקוד.

**2. יצירת הוראות שלב אחר שלב:**

    - **תיאור:** הסבר מה מבצע קטע הקוד.
    - **שלבים:** תאר את רצף הפעולות בקוד.
    - **דוגמה לשימוש:** צר דוגמה של שימוש בקטע קוד בתוך פרויקט.

**3. עיצוב בהתאם ל- `reStructuredText (RST)`:**

    השתמשו במבנה הבא ב- RST:

```rst
כיצד להשתמש בקטע קוד זה
========================================================================================

תיאור
-------------------------
[הסבר מה מבצע הקוד.]

שלבים
-------------------------
1. [תיאור שלב ראשון.]
2. [תיאור שלב שני.]
3. [המשך לפי הצורך...]

דוגמה לשימוש
-------------------------
.. code-block:: python

    [דוגמה לשימוש בקטע קוד]
```

**4. הימנע ממושגים מעורפלים:**  הימנע ממונחים כמו "לקבל" או "לבצע".  היה ספציפי בתיאור פעולות הקוד, למשל: "בודק", "מאמת" או "שולח".


**דוגמה:**

נניח שקטע הקוד הוא פונקציה שמקבלת רשימה של מספרים וחוזרת ברשימה של המספרים המכפילים של 2.

```python
def get_even_numbers(numbers):
    """
    מקבלת רשימת מספרים ומחזירה רשימה של המספרים הזוגיים.

    ארגומנטים:
        numbers (list): רשימת מספרים שלמים.

    ערך מוחזר:
        list: רשימת המספרים הזוגיים.
    """
    even_numbers = []
    for number in numbers:
        if number % 2 == 0:
            even_numbers.append(number)
    return even_numbers

```

תיעוד ב- RST:

```rst
כיצד להשתמש בפונקציה get_even_numbers
====================================================================================

תיאור
-------------------------
פונקציה זו מקבלת רשימה של מספרים ומחזירה רשימה של המספרים הזוגיים ברשימה.

שלבים
-------------------------
1. הפונקציה מקבלת רשימת מספרים כקלט.
2. היא עוברת על כל מספר ברשימה.
3. עבור כל מספר, היא בודקת האם המספר הוא זוגי.
4. אם המספר הוא זוגי, היא מוסיפה אותו לרשימת המספרים הזוגיים.
5. בסוף, היא מחזירה את רשימת המספרים הזוגיים.


דוגמה לשימוש
-------------------------
.. code-block:: python

    numbers = [1, 2, 3, 4, 5, 6]
    even_numbers = get_even_numbers(numbers)
    print(even_numbers)  # ייצא: [2, 4, 6]
```
```