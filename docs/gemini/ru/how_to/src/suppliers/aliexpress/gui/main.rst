Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код реализует главное окно приложения с вкладками для редактирования JSON, кампаний и продуктов.  Он предоставляет функционал открытия, сохранения файлов, копирования и вставки текста, а также содержит обработку ошибок при загрузке JSON файлов.  Код использует PyQt6 для графического интерфейса, а также асинхронные операции через asyncio и qasync.

Шаги выполнения
-------------------------
1. **Импорт необходимых библиотек:** Код импортирует нужные модули PyQt6, asyncio, sys, pathlib,  библиотеки для работы с JSON,  и классы для редактирования продуктов, кампаний и категорий.


2. **Определение класса `MainApp`:**  Создается класс `MainApp`, наследник `QtWidgets.QMainWindow`, для управления главным окном приложения.

3. **Инициализация приложения:** Конструктор `__init__` создает главное окно, устанавливает заголовок, размеры и создает виджет `QTabWidget` для вкладок. Он также добавляет вкладки для редактирования JSON, кампаний и продуктов, инициализируя соответствующие виджеты (например, `CampaignEditor`, `ProductEditor`).

4. **Создание меню:** Метод `create_menubar` добавляет меню "Файл" и "Правка" в главное окно.  В меню "Файл" реализованы действия по открытию, сохранению файла, выходу из приложения и открытию файла продукта. Действия связаны с методами `open_file`, `save_file`, `exit_application` и `product_editor_app.open_file`. В меню "Правка" реализованы действия по копированию и вставке текста.

5. **Обработка событий:** Методы `open_file`, `save_file`, `copy`, `paste`, `exit_application`, `load_file` обрабатывают соответствующие события, например, открытие файла, сохранение данных, копирование/вставку текста или выход из приложения.  Метод `load_file` загружает содержимое JSON файла в редактор кампаний.

6. **Обработка ошибок:** Метод `load_file` обрабатывает возможные исключения при загрузке файла JSON, выводит сообщение об ошибке пользователю.

7. **Запуск приложения:** Функция `main` запускает приложение PyQt6, создает цикл обработки событий asyncio и запускает главное окно.


Пример использования
-------------------------
.. code-block:: python

    import sys
    from PyQt6.QtWidgets import QApplication

    if __name__ == "__main__":
        app = QApplication(sys.argv)
        main_app = MainApp()
        main_app.show()
        sys.exit(app.exec())