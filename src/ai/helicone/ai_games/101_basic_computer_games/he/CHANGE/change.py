"""
HILO:
=================
קושי: 4
-----------------
משחק "גבוה או נמוך" הוא משחק ניחושים בו המחשב בוחר מספר אקראי בין 1 ל-100, והשחקן צריך לנחש אותו. לאחר כל ניחוש, המחשב משיב "גבוה מדי", "נמוך מדי" או "בדיוק", ומאפשר לשחקן לנחש שוב עד שיצליח.

חוקי המשחק:
1. המחשב בוחר מספר אקראי בין 1 ל-100.
2. השחקן מנחש מספר.
3. המחשב מגיב "גבוה מדי" אם הניחוש גדול מהמספר, "נמוך מדי" אם הניחוש קטן מהמספר, ו"בדיוק" אם הניחוש נכון.
4. השחקן ממשיך לנחש עד שהוא פוגע במספר הנכון.
-----------------
אלגוריתם:
1.  הדפס הודעת פתיחה למשחק.
2.  צור מספר אקראי בין 1 ל-100 ושמור אותו כ- targetNumber.
3.  התחל לולאה "כל עוד לא נוחש נכון"
    3.1 קלוט ניחוש מהמשתמש.
    3.2 אם הניחוש שווה ל- targetNumber, הדפס "בדיוק" וסיים את הלולאה.
    3.3 אם הניחוש קטן מ-targetNumber, הדפס "נמוך מדי".
    3.4 אחרת (אם הניחוש גדול מ-targetNumber), הדפס "גבוה מדי".
4.  סיום המשחק.
-----------------
תרשים זרימה:
```mermaid
flowchart TD
    Start["התחלה"] --> OutputGreeting["הצגת הודעת פתיחה"]
    OutputGreeting --> InitializeTargetNumber["<p align='left'>אתחול מספר מטרה:
    <code><b>
    targetNumber = random(1, 100)
    </b></code></p>"]
    InitializeTargetNumber --> LoopStart{"תחילת לולאה: כל עוד לא נוחש"}
    LoopStart -- כן --> InputGuess["קלט מספר מהמשתמש: <code><b>userGuess</b></code>"]
    InputGuess --> CheckGuess{"בדיקה: <code><b>userGuess == targetNumber?</b></code>"}
    CheckGuess -- כן --> OutputCorrect["הצגת הודעה: <b>בדיוק!</b>"]
    OutputCorrect --> End["סוף"]
    CheckGuess -- לא --> CheckLow{"בדיקה: <code><b>userGuess < targetNumber?</b></code>"}
    CheckLow -- כן --> OutputLow["הצגת הודעה: <b>נמוך מדי</b>"]
    OutputLow --> LoopStart
    CheckLow -- לא --> OutputHigh["הצגת הודעה: <b>גבוה מדי</b>"]
    OutputHigh --> LoopStart
    LoopStart -- לא --> End
```
Legenda:
    Start - תחילת התוכנית.
    OutputGreeting - הצגת הודעת פתיחה למשחק.
    InitializeTargetNumber - יצירת מספר אקראי בין 1 ל-100 ושמירתו במשתנה targetNumber.
    LoopStart - תחילת הלולאה, הממשיכה כל עוד השחקן לא ניחש את המספר הנכון.
    InputGuess - קלט ניחוש מהמשתמש ושמירתו במשתנה userGuess.
    CheckGuess - בדיקה האם המספר שהוזן שווה למספר המוגלה.
    OutputCorrect - הצגת הודעה "בדיוק!", אם המספר נוחש, וסיום המשחק.
    End - סוף התוכנית.
    CheckLow - בדיקה האם המספר שהוזן קטן מהמספר המוגלה.
    OutputLow - הצגת הודעה "נמוך מדי", אם המספר שהוזן קטן מהמספר המוגלה.
    OutputHigh - הצגת הודעה "גבוה מדי", אם המספר שהוזן גדול מהמספר המוגלה.
"""
import random

# הדפסת הודעת פתיחה
print("בוא נשחק משחק ניחושים! נסה לנחש מספר בין 1 ל-100.")

# יצירת מספר אקראי בין 1 ל-100
targetNumber = random.randint(1, 100)

# לולאת המשחק
while True:
    # קבלת ניחוש מהמשתמש
    try:
        userGuess = int(input("מה הניחוש שלך? "))
    except ValueError:
        print("אנא הזן מספר שלם.")
        continue # חוזר לתחילת הלולאה אם הקלט לא תקין
    
    # בדיקה אם הניחוש נכון
    if userGuess == targetNumber:
        print("בדיוק!")
        break  # יציאה מהלולאה אם הניחוש נכון
    # בדיקה אם הניחוש נמוך מדי
    elif userGuess < targetNumber:
        print("נמוך מדי")
    # אם הניחוש גדול מדי
    else:
        print("גבוה מדי")


"""
הסבר הקוד:
1. **ייבוא מודול random**:
   - `import random`: ייבוא מודול random, המשמש ליצירת מספרים אקראיים.

2. **הודעת פתיחה**:
   - `print("בוא נשחק משחק ניחושים! נסה לנחש מספר בין 1 ל-100.")`: הצגת הודעה למשתמש בתחילת המשחק.

3. **יצירת מספר מטרה**:
   - `targetNumber = random.randint(1, 100)`: יצירת מספר שלם אקראי בין 1 ל-100 ושמירתו במשתנה targetNumber.

4. **לולאת המשחק הראשית**:
   - `while True:`: לולאה אינסופית, שתמשיך עד שהמשתמש ינחש את המספר.

5. **קבלת קלט מהמשתמש**:
    - `try...except ValueError`: בלוק try-except מטפל בשגיאות קלט אפשריות. אם המשתמש יזין משהו שאינו מספר שלם, יוצג הודעת שגיאה.
    -  `userGuess = int(input("מה הניחוש שלך? "))`: בקשת קלט מהמשתמש והמרתו למספר שלם.

6. **בדיקת הניחוש**:
   - `if userGuess == targetNumber:`: בדיקה האם הניחוש של המשתמש שווה למספר המטרה.
      - `print("בדיוק!")`: אם הניחוש נכון, מוצגת הודעה למשתמש.
      - `break`: יציאה מהלולאה, סיום המשחק.
   - `elif userGuess < targetNumber:`: אם הניחוש נמוך מהמספר המטרה, מוצגת הודעה "נמוך מדי".
   - `else:`: אם הניחוש גבוה מהמספר המטרה, מוצגת הודעה "גבוה מדי".

7. **סיום המשחק**:
   - הלולאה מסתיימת כאשר המשתמש מנחש את המספר הנכון, ואין צורך בפקודה מפורשת לסיום המשחק מחוץ ללולאה.
"""
