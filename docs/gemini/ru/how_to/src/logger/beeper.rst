Как использовать класс Beeper
========================================================================================

Описание
-------------------------
Этот код реализует класс `Beeper` для воспроизведения звуковых сигналов (бипов) в зависимости от уровня события (например, INFO, WARNING, ERROR).  Класс использует библиотеки `winsound` и `time` для генерации звуков на Windows.  Он определяет различные уровни звуков с помощью перечисления `BeepLevel`, позволяя связывать различные звуки с разными типами событий. Также реализован декоратор `silent_mode`, который позволяет временно отключить звуковое оповещение.

Шаги выполнения
-------------------------
1. **Импорт необходимых библиотек:**
   Код импортирует библиотеки `asyncio`, `winsound`, `time`, `enum`, и `typing`.

2. **Определение констант:**
   Определяет константу `MODE`, вероятно, для настройки режима работы.

3. **Определение перечисления `BeepLevel`:**
   Определяет перечисление `BeepLevel` для представления различных уровней звуков.  Каждый элемент `BeepLevel` содержит список нот и их продолжительностей.  Это позволяет связать разные мелодии с разными уровнями событий.

4. **Определение класса `BeepHandler`:**
   Класс `BeepHandler` отвечает за обработку событий и выбор соответствующего звука.  Он использует словарь `note_freq` для определения частоты каждой ноты. Метод `emit` обрабатывает запись и выбирает звук на основе уровня события.

5. **Определение класса `Beeper`:**
   Класс `Beeper` содержит статический метод `beep` для воспроизведения звука. Этот метод принимает уровень события (`level`), частоту (`frequency`) и продолжительность (`duration`). Он использует словарь `note_freq` для получения частоты каждой ноты.  Метод обрабатывает как строки, так и перечисления `BeepLevel`.
   Метод `beep` использует декоратор `silent_mode` для контроля режима беззвучия.

6. **Реализация декоратора `silent_mode`:**
   Декоратор `silent_mode` проверяет состояние `Beeper.silent`.  Если `Beeper.silent` равно `True`, выводит сообщение "Silent mode is enabled. Skipping beep." и завершает выполнение функции. Иначе вызывает переданную функцию.

7. **Проигрывание звука:**
   Внутри метода `beep` цикл iterates по нотам и продолжительностям в `melody`. Для каждой ноты вызывается функция `winsound.Beep(int(frequency), duration)` для воспроизведения звука с заданной частотой и продолжительностью.

Пример использования
-------------------------
.. code-block:: python

    import asyncio
    from hypotez.src.logger.beeper import Beeper, BeepLevel

    # Включить режим беззвучия
    Beeper.silent = True

    # Проигрывание звука для события INFO
    asyncio.run(Beeper.beep(BeepLevel.INFO))

    # Выключение режима беззвучия
    Beeper.silent = False

    # Проигрывание звука для события ERROR
    asyncio.run(Beeper.beep(level="error"))


    # Вызов через строку
    asyncio.run(Beeper.beep(level='success'))