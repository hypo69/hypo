<CALNDR>:
=================
קושי: 4
-----------------
המשחק "לוח שנה" מדמה לוח שנה חודשי. המשתמש מזין את החודש (מספר מ-1 עד 12) והשנה, והמשחק מדפיס את לוח השנה של אותו חודש, כולל ימים בשבוע. הוא מציג את הימים בצורה מסודרת.

חוקי המשחק:
1. המשתמש מזין מספר חודש (1-12) ומספר שנה.
2. המשחק מחשב ומציג את לוח השנה של החודש והשנה שהוזנו, תוך התחשבות במספר הימים בחודש ובמיקום יום ראשון של החודש.
3. המשחק יציג את לוח השנה בצורה מסודרת, עם ימי השבוע בראש הטבלה.
-----------------
אלגוריתם:
1. קבל קלט מהמשתמש עבור מספר חודש (MONTH) ומספר שנה (YEAR).
2. קבע את מספר הימים בחודש (DAYS) בהתבסס על החודש והשנה.
3. חשב את יום בשבוע שבו מתחיל החודש (FIRSTDAY) (יום ראשון=0, שני=1...).
4. הדפס את שמות הימים בשבוע ככותרת.
5. הדפס רווחים עד היום הראשון של החודש.
6. הדפס את המספרים של הימים של החודש, עם מעבר שורה כל 7 ימים.
-----------------
תרשים זרימה:
```mermaid
flowchart TD
    Start["התחלה"] --> InputMonthAndYear["קלט: חודש (MONTH), שנה (YEAR)"]
    InputMonthAndYear --> CalculateDaysInMonth["חישוב מספר הימים בחודש (DAYS)"]
    CalculateDaysInMonth --> CalculateFirstDayOfMonth["חישוב יום ראשון בחודש (FIRSTDAY)"]
    CalculateFirstDayOfMonth --> PrintDayNames["הדפסת שמות הימים"]
    PrintDayNames --> PrintLeadingSpaces["הדפסת רווחים עד היום הראשון"]
    PrintLeadingSpaces --> LoopDays{"לולאה: עבור כל יום בחודש (DAY)"}
    LoopDays -- כן --> PrintDayNumber["הדפסת מספר היום (DAY)"]
    PrintDayNumber --> CheckEndOfLine{"בדיקה: האם יום % 7 == 0?"}
    CheckEndOfLine -- כן --> PrintNewLine["הדפסת שורה חדשה"]
    PrintNewLine --> LoopDays
    CheckEndOfLine -- לא --> LoopDays
    LoopDays -- לא --> End["סוף"]
```
Legenda:
    Start - התחלת התוכנית.
    InputMonthAndYear - קבלת קלט מהמשתמש עבור החודש (MONTH) והשנה (YEAR).
    CalculateDaysInMonth - חישוב מספר הימים בחודש (DAYS) בהתאם לחודש ולשנה.
    CalculateFirstDayOfMonth - חישוב יום בשבוע שבו מתחיל החודש (FIRSTDAY).
    PrintDayNames - הדפסת שמות הימים בשבוע (א' ב' ג' ד' ה' ו' ש').
    PrintLeadingSpaces - הדפסת רווחים עד ליום הראשון בחודש.
    LoopDays - לולאה שעוברת על כל יום בחודש.
    PrintDayNumber - הדפסת מספר היום הנוכחי בחודש.
    CheckEndOfLine - בדיקה אם יש לעבור שורה, כלומר אם מודפסים 7 ימים בשורה.
    PrintNewLine - הדפסת שורה חדשה אם התנאי הקודם מתקיים.
    End - סוף התוכנית.
"""
<code>


"""
הסברים:
הקוד מדמה לוח שנה חודשי על ידי קבלת קלט של חודש ושנה מהמשתמש, חישוב מספר הימים בחודש, ומיקום היום הראשון של החודש.
לאחר מכן, הקוד מדפיס את לוח השנה בפורמט מסודר.
licence:MIT(../licence)
"""

def is_leap_year(year):
    """
    פונקציה לבדיקה האם שנה היא שנה מעוברת.
    שנה מעוברת מתקיימת אם השנה מתחלקת ב-4 אבל לא ב-100, או אם היא מתחלקת ב-400.
    """
    return (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0)

def days_in_month(month, year):
    """
    פונקציה שמקבלת חודש ושנה ומחזירה את מספר הימים בחודש.
    לוקחת בחשבון שנים מעוברות עבור חודש פברואר.
    """
    if month in [4, 6, 9, 11]:
        return 30
    elif month == 2:
        return 29 if is_leap_year(year) else 28
    else:
        return 31

def day_of_week(day, month, year):
    """
    פונקציה לחישוב היום בשבוע של תאריך מסוים באמצעות אלגוריתם Zeller's congruence.
    היום מוחזר כמספר בין 0 (יום ראשון) ל-6 (שבת).
    """
    if month < 3:
        month += 12
        year -= 1
    century = year // 100
    year_of_century = year % 100
    day_number = (day + ((13 * (month + 1)) // 5) + year_of_century + (year_of_century // 4) + (century // 4) - 2 * century) % 7
    # הפונקציה מחזירה 0 עבור יום ראשון
    return day_number

# קבלת קלט מהמשתמש
try:
    month = int(input("הזן מספר חודש (1-12): "))
    year = int(input("הזן שנה: "))
except ValueError:
    print("קלט לא תקין. אנא הזן מספרים שלמים.")
    exit()

# בדיקת תקינות קלט
if not 1 <= month <= 12:
    print("מספר חודש לא תקין. אנא הזן מספר בין 1 ל-12.")
    exit()

# חישוב מספר הימים בחודש
days = days_in_month(month, year)

# חישוב יום בשבוע שבו מתחיל החודש
first_day = day_of_week(1, month, year)

# הדפסת כותרת של ימי השבוע
print("א' ב' ג' ד' ה' ו' ש'")

# הדפסת רווחים עד היום הראשון של החודש
for i in range(first_day):
    print("  ", end="")

# הדפסת מספרי הימים בחודש
for day in range(1, days + 1):
    print(f"{day:2}", end=" ") # הדפסת יום עם ריפוד לשמירה על יישור
    if (day + first_day) % 7 == 0:
        print() # מעבר לשורה חדשה כל 7 ימים

print() # מעבר שורה בסיום

</code>
<הערות סיום>
הסבר מפורט לקוד:
1.  **ייבוא מודולים**:
    - הקוד אינו מייבא מודולים חיצוניים, אלא משתמש בפונקציות מובנות של פייתון ובפונקציות מוגדרות.

2.  **פונקציה `is_leap_year(year)`**:
    - פונקציה זו בודקת האם שנה מסוימת היא שנה מעוברת.
    -  **היגיון הפונקציה**:
        -   שנה מעוברת מתקיימת אם היא מתחלקת ב-4 אבל לא ב-100, או אם היא מתחלקת ב-400.
        -   הפונקציה מחזירה `True` אם השנה מעוברת ו-`False` אחרת.
    - **פרמטר**:
        - `year`: השנה לבדיקה (מספר שלם).
    - **החזרה**:
        - `bool`: האם השנה מעוברת.

3. **פונקציה `days_in_month(month, year)`**:
    - פונקציה זו מחזירה את מספר הימים בחודש נתון בשנה נתונה.
    - **היגיון הפונקציה**:
        -   בודקת את החודש כדי להחזיר את מספר הימים הנכון.
        -   משתמשת בפונקציה `is_leap_year` כדי לבדוק אם פברואר צריך להיות 29 או 28 ימים.
    -   **פרמטרים**:
        -   `month`: מספר החודש (1-12).
        -   `year`: השנה.
    -   **החזרה**:
        -   `int`: מספר הימים בחודש.

4. **פונקציה `day_of_week(day, month, year)`**:
    -   פונקציה זו מחשבת את היום בשבוע של תאריך מסוים.
    - **היגיון הפונקציה**:
        -   משתמשת באלגוריתם Zeller's congruence לחישוב היום בשבוע.
        -   מתאימה את החודש והשנה לצורך החישוב.
        -   הפונקציה מחזירה 0 עבור יום ראשון.
    -   **פרמטרים**:
        -   `day`: מספר היום בחודש.
        -   `month`: מספר החודש.
        -   `year`: השנה.
    -   **החזרה**:
        -   `int`: מספר היום בשבוע (0 = ראשון, 6 = שבת).

5. **קלט מהמשתמש**:
    -   **קבלת חודש ושנה**:
        -   `input("הזן מספר חודש (1-12): ")` מבקש מהמשתמש להזין מספר חודש.
        -  `input("הזן שנה: ")` מבקש מהמשתמש להזין שנה.
        -   `int()` ממיר את הקלט למספר שלם.
    -   **טיפול בשגיאות קלט**:
        -   `try...except ValueError`: בלוק try-except מטפל במקרה שהמשתמש מזין קלט שאינו מספר שלם.
    -   **בדיקת תקינות הקלט**:
        -   הקוד בודק אם החודש שהוזן הוא בין 1 ל-12.
        -   במקרה של קלט לא תקין, מוצגת הודעת שגיאה והתוכנית מסתיימת.

6.  **חישוב לוח השנה**:
    -  `days = days_in_month(month, year)`: קוראת לפונקציה `days_in_month` כדי לקבל את מספר הימים בחודש הנתון.
    - `first_day = day_of_week(1, month, year)`: קוראת לפונקציה `day_of_week` כדי לקבל את היום בשבוע שבו מתחיל החודש.
    -   **הדפסת כותרת ימי השבוע**:
         -    `print("א' ב' ג' ד' ה' ו' ש'")` מדפיס את שמות ימי השבוע.

7.  **הדפסת לוח השנה**:
    - **הדפסת רווחים**:
        - `for i in range(first_day): print("  ", end="")`:  מדפיס רווחים עד להגעה ליום הראשון בחודש, כדי שהלוח יהיה מסודר.
    - **הדפסת מספרי הימים**:
        -   `for day in range(1, days + 1):`: לולאה שעוברת על כל יום בחודש.
        -   `print(f"{day:2}", end=" ")`: מדפיסה את מספר היום עם ריפוד לשמירה על יישור.
        -   `if (day + first_day) % 7 == 0`: בדיקה האם יש לעבור לשורה חדשה (אם היום הוא סוף שבוע).
        -    `print()`: מעבר לשורה חדשה אם יש צורך.
    -   `print()`: מעבר שורה בסיום הדפסת לוח השנה.
</הערות סיום>
