Инструкции по генерации документации к коду на русском языке
================================================================================
Описание
-------------------------
Данный документ предоставляет инструкции по написанию документации к коду на русском языке, следуя формату reStructuredText (RST).  Документация должна быть исчерпывающей, содержать подробные описания, примеры и шаги выполнения для каждого модуля, класса и функции.

Шаги выполнения
-------------------------
1. **Анализ кода:** Тщательно изучите код, определите его функциональность, логику работы и взаимодействие между различными частями. Обратите внимание на все комментарии внутри кода, которые могут содержать ценную информацию.

2. **Структура документации:** Придерживайтесь заданного шаблона reStructuredText (RST) для описания модулей, классов и функций.

3. **Описание модуля:**
   - Укажите название и назначение модуля.
   - При необходимости приведите примеры использования модуля в виде кода, помещенного в блок `.. code-block:: python`.
   - Опишите платформы, для которых предназначен модуль, и краткое описание его функциональности (синопсис).
   - Используйте заголовки (например, «Атрибуты» или «Методы») для логического разделения описания характеристик и методов модуля.

4. **Описание класса:**
   - Опишите класс и его назначение.
   - Перечислите все атрибуты класса и их назначение.
   - Для каждого метода класса:
     - Укажите его название и назначение.
     - Приведите описание входных параметров (параметров метода).
     - Укажите возвращаемое значение (если есть).
     - Приведите пример использования метода в виде кода, помещенного в блок `.. code-block:: python`.

5. **Описание функции или метода:**
   - Опишите функцию или метод и его назначение.
   - Перечислите все входные параметры (аргументы функции/метода) и их типы.
   - Укажите возвращаемое значение (если есть).
   - Приведите пример использования функции/метода в виде кода, помещенного в блок `.. code-block:: python`.

6. **Комментарии в коде:**
   - Все комментарии к коду должны быть написаны в формате RST и описывать конкретные действия или логику.
   - Используйте многострочные комментарии для описания алгоритма и логики работы.
   - Объясняйте сложные решения или временные решения с помощью комментариев.

7. **Обработка исключений (Exceptions):**
   - Для каждого класса, метода или функции, где могут возникнуть исключения, опишите возможные ошибки и обстоятельства, при которых они могут произойти.

8. **Ясность и точность:**
   - Избегайте двусмысленных выражений и используйте конкретную терминологию.
   - Используйте ясные и четкие формулировки.

9. **Форматирование:**
   - Все примеры кода должны быть в блоках `.. code-block:: python`.
   - Используйте правильную структуру и форматирование RST для создания понятного и удобного для чтения документа.


Пример использования
-------------------------
```rst
Модуль для работы с помощником по коду
========================================================================================

Этот модуль содержит класс :class:`CodeAssistant`, предназначенный для работы с различными моделями ИИ, такими как Google Gemini и OpenAI, для выполнения задач обработки кода.

Примеры использования
--------------------
.. code-block:: python

    assistant = CodeAssistant(role='code_checker', lang='ru', model=['gemini'])
    assistant.process_files()

```

```
```
```


```
```
```
```

```
```
```
```


```
```
```
```
```
```


```
```
```
```
```

```
```

```
```
```

```
```

```
```
```
```
```
```


```
```


```
```
```