Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root()`, которая находит корневой каталог проекта, начиная от текущей директории. Функция ищет файлы (или директории) из набора `marker_files` и возвращает путь к родительской директории, в которой эти файлы были найдены. Если файлы не найдены, возвращает директорию, где находится текущий скрипт.  Также код загружает настройки из файла `settings.json` и документацию из `README.MD`, если такие файлы существуют. Затем он сохраняет информацию о проекте (название, версия, документация, автор, и др.) в переменные, доступные для других частей проекта.

Шаги выполнения
-------------------------
1. **Инициализация**: Функция `set_project_root()` принимает кортеж `marker_files` с именами файлов, по которым ищется корневой каталог проекта.
2. **Поиск корневого каталога**: Функция начинает поиск с текущей директории и перебирает родительские директории. В каждой директории проверяет наличие файлов или директорий из `marker_files`. Как только такой файл или директория находится, поиск останавливается и сохраняется путь до этой директории.
3. **Добавление корневого каталога в `sys.path`**: Если найденный корневой каталог не присутствует в пути поиска модулей (`sys.path`), он добавляется в начало списка.
4. **Возврат корневого каталога**: Функция возвращает путь к найденному корневому каталогу.
5. **Загрузка настроек**: Из файла `settings.json` (в подкаталоге `src`) загружаются настройки проекта.
6. **Обработка ошибок**: Использование `try...except` позволяет обрабатывать ошибки при чтении файла настроек (`FileNotFoundError`, `json.JSONDecodeError`). Если файл не найден или содержимое не является валидным JSON, соответствующие переменные (например, `settings`) остаются `None` или пустыми строками.
7. **Загрузка документации**: Файл `README.MD` (в подкаталоге `src`) открывается и читается.
8. **Обработка ошибок при чтении документации**: Обработка ошибок `FileNotFoundError` и `json.JSONDecodeError` аналогична обработке ошибок при чтении настроек.
9. **Инициализация переменных проекта**: Переменные, описывающие проект (`__project_name__`, `__version__`, `__doc__`, и др.), инициализируются значениями из загруженных настроек, если они доступны, иначе принимают значения по умолчанию.


Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.suppliers.grandadvance.header import set_project_root

    # Находит корневой каталог проекта и добавляет его в sys.path
    project_root = set_project_root()

    # Теперь вы можете импортировать модули из корневого каталога, например:
    from src import gs

    print(gs.path.root)  # Выводит корневой каталог проекта