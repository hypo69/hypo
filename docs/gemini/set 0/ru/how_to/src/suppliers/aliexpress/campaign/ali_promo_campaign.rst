Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет класс `AliPromoCampaign`, предназначенный для управления рекламными кампаниями на AliExpress. Он позволяет загружать и обрабатывать данные кампаний, управлять категориями и товарами, а также использовать ИИ для генерации описаний и других данных. Код включает функции для создания новых кампаний, обработки данных о категориях и товарах, генерации HTML-страниц и сохранения результатов в файлы.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:** Код импортирует различные модули Python, включая `asyncio`, `time`, `copy`, `html`, `pathlib`, `typing`, `header`, `gs`, `AliAffiliatedProducts`, `locales`, `GoogleGenerativeAI`, `OpenAIModel`, `ProductHTMLGenerator`, `CategoryHTMLGenerator`, `CampaignHTMLGenerator`, `logger`, `j_dumps`, `j_loads_ns`, `j_loads`, `csv2dict`, `save_text_file`, `pprint`, `extract_prod_ids`. Эти импорты необходимы для работы функций класса.

2. **Определение класса `AliPromoCampaign`:** Создается класс `AliPromoCampaign` для управления кампаниями.

3. **Инициализация класса `AliPromoCampaign`:** Метод `__init__` инициализирует объект `AliPromoCampaign` с именем кампании, языком и валютой. Он загружает данные кампании из JSON-файла или, если файл не найден, запускает процесс создания новой кампании (`process_new_campaign`).

4. **Загрузка и обработка данных:** Метод `process_campaign` обрабатывает данные о товарах по категориям, используя метод `process_category_products`. Для каждой категории также генерируются данные с помощью ИИ (`process_ai_category`).

5. **Обработка данных по категориям:** Метод `process_category_products` получает список идентификаторов продуктов из директории `sources`. Затем он вызывает `process_affiliate_products` для получения данных о связанных товарах. Результат сохраняется в JSON-файлы.

6. **Обработка данных с использованием ИИ:** Метод `process_ai_category` генерирует описания категорий с помощью AI-моделей `GoogleGenerativeAI` и `OpenAIModel` (с предварительно заданными инструкциями). Результаты сохраняются в файл `ai_{timestamp}.json`.

7. **Создание новой кампании (`process_new_campaign`):** Данный метод предназначен для создания новой рекламной кампании на основе директорий и файлов, расположение которых указывается в коде. Он создает структуру каталогов и файлов для кампании, включая файлы JSON для категорий и продуктов. Обработка категорий и товаров запускается по каждой найденной директории категории.

8. **Сохранение данных о товарах:** Метод `dump_category_products_files` сохраняет данные о товарах в JSON-файлы в соответствующих директориях.

9. **Получение категорий из директорий:** Метод `set_categories_from_directories` получает имена категорий из директорий `category` и добавляет их в качестве атрибутов объекта `self.campaign`.

10. **Генерация HTML-вывода:** Метод `generate_output` создает HTML-страницы для каждой категории и для всей кампании. Он сохраняет информацию о товарах, ссылках и другой необходимой информации в соответствующие файлы.

11. **Генерация HTML-страниц для кампании:** Метод `generate_html_for_campaign` генерирует HTML-страницы для всех категорий кампании и для главной страницы кампании.

Пример использования
-------------------------
```python
# Пример инициализации кампании
campaign = AliPromoCampaign(campaign_name="SummerSale", language="EN", currency="USD")

# Обработка всей кампании
campaign.process_campaign()

# Обработка данных о товарах в категории "Electronics"
campaign.process_category_products("Electronics")

# Заполнение данных категорий с использованием AI
campaign.process_ai_category("Electronics")
```
```
```
```
**Примечание:**  Для корректной работы необходимо установить все необходимые библиотеки (например, `google-generative-ai`, `openai`), а также настроить переменные окружения для доступа к API-ключам и другим конфигурационным параметрам.  В примере инициализации приведены ключевые моменты.  Полный пример использования зависит от конкретной реализации.