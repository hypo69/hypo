"""
<REVRSE>:
=================
Сложность: 2
-----------------
Игра "REVRSE" предлагает пользователю ввести строку, а затем выводит эту строку в обратном порядке. 
Это простая игра, демонстрирующая работу со строками и циклами.
-----------------
Правила игры:
1. Игра просит пользователя ввести строку.
2. После ввода строки, программа выводит эту строку, но в обратном порядке.
3. Игра заканчивается после вывода перевернутой строки.
-----------------
Алгоритм:
1. Начало игры.
2. Вывести на экран запрос на ввод строки.
3. Получить строку от пользователя и сохранить её в переменную `inputString`.
4. Инициализировать переменную `reversedString` пустой строкой.
5. Начать цикл посимвольного обхода строки `inputString` с конца в начало.
6. На каждом шаге цикла, добавлять текущий символ к `reversedString`.
7. После завершения цикла, вывести `reversedString` на экран.
8. Конец игры.
-----------------
Блок-схема:
```mermaid
graph TD
    Start(Начало) --> InputPrompt(Вывести запрос на ввод строки);
    InputPrompt --> InputString(Получить строку от пользователя);
    InputString --> InitReversedString(Инициализировать reversedString = "");
    InitReversedString --> LoopStart(Начать цикл с конца строки);
    LoopStart -- Есть символы --> GetChar(Получить текущий символ);
    GetChar --> AppendChar(Добавить символ к reversedString);
    AppendChar --> LoopStart;
    LoopStart -- Нет символов --> OutputReversed(Вывести reversedString);
    OutputReversed --> End(Конец);
```
"""
def reverse_string_game():
  """
  Игра "REVRSE": переворачивает введенную пользователем строку.
  """
  # Выводим приглашение пользователю для ввода строки
  print("Введите строку:")
  
  # Получаем строку от пользователя и сохраняем в переменной input_string
  input_string = input()
  
  # Инициализируем пустую строку reversed_string, в которой будем хранить перевернутую строку
  reversed_string = ""

  # Начинаем цикл, который идет по символам строки input_string с конца в начало
  # range(start, stop, step): start - начало, stop - условие завершение не включая stop, step - шаг
  # len(input_string) - длина строки, -1 - это stop, -1 - это шаг
  for i in range(len(input_string) - 1, -1, -1):
    # Добавляем текущий символ input_string[i] к строке reversed_string
    reversed_string += input_string[i]

  # Выводим перевернутую строку на экран
  print("Перевернутая строка:", reversed_string)

# Запускаем игру
reverse_string_game()
"""
Пояснения:
1. Функция reverse_string_game():
   - Функция реализует логику игры.

2. input_string = input():
   -  Запрашивает ввод строки у пользователя и сохраняет ввод в переменную input_string.

3. reversed_string = "":
   - Инициализирует пустую строку reversed_string, которая будет использоваться для хранения перевернутой строки.

4. Цикл for i in range(len(input_string) - 1, -1, -1):
   - Цикл проходит по индексам строки input_string в обратном порядке, начиная с последнего символа и заканчивая первым.
   - len(input_string) - 1: Индекс последнего символа строки.
   - -1: Условие остановки цикла (не включает индекс -1, то есть 0 - первый символ).
   - -1: Шаг цикла, который уменьшает индекс на 1 при каждой итерации, позволяя идти по строке с конца.

5. reversed_string += input_string[i]:
    - Каждый символ из input_string добавляется в reversed_string, формируя таким образом обратную строку.

6. print("Перевернутая строка:", reversed_string):
   - Выводит перевернутую строку на экран.

licence:MIT(../licence)
"""
__author__ = 'hypo69 (hypo69@davidka.net)'
```