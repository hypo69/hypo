Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет корневой путь к проекту из текущей директории.  Он ищет указанные файлы (pyproject.toml, requirements.txt, .git)  в родительских директориях. Если найден корневой каталог, то добавляет его в системный путь python.  Далее, код пытается загрузить настройки из файла settings.json и документацию из README.MD, находящихся в корневом каталоге проекта.  Наконец, он определяет переменные, хранящие имя проекта, версию, документацию, детали, автора, копирайт и ссылку на платёж.

Шаги выполнения
-------------------------
1. **Импортирует необходимые библиотеки:** `sys`, `json`, `pathlib`, `packaging.version`.
2. **Определяет функцию `set_project_root`:**
    * Принимает на вход кортеж `marker_files` с именами файлов/папок, по которым определяет корневой каталог.
    * Начинает поиск с текущей директории (`Path(__file__).resolve().parent`).
    * Перебирает родительские директории.
    * Если в родительской директории найден хотя бы один из указанных файлов/папок, то устанавливает `__root__` на эту директорию и завершает поиск.
    * Если корневой каталог не найден, то возвращает текущую директорию.
    * Добавляет корневой каталог в `sys.path`, если он ещё не присутствует в списке.
3. **Вызывает `set_project_root`:**  Определяет `__root__` — корневой каталог проекта.
4. **Пытается загрузить настройки:**
    *  Открывает файл `gs.path.root / 'src' / 'settings.json'` для чтения.
    *  Парсит JSON данные из файла и сохраняет в переменную `settings`.
    *  Обрабатывает возможные исключения `FileNotFoundError` и `json.JSONDecodeError` в случае ошибки чтения или некорректного файла.
5. **Пытается загрузить документацию:**
    *  Открывает файл `gs.path.root / 'src' / 'README.MD'` для чтения.
    *  Читает данные из файла и сохраняет в переменную `doc_str`.
    *  Обрабатывает возможные исключения `FileNotFoundError` и `json.JSONDecodeError` в случае ошибки чтения или некорректного файла.
6. **Инициализирует переменные проекта:**
    * Присваивает значения переменным `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__`, используя значения из `settings` или используя значения по умолчанию.

Пример использования
-------------------------
.. code-block:: python

    # ... (import necessary modules, if any)

    # Example usage (assuming gs module is defined elsewhere):
    # ... (your code to initialize gs.path)

    project_root = set_project_root()
    print(f"Root directory of the project: {project_root}")

    # Example access to project settings (if settings.json exists):
    if settings:
        print(f"Project name: {__project_name__}")
        print(f"Version: {__version__}")

    #Example access to documentation (if README.MD exists):
    if doc_str:
       print(doc_str[:200]) #Print first 200 characters to avoid long output.