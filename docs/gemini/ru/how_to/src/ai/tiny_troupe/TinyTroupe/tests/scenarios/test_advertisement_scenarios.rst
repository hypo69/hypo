Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Данный код содержит функции для тестирования сценариев взаимодействия агентов (TinyPerson) с рекламными объявлениями и проведением фокус-групп.  Он определяет различные сценарии, связанные с оценкой рекламных объявлений, созданием рекламы для аренды квартиры и сбором профилей потребителей. Код использует фреймворк TinyTroupe для моделирования агентов и их взаимодействия в виртуальной среде.  Он включает в себя функции для генерации агентов, инициализации контекста, обработки ввода-вывода, извлечения результатов и проверки корректности полученных данных.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:** Код импортирует библиотеки `pytest`, `logging`, `sys`, `tinytroupe`, `ResultsExtractor`, `Simulation`, вспомогательные функции из `testing_utils` и функции создания агентов `create_lisa_the_data_scientist`, `create_oscar_the_architect`, `create_marcos_the_physician`.

2. **Определение сценария тестирования `test_ad_evaluation_scenario`:** Определяется сценарий тестирования, в котором агенты оценивают рекламные объявления и выбирают наиболее убедительное. Функция `test_ad_evaluation_scenario` принимает в качестве аргумента `setup`.

3. **Формирование рекламных объявлений:**  Определяются текстовые константы `travel_ad_1`, `travel_ad_2`, `travel_ad_3`, `travel_ad_4`  представляющие рекламные объявления для туристических пакетов.

4. **Формирование запроса на оценку:** Формируется строка `eval_request_msg`, содержащая рекламные объявления в формате, понятном агентам, с запросом на оценку и выбор лучшего объявления.

5. **Установление контекста:** Устанавливается переменная `situation`, описывающая контекст для агентов (поиск туристических пакетов).

6. **Инициализация агентов:**  Создаются агенты `create_oscar_the_architect`, `create_lisa_the_data_scientist` и устанавливается контекст `situation`.

7. **Обработка ввода-вывода и извлечение результатов:**  Агенты обрабатывают запрос `eval_request_msg`, производят оценку объявлений и предоставляют обоснование выбора.  Результаты извлекаются из агентов с помощью `ResultsExtractor` и сохраняются в переменной `res`.

8. **Проверка результатов:** Выполняется проверка результатов агентов. Проверяется, что результат не пуст, содержит необходимые поля `ad_id`, `ad_title`, `justification` и что `ad_id` соответствует одному из возможных значений (1, 2, 3, 4).


9. **Определение сценария тестирования `test_ad_creation_scenario`:** Определяется сценарий фокус-группы для обсуждения лучшего способа рекламы квартиры для аренды.

10. **Формирование описания квартиры:** Определяется описание квартиры в переменной `apartment_description`.

11. **Формирование задания:**  Формируется строка `task`, содержащая задание для фокус-группы.

12. **Инициализация фокус-группы:** Инициализируется фокус-группа `focus_group_world` и передаются ей `situation`, `apartment_description`, и `task`.

13. **Запуск фокус-группы:**  Фокус-группа выполняет свои действия.

14. **Извлечение результатов:** Извлекаются результаты работы фокус-группы с помощью `ResultsExtractor`.

15. **Проверка результатов:** Проверка, что результаты содержат предложения по рекламе квартиры.


16. **Определение сценария `test_consumer_profiling_scenario`:** Определяется сценарий для сбора профилей потребителей.

17. **Создание контекста:** Определяется `general_context` для потребителей.

18. **Создание фабрики агентов:** Создается `TinyPersonFactory` с контекстом `general_context`.

19. **Генерация потребителей и интервью:** Создаются 15 потребителей с помощью `consumer_factory`, задается запрос на интервью для получения информации о предпочтениях и отношении к бутылированному гаспачо.

20. **Проверка создания файла кеша:** Проверяется создание файла кеша `test_consumer_profiling_scenario.cache.json`, свидетельствующий об успешном выполнении операций.

21. **Завершение сессии:** Выполнение завершается с помощью `control.end()`.


Пример использования
-------------------------
.. code-block:: python

    # Пример вызова функции test_ad_evaluation_scenario
    test_ad_evaluation_scenario(setup)

    # Пример вызова функции test_ad_creation_scenario
    test_ad_creation_scenario(setup, focus_group_world)

    # Пример вызова функции test_consumer_profiling_scenario
    test_consumer_profiling_scenario(setup)