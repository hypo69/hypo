Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код содержит функции для распознавания речи (speech recognition) и генерации речи из текста (text-to-speech).  Функция `speech_recognizer` загружает аудиофайл (из URL или локального файла), преобразует его в формат WAV, распознает речь с помощью Google Speech Recognition и возвращает распознанный текст. Функция `text2speech` преобразует текст в аудиофайл формата WAV, сохраняя его в временном каталоге.

Шаги выполнения
-------------------------
1. **Распознавание речи (speech_recognizer):**
    - Принимает на вход URL аудиофайла или путь к локальному аудиофайлу.
    - Если указан URL, скачивает аудиофайл в временный каталог.
    - Преобразует аудиофайл из формата OGG в WAV.
    - Инициализирует объект распознавания речи `speech_recognition`.
    - Загружает аудиоданные из WAV-файла.
    - Использует `recognize_google` для распознавания речи, используя указанный язык (по умолчанию 'ru-RU').
    - Возвращает распознанный текст или сообщение об ошибке. Обрабатывает возможные исключения, такие как `sr.UnknownValueError` (если Google Speech Recognition не может понять аудио) и `sr.RequestError` (если возникли проблемы с запросом к сервису).

2. **Генерация речи (text2speech):**
    - Принимает на вход текст и код языка (по умолчанию 'ru').
    - Использует `gTTS` для генерации аудио из текста.
    - Сохраняет сгенерированный аудиофайл в временном каталоге в формате MP3.
    - Преобразует MP3 в WAV с помощью `pydub`.
    - Возвращает путь к сгенерированному WAV-файлу или сообщение об ошибке. Обрабатывает все возникающие исключения.


Пример использования
-------------------------
.. code-block:: python

    import asyncio
    from pathlib import Path

    # Пример распознавания речи из URL
    audio_url = 'https://example.com/audio.ogg'  # Замените на URL вашего файла
    recognized_text = speech_recognizer(audio_url=audio_url)
    print(f"Распознанный текст: {recognized_text}")

    # Пример генерации речи
    async def run_tts():
        text_to_speak = 'Привет, мир!'
        audio_path = await text2speech(text_to_speak)
        print(f"Путь к аудиофайлу: {audio_path}")
        # Обработайте полученный путь (например, откройте файл или используйте его для воспроизведения)


    asyncio.run(run_tts())