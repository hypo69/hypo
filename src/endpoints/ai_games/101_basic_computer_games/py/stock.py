"""
STOCK:
=================
Сложность: 3
-----------------
Игра "STOCK" - это симулятор биржи, где игрок покупает и продает акции, пытаясь заработать прибыль. Игрок начинает с определенной суммой денег и количеством акций. В начале каждого раунда цена акции случайно меняется. Игрок может купить или продать акции или ничего не делать. Игра продолжается до тех пор, пока у игрока не закончатся деньги или акции.
Правила игры: 
1.  Игрок начинает игру с $1000 и 100 акциями.
2.  Цена акции изменяется случайным образом в начале каждого раунда.
3.  Игрок может купить или продать акции, или ничего не делать.
4.  Игрок не может покупать акции, если у него недостаточно денег.
5.  Игрок не может продавать акции, которых у него нет.
6. Игра продолжается до тех пор, пока у игрока не закончатся деньги или акции.
-----------------
Алгоритм:
1.  Инициализировать начальные значения: деньги = 1000, акции = 100, цена_акции = случайное число от 1 до 5.
2.  Начать игровой цикл.
3.  Вывести текущие значения денег, акций и цены акции.
4.  Спросить игрока, что он хочет сделать (купить, продать или ничего).
5.  Если игрок хочет купить акции:
    - Спросить, сколько акций он хочет купить.
    - Если денег достаточно, то вычесть стоимость акций из денег и добавить акции к имеющимся.
    - Иначе вывести сообщение о недостатке денег.
6.  Если игрок хочет продать акции:
    - Спросить, сколько акций он хочет продать.
    - Если у игрока есть столько акций, то прибавить стоимость акций к деньгам и вычесть акции из имеющихся.
    - Иначе вывести сообщение о недостатке акций.
7.  Если игрок ничего не хочет делать, то перейти к следующему раунду.
8.  Изменить цену акции на случайную величину от -2 до 2.
9.  Если деньги или акции = 0, то закончить игру.
10. Перейти к шагу 2.
-----------------
Блок-схема:
```mermaid
    graph TD
        Start(Начало) --> Init(Инициализация: Деньги = 1000, Акции = 100, Цена акции = случайное 1-5);
        Init --> GameLoopStart(Начало игрового цикла);
        GameLoopStart --> OutputStatus(Вывод: Деньги, Акции, Цена акции);
        OutputStatus --> InputAction(Ввод: Действие (купить, продать, ничего));
        InputAction -- Купить --> InputBuyAmount(Ввод: Кол-во акций для покупки);
        InputBuyAmount --> CheckBuyMoney(Проверка: Достаточно денег?);
        CheckBuyMoney -- Да --> BuyShares(Купить акции: Деньги -= цена * кол-во, Акции += кол-во);
        BuyShares --> ChangePrice(Изменить цену акции);
        CheckBuyMoney -- Нет --> OutputNotEnoughMoney(Вывод: Недостаточно денег);
        OutputNotEnoughMoney --> ChangePrice;

        InputAction -- Продать --> InputSellAmount(Ввод: Кол-во акций для продажи);
        InputSellAmount --> CheckSellShares(Проверка: Достаточно акций?);
        CheckSellShares -- Да --> SellShares(Продать акции: Деньги += цена * кол-во, Акции -= кол-во);
        SellShares --> ChangePrice;
        CheckSellShares -- Нет --> OutputNotEnoughShares(Вывод: Недостаточно акций);
        OutputNotEnoughShares --> ChangePrice;

        InputAction -- Ничего --> ChangePrice;
        ChangePrice --> UpdatePrice(Обновить цену акции: случайное -2 до 2);
        UpdatePrice --> CheckGameOver(Проверка: Деньги == 0 или Акции == 0?);
        CheckGameOver -- Нет --> GameLoopStart;
        CheckGameOver -- Да --> GameOver(Конец игры);
        GameOver --> End(Завершение);
```
"""
import random

def main():
    """
    Основная функция игры STOCK.
    """
    # Инициализация начальных значений
    money = 1000 # Количество денег у игрока
    shares = 100 # Количество акций у игрока
    stock_price = random.randint(1, 5) # Текущая цена акции

    # Основной игровой цикл
    while True:
        # Вывод текущего состояния игры
        print("\nТекущий статус:")
        print(f"Деньги: ${money}")
        print(f"Акции: {shares}")
        print(f"Цена акции: ${stock_price}")

        # Запрос действия у игрока
        action = input("Что вы хотите сделать? (купить/продать/ничего): ").lower()

        # Обработка действий игрока
        if action == "купить":
            try:
                buy_amount = int(input("Сколько акций вы хотите купить? "))
                if money >= buy_amount * stock_price:
                    money -= buy_amount * stock_price
                    shares += buy_amount
                    print("Покупка совершена")
                else:
                    print("Недостаточно денег для покупки")
            except ValueError:
                print("Некорректный ввод. Пожалуйста, введите целое число.")


        elif action == "продать":
            try:
                sell_amount = int(input("Сколько акций вы хотите продать? "))
                if shares >= sell_amount:
                    money += sell_amount * stock_price
                    shares -= sell_amount
                    print("Продажа совершена")
                else:
                    print("Недостаточно акций для продажи")
            except ValueError:
                 print("Некорректный ввод. Пожалуйста, введите целое число.")

        elif action == "ничего":
            print("Продолжаем игру...")
        else:
            print("Некорректное действие. Попробуйте еще раз.")

        # Изменение цены акции
        stock_price += random.randint(-2, 2)
        if stock_price < 1:
            stock_price = 1

        # Проверка на окончание игры
        if money <= 0 or shares <= 0:
            print("\nИгра окончена!")
            if money <=0 :
                print("У вас не осталось денег.")
            else:
                print("У вас не осталось акций.")
            break

if __name__ == "__main__":
    main()
"""
Пояснения:
`money`: Целое число, представляющее количество денег у игрока.
`shares`: Целое число, представляющее количество акций у игрока.
`stock_price`: Целое число, представляющее текущую цену акции.

`main()`: Основная функция, которая запускает игру.
- Инициализирует начальные значения денег, акций и цены акции.
- Входит в бесконечный цикл while True, который продолжается до тех пор, пока игра не закончится.
- Внутри цикла:
    - Выводит текущее состояние игры (деньги, акции, цена акции).
    - Запрашивает у игрока действие (купить, продать, ничего).
    - Если игрок хочет купить:
        - Запрашивает количество акций для покупки.
        - Проверяет, достаточно ли у игрока денег для покупки.
        - Если денег достаточно, то списывает стоимость акций и добавляет их игроку.
        - Иначе выводит сообщение о недостатке денег.
    - Если игрок хочет продать:
        - Запрашивает количество акций для продажи.
        - Проверяет, достаточно ли у игрока акций для продажи.
        - Если акций достаточно, то добавляет деньги и списывает акции у игрока.
        - Иначе выводит сообщение о недостатке акций.
    - Если игрок не хочет ничего делать, то просто переходит к следующему раунду.
    - Изменяет цену акции случайным образом.
    - Проверяет, закончилась ли игра (если деньги или акции = 0), и завершает цикл.
- В случае некорректного ввода выводится сообщение об ошибке.
"""
__author__ = 'hypo69 (hypo69@davidka.net)'
```