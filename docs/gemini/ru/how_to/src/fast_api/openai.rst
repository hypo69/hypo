Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет FastAPI приложение для взаимодействия с моделью OpenAI. Он включает API-эндпоинты для запроса к модели и ее обучения на основе предоставленных данных.  Модуль устанавливает CORS-мидлварь для разрешения запросов с любых источников.  Также он предоставляет статический контент (html) через эндпоинт `/static`.  Главная страница `/` выводит HTML страницу `index.html`.  Эндпоинт `/ask` обрабатывает запросы пользователя к модели OpenAI, возвращая ответ.

Шаги выполнения
-------------------------
1. **Импорт необходимых библиотек:**  Код импортирует необходимые библиотеки FastAPI, pydantic, uvicorn и другие, включая собственные модули, такие как `gs`, `j_loads`, `logger`, и `OpenAIModel`.
2. **Создание FastAPI приложения:** Создается экземпляр `FastAPI` и настраивается CORS-мидлварь, разрешающая запросы с любых источников.
3. **Установка статических файлов:**  Модуль монтирует статические файлы (`html/openai_training`) на эндпоинт `/static`.
4. **Определение модели:** Создается экземпляр класса `OpenAIModel`.
5. **Определение модели запроса `AskRequest`:** Определяется класс `AskRequest` как `BaseModel` для валидации данных входящих в запрос `/ask`.  Этот класс принимает  `message` и (необязательное) `system_instruction`.
6. **Настройка эндпоинта `/` (главная страница):**  Обрабатывает запросы на главную страницу, возвращает HTML страницу `index.html`.  Включает обработку исключений для логгирования ошибок и возврата HTTP 500 ответа.
7. **Настройка эндпоинта `/ask`:** Обрабатывает POST-запросы на `/ask`, принимает данные запроса типа `AskRequest`.  Обрабатывает запрос модели OpenAI с использованием метода `model.ask(request.message, request.system_instruction)`. Возвращает ответ модели в формате JSON.  Аналогично обрабатывает исключения.
8. **Запуск приложения:** Использует `uvicorn` для запуска приложения на заданном хосте и порту.

Пример использования
-------------------------
.. code-block:: python

    import requests
    import json

    # Запрос к эндпоинту /ask
    url = "http://127.0.0.1:8000/ask"
    data = {
        "message": "Привет, расскажи мне что-нибудь интересное.",
        "system_instruction": "Будь весёлым и остроумным."
    }

    headers = {'Content-type': 'application/json'}

    try:
        response = requests.post(url, headers=headers, json=data)
        response.raise_for_status()  # Проверяет успешность запроса
        response_data = response.json()
        print(response_data.get("response"))
    except requests.exceptions.RequestException as e:
        print(f"Ошибка при отправке запроса: {e}")
    except json.JSONDecodeError as e:
      print(f"Ошибка при декодировании ответа: {e}")