"""
<FURS>:
=================
Сложность: 3
-----------------
Игра "FURS" представляет собой простую текстовую игру, в которой игрок пытается угадать задуманное компьютером число. Компьютер загадывает число от 1 до 1000, а игрок делает попытки, пока не угадает. После каждой попытки компьютер сообщает, больше или меньше загаданное число.
Правила игры:
-----------------
1. Компьютер загадывает случайное целое число в диапазоне от 1 до 1000 включительно.
2. Игрок вводит свое предположение.
3. Компьютер сравнивает предположение игрока с загаданным числом.
4. Если предположение верно, игра заканчивается.
5. Если предположение меньше загаданного числа, компьютер сообщает "TOO LOW".
6. Если предположение больше загаданного числа, компьютер сообщает "TOO HIGH".
7. Игра продолжается, пока игрок не угадает число.
-----------------
Алгоритм:
1. Задать случайное число от 1 до 1000 (загаданное число).
2. Вывести на экран сообщение "I HAVE A NUMBER BETWEEN 1 AND 1000. WHAT IS IT?".
3. Ввод предположения игрока.
4. Если предположение меньше загаданного числа, вывести на экран "TOO LOW" и перейти к шагу 3.
5. Если предположение больше загаданного числа, вывести на экран "TOO HIGH" и перейти к шагу 3.
6. Если предположение равно загаданному числу, вывести на экран "YOU GOT IT!!!", завершить игру.
-----------------
Блок-схема:
```mermaid
graph TD
    Start(Start) --> GenerateSecretNumber(Загадать число);
    GenerateSecretNumber --> OutputPrompt(Вывести запрос на ввод);
    OutputPrompt --> InputGuess(Ввод предположения);
    InputGuess --> CheckGuess(Проверка предположения);
    CheckGuess -- Guess < Secret Number --> OutputTooLow(Вывести "TOO LOW");
    OutputTooLow --> InputGuess;
    CheckGuess -- Guess > Secret Number --> OutputTooHigh(Вывести "TOO HIGH");
    OutputTooHigh --> InputGuess;
    CheckGuess -- Guess = Secret Number --> OutputWin(Вывести "YOU GOT IT!!!");
    OutputWin --> End(End);
```
"""
import random

# Загадывание случайного числа от 1 до 1000
secret_number = random.randint(1, 1000)

# Вывод приветственного сообщения и запроса на ввод числа
print("I HAVE A NUMBER BETWEEN 1 AND 1000. WHAT IS IT?")

# Основной игровой цикл
while True:
    # Запрос ввода предположения от игрока
    try:
      guess = int(input("YOUR GUESS: "))
    except ValueError:
        print("Пожалуйста, введите целое число.")
        continue

    # Проверка, меньше ли предположение загаданного числа
    if guess < secret_number:
        print("TOO LOW")
    # Проверка, больше ли предположение загаданного числа
    elif guess > secret_number:
        print("TOO HIGH")
    # Если предположение равно загаданному числу, игра заканчивается
    else:
        print("YOU GOT IT!!!")
        break
"""
Пояснения:
1.  `import random`: импортируем модуль `random` для генерации случайных чисел.
2.  `secret_number = random.randint(1, 1000)`: генерируем случайное целое число в диапазоне от 1 до 1000 включительно и сохраняем его в переменной `secret_number`. Это число, которое игрок должен угадать.
3.  `print("I HAVE A NUMBER BETWEEN 1 AND 1000. WHAT IS IT?")`: выводим на экран приветственное сообщение и запрос на ввод числа.
4.  `while True:`: начинаем бесконечный цикл, который будет продолжаться, пока игрок не угадает число.
5.  `try... except ValueError:`: Используем блок `try...except`, чтобы обрабатывать исключение `ValueError`, которое возникает, когда пользователь вводит не целое число.
6.   `guess = int(input("YOUR GUESS: "))`: запрашиваем у игрока ввод предположения и преобразуем его в целое число, сохраняя в переменной `guess`.
7.  `if guess < secret_number:`: проверяем, меньше ли предположение игрока загаданного числа. Если меньше, выводим сообщение "TOO LOW".
8.  `elif guess > secret_number:`: проверяем, больше ли предположение игрока загаданного числа. Если больше, выводим сообщение "TOO HIGH".
9.  `else:`: если ни одно из предыдущих условий не выполнено (то есть, предположение равно загаданному числу), выводим сообщение "YOU GOT IT!!!" и выходим из цикла `break`.
"""
__author__ = 'hypo69 (hypo69@davidka.net)'
```