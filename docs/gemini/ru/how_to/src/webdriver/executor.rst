Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Модуль `executor` предназначен для выполнения действий над веб-элементами на основе предоставленных конфигураций, известных как "локейторы". Локейторы — это словари, содержащие информацию о том, как найти и взаимодействовать с элементами на веб-странице. Модуль предоставляет следующие функциональности:
1. **Парсинг и обработка локейторов:** Преобразует словари с конфигурациями в объекты `SimpleNamespace`, позволяя гибко управлять данными локейтора.
2. **Взаимодействие с веб-элементами:** В зависимости от предоставленных данных, модуль может выполнять различные действия, такие как клики, отправка сообщений, выполнение событий и извлечение атрибутов веб-элементов.
3. **Обработка ошибок:** Модуль поддерживает продолжение выполнения в случае ошибки, позволяя обрабатывать веб-страницы с нестабильными элементами или требующими специального подхода.
4. **Поддержка нескольких типов локейторов:** Обрабатывает как одиночные, так и множественные локейторы, что позволяет идентифицировать и взаимодействовать с одним или несколькими веб-элементами одновременно.


Шаги выполнения
-------------------------
1. **Импортируйте необходимые библиотеки:** Модуль импортирует необходимые библиотеки, такие как `asyncio`, `re`, `time`, `SimpleNamespace`, `selenium` и другие, для работы с веб-драйвером и асинхронными операциями.
2. **Инициализируйте `ExecuteLocator`:** Создайте экземпляр класса `ExecuteLocator`, передав в конструктор веб-драйвер (`driver`).
3. **Определите локейтор:**  Создайте словарь или объект `SimpleNamespace` с информацией о локейторе.  Он должен содержать минимум поле `by` (способ локализации элемента - `XPATH`, `ID`, `TAG_NAME` и т.д.) и `selector` (значение селектора).  Также можно добавить поля `event`, `attribute` и `mandatory`.
4. **Вызовите функцию `execute_locator`:** Вызовите асинхронную функцию `execute_locator` класса `ExecuteLocator`, передав в неё локейтор, необязательные параметры `timeout`, `timeout_for_event`, `message`, `typing_speed` и `continue_on_error`.
5. **Обработайте результат:**  Функция `execute_locator` возвращает результат выполнения действий над веб-элементом (строка, список, словарь, веб-элемент или булево значение). Обработайте результат в соответствии с ожидаемым типом возвращаемого значения.


Пример использования
-------------------------
.. code-block:: python

    import asyncio
    from hypotez.src.webdriver.executor import ExecuteLocator
    from selenium import webdriver

    async def main():
        driver = webdriver.Chrome()  # Замените на ваш веб-драйвер
        executor = ExecuteLocator(driver=driver)

        locator = {"by": "XPATH", "selector": "//input[@type='text']", "event": "type(Hello World)"}

        result = await executor.execute_locator(locator=locator, timeout=10)
        print(f"Результат: {result}")
        driver.quit()


    if __name__ == "__main__":
        asyncio.run(main())