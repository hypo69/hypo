"""
BOMBER:
=================
Сложность: 5
-----------------
Игра "Бомбер" - это игра-головоломка, в которой игрок пытается сбросить бомбу на цель, расположенную на случайно сгенерированном расстоянии. Игрок вводит угол сброса и расстояние, а компьютер вычисляет траекторию бомбы. Цель игры - как можно точнее попасть в цель.

Правила игры:
1. Компьютер генерирует случайное расстояние до цели в диапазоне от 100 до 1000.
2. Игрок вводит угол сброса бомбы и расстояние сброса бомбы.
3. Компьютер вычисляет расстояние, на которое упадет бомба.
4. Если расстояние падения бомбы находится в пределах 10 единиц от расстояния до цели, игрок побеждает.
5. Если расстояние падения бомбы не попадает в диапазон, то игрок проигрывает.
-----------------
Алгоритм:
1. Сгенерировать случайное расстояние до цели в диапазоне от 100 до 1000 и присвоить переменной `targetDistance`.
2. Запросить у игрока угол сброса бомбы в градусах (угол) и расстояние сброса (расстояние).
3. Преобразовать угол из градусов в радианы `angleInRadians = angle * 3.14159 / 180`.
4. Вычислить расстояние падения бомбы по формуле: `dropDistance = distance * cos(angleInRadians)`.
5. Вычислить разницу между расстоянием падения бомбы и расстоянием до цели: `distanceDifference = abs(dropDistance - targetDistance)`.
6. Если разница между расстояниями меньше или равна 10, то вывести сообщение о выигрыше.
7. Иначе вывести сообщение о проигрыше.
8. Конец игры.
-----------------

"""
import random
import math

# Генерируем случайное расстояние до цели от 100 до 1000
targetDistance = random.randint(100, 1000)

# Запрашиваем ввод угла и расстояния сброса бомбы
try:
    angle = float(input("Введите угол сброса бомбы в градусах: "))
    distance = float(input("Введите расстояние сброса бомбы: "))
except ValueError:
    print("Ошибка: Пожалуйста, введите числовые значения для угла и расстояния.")
    exit()

# Конвертируем угол из градусов в радианы
angleInRadians = angle * math.pi / 180

# Вычисляем расстояние, на которое упадет бомба
dropDistance = distance * math.cos(angleInRadians)

# Вычисляем разницу между расстоянием падения бомбы и расстоянием до цели
distanceDifference = abs(dropDistance - targetDistance)

# Проверяем, попала ли бомба в цель
if distanceDifference <= 10:
    print("ПОЗДРАВЛЯЮ! Вы поразили цель!")
else:
    print("Вы промахнулись!")
"""
Объяснение кода:
1.  **Импорт модулей**:
    -   `import random`: Импортирует модуль `random` для генерации случайных чисел.
    -   `import math`: Импортирует модуль `math` для использования математических функций, таких как `cos` и `pi`.
2.  **Генерация случайного расстояния до цели**:
    -   `targetDistance = random.randint(100, 1000)`: Генерирует случайное целое число в диапазоне от 100 до 1000 включительно, которое представляет собой расстояние до цели.
3.  **Ввод данных от пользователя**:
    -   `try...except ValueError`: Блок try-except обрабатывает возможные ошибки ввода. Если пользователь введет не число, то будет выведено сообщение об ошибке.
    -   `angle = float(input("Введите угол сброса бомбы в градусах: "))`: Запрашивает у пользователя угол сброса бомбы в градусах и преобразует введенное значение в число с плавающей точкой.
    -   `distance = float(input("Введите расстояние сброса бомбы: "))`: Запрашивает у пользователя расстояние сброса бомбы и преобразует введенное значение в число с плавающей точкой.
    -   `exit()`: Если введено не число, программа завершается.
4.  **Преобразование угла в радианы**:
    -   `angleInRadians = angle * math.pi / 180`: Преобразует угол из градусов в радианы, так как функция `cos()` в `math` принимает аргумент в радианах.
5.  **Вычисление расстояния падения бомбы**:
    -   `dropDistance = distance * math.cos(angleInRadians)`: Вычисляет расстояние, на которое упадет бомба, используя введенное расстояние и косинус угла в радианах.
6.  **Вычисление разницы расстояний**:
    -   `distanceDifference = abs(dropDistance - targetDistance)`: Вычисляет абсолютную разницу между расстоянием падения бомбы и расстоянием до цели.
7.  **Проверка попадания в цель**:
    -   `if distanceDifference <= 10`: Проверяет, находится ли разница между расстояниями в пределах 10 единиц.
    -   `print("ПОЗДРАВЛЯЮ! Вы поразили цель!")`: Выводит сообщение о выигрыше, если бомба попала в цель.
    -   `else`: Если разница больше 10, значит, бомба не попала в цель.
    -   `print("Вы промахнулись!")`: Выводит сообщение о проигрыше.
"""
