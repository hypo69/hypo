Как использовать класс Aliexpress
========================================================================================

Описание
-------------------------
Класс `Aliexpress` предназначен для работы с AliExpress. Он объединяет функциональность классов `Supplier`, `AliRequests` и `AliApi` для задач парсинга и взаимодействия с API AliExpress.  Класс предоставляет возможность выбора способа взаимодействия с сайтом (с веб-драйвером или без него).

Шаги выполнения
-------------------------
1. **Импортируйте класс `Aliexpress`:**
   ```python
   from src.suppliers.aliexpress import Aliexpress
   ```

2. **Инициализируйте объект класса `Aliexpress`:**
   Вы можете указать различные параметры, влияющие на работу с AliExpress.
   - `webdriver`: Указывает, использовать ли вебдрайвер для взаимодействия с сайтом.
       - Значение `False` (по умолчанию) – работа без вебдрайвера.
       - Строковое значение ('chrome', 'mozilla', 'edge' или 'default') – использование соответствующего вебдрайвера.
   - `locale`: Устанавливает язык и валюту. По умолчанию – английский (`EN`) и доллар (`USD`).
   - `*args` и `**kwargs`: Дополнительные аргументы для гибкой настройки.

   ```python
   # Инициализация без вебдрайвера
   a = Aliexpress()

   # Инициализация с вебдрайвером Chrome
   a = Aliexpress('chrome')

   # Инициализация с использованием requests
   a = Aliexpress(requests=True)

   # Инициализация с настройками языка и валюты
   a = Aliexpress(locale={'RU': 'RUB'})
   ```

3. **Далее используйте методы класса `Aliexpress` для взаимодействия с AliExpress**  (например, для парсинга или работы с API).  Документация для таких методов должна быть предоставлена в другом месте,  или в коде, который вызывается внутри `Aliexpress`.

Пример использования
-------------------------
.. code-block:: python

    from src.suppliers.aliexpress import Aliexpress

    # Инициализация объекта с вебдрайвером Chrome
    aliexpress_instance = Aliexpress('chrome')

    # (Далее следует код, который использует методы класса Aliexpress для выполнения конкретных задач, например, для парсинга страницы или работы с API.)