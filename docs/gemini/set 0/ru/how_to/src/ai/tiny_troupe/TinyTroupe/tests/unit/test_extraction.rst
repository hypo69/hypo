Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код содержит тесты для модуля `extraction` из проекта TinyTroupe, в частности, для классов `ArtifactExporter` и `Normalizer`.  Тесты проверяют корректное экспортирование данных в различные форматы (JSON, текст, docx) и работу нормализатора концепций.  `ArtifactExporter` отвечает за экспорт данных в файлы, а `Normalizer` - за нормализацию списков концепций.

Шаги выполнения
-------------------------
1. **Импорт необходимых библиотек:** Код импортирует нужные библиотеки, включая pytest для тестирования, os для работы с файловой системой, json для работы с JSON, random для генерации случайных данных, logging для логирования, sys для добавления путей в sys.path, а также классы из проекта TinyTroupe и вспомогательные функции из `testing_utils`.

2. **Определение фикстуры `exporter`:** Фикстура `exporter` создает экземпляр класса `ArtifactExporter` с базовой папкой для экспорта. Это позволяет избежать создания новой экземпляры `ArtifactExporter` в каждом тесте.

3. **Тестирование экспорта JSON:**
    - Определяется словарь данных `artifact_data`.
    - Данные экспортируются в файл JSON методом `exporter.export` с указанием типа контента и формата.
    - Проверяется существование экспортированного файла `test_artifact.json`.
    - Проверяется, что загруженные из файла данные совпадают с исходными данными `artifact_data`.

4. **Тестирование экспорта текста:**
    - Определяется строка данных `artifact_data`.
    - Данные экспортируются в файл TXT методом `exporter.export`.
    - Проверяется существование экспортированного файла `test_artifact.txt`.
    - Проверяется, что содержимое экспортированного файла совпадает с исходной строкой.

5. **Тестирование экспорта docx:**
    - Определяется строка данных `artifact_data` (в формате Markdown).
    - Данные экспортируются в файл docx методом `exporter.export` с указанием формата контента как Markdown.
    - Проверяется существование экспортированного файла `test_artifact.docx`.
    - Проверяется, что экспортированный файл содержит часть исходного текста (в данном случае не всю, так как тест проверяет сохранение форматирования). Важно, что формат Markdown не сохраняется в docx.

6. **Тестирование нормализатора `Normalizer`:**
    - Определяется список концепций `concepts`.
    - Создается экземпляр класса `Normalizer` с заданным количеством нормализуемых элементов.
    - Проверяется, что количество нормализованных элементов соответствует заданному значению (n=10).
    - Создаются несколько случайных подвыборок (`random_concepts_buckets`) исходного списка концепций.
    - Для каждой подвыборки:
        - Вызывается метод `normalize` для нормализации концепций.
        - Проверяется, что результат не `None`.
        - Проверяется, что длина нормализованных концепций совпадает с длиной исходных концепций.
        - Проверяется, что все элементы исходных концепций присутствуют в словаре `normalizing_map`.
        - Проверяется, что размер кэша `normalizing_map` увеличивается после каждой нормализации.

Пример использования
-------------------------
.. code-block:: python

    # Пример использования ArtifactExporter для экспорта данных в JSON.
    import json
    from tinytroupe.extraction import ArtifactExporter

    # Создаем экземпляр ArtifactExporter
    exporter = ArtifactExporter(base_output_folder="./exports")

    # Данные для экспорта
    artifact_data = {"key": "value"}

    # Экспортируем данные
    exporter.export("my_artifact", artifact_data, content_type="record", target_format="json")