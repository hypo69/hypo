"""
002:
=================
Сложность: 2
-----------------
Игра "Багз" представляет собой простую числовую угадайку. Компьютер "загадывает" случайное число от 1 до 100, а игрок пытается его угадать. После каждой попытки компьютер сообщает, больше или меньше загаданное число, чем предположение игрока.
Правила игры: Компьютер выбирает случайное число от 1 до 100. Игрок вводит свои предположения. Компьютер сравнивает предположение игрока с загаданным числом и сообщает, является ли предположение "слишком большим", "слишком маленьким" или "правильным". Игра продолжается, пока игрок не угадает число.
-----------------
Алгоритм:
1. Вывести сообщение "Я ЗАДУМАЛ ЧИСЛО МЕЖДУ 1 И 100"
2. Сгенерировать случайное число в диапазоне от 1 до 100 и сохранить его в переменной hidden_number.
3. Запустить цикл, который будет повторяться, пока игрок не угадает число.
4. Внутри цикла:
    4.1. Запросить у игрока предположение и сохранить его в переменной guess.
    4.2. Сравнить предположение игрока с загаданным числом.
    4.3. Если guess больше hidden_number, вывести сообщение "СЛИШКОМ БОЛЬШОЕ".
    4.4. Если guess меньше hidden_number, вывести сообщение "СЛИШКОМ МАЛЕНЬКОЕ".
    4.5. Если guess равно hidden_number, вывести сообщение "ПРАВИЛЬНО! ТЫ УГАДАЛ" и завершить цикл.
5. Завершить игру.
-----------------
Блок-схема:
```mermaid
graph TD
    Start(Start) --> GenerateNumber(Generate Hidden Number between 1 and 100);
    GenerateNumber --> InputGuess(Input Guess);
    InputGuess --> CompareGuess(Compare Guess with Hidden Number);
    CompareGuess -- Guess > Hidden Number --> OutputTooBig(Output "TOO BIG");
    OutputTooBig --> InputGuess;
    CompareGuess -- Guess < Hidden Number --> OutputTooSmall(Output "TOO SMALL");
    OutputTooSmall --> InputGuess;
    CompareGuess -- Guess = Hidden Number --> OutputCorrect(Output "CORRECT! YOU GUESSED IT");
    OutputCorrect --> End(End);
```
"""
import random

def play_bugs():
    """
    Игра "Багз": Компьютер загадывает число, игрок пытается его угадать.
    """
    print("Я ЗАДУМАЛ ЧИСЛО МЕЖДУ 1 И 100")  # Выводим приветствие

    hidden_number = random.randint(1, 100)  # Генерируем случайное число от 1 до 100, сохраняем в переменной hidden_number
    
    while True: # Запускаем бесконечный цикл, который будет продолжаться пока игрок не угадает число
        try:
          guess = int(input("ТВОЁ ПРЕДПОЛОЖЕНИЕ? ")) # Запрашиваем предположение игрока и сохраняем его как целое число в переменную guess
        except ValueError:
          print("Пожалуйста, введите целое число") # Сообщаем, что нужно ввести целое число
          continue # Переходим к следующей итерации цикла
        
        if guess > hidden_number: # Если предположение больше загаданного числа
            print("СЛИШКОМ БОЛЬШОЕ")  # Выводим сообщение "СЛИШКОМ БОЛЬШОЕ"
        elif guess < hidden_number: # Если предположение меньше загаданного числа
            print("СЛИШКОМ МАЛЕНЬКОЕ") # Выводим сообщение "СЛИШКОМ МАЛЕНЬКОЕ"
        else:  # Если предположение равно загаданному числу
            print("ПРАВИЛЬНО! ТЫ УГАДАЛ")  # Выводим сообщение "ПРАВИЛЬНО! ТЫ УГАДАЛ"
            break  # Выходим из цикла, игра закончена

if __name__ == "__main__":
    play_bugs() # Запускаем игру

"""
Пояснения:
    - `random.randint(1, 100)`: генерирует случайное целое число в диапазоне от 1 до 100 включительно.
    - `while True:`: создает бесконечный цикл, который будет продолжаться до тех пор, пока не будет выполнена команда `break`.
    - `input("ТВОЁ ПРЕДПОЛОЖЕНИЕ? ")`: выводит сообщение "ТВОЁ ПРЕДПОЛОЖЕНИЕ?" и ожидает ввода данных от пользователя.
    - `int(...)`: преобразует введенные пользователем данные в целое число.
    - `if guess > hidden_number:`: проверяет, больше ли предположение загаданного числа.
    - `elif guess < hidden_number:`: проверяет, меньше ли предположение загаданного числа.
    - `else:`: выполняется, если предположение равно загаданному числу.
    - `break`: завершает выполнение цикла.
    - `try... except ValueError:`: используется для обработки исключения, которое возникает, если пользователь вводит не целое число.
licence:MIT(../licence)
"""
__author__ = 'hypo69 (hypo69@davidka.net)'
```