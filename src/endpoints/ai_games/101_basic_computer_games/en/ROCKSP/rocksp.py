"""
<ROCKSP>:
=================
Сложность: 2
-----------------
Игра "Камень, ножницы, бумага" - это классическая игра для двух игроков, в которой каждый игрок выбирает один из трех вариантов: камень, ножницы или бумагу. Победитель определяется по следующим правилам: камень побеждает ножницы, ножницы побеждают бумагу, а бумага побеждает камень. Если оба игрока выбирают один и тот же вариант, то объявляется ничья.
Правила игры:
1.  Игрок и компьютер делают выбор из трех вариантов: 1 - камень, 2 - ножницы, 3 - бумага.
2.  Компьютер делает выбор случайным образом.
3.  Победитель определяется по следующим правилам:
    * Камень (1) побеждает ножницы (2).
    * Ножницы (2) побеждают бумагу (3).
    * Бумага (3) побеждает камень (1).
4.  Если оба выбирают один и тот же вариант, то это ничья.
5.  Результат каждого раунда выводится на экран.
6.  Игра заканчивается после каждого раунда.
-----------------
Алгоритм:
1. Запросить у игрока выбор: 1 - камень, 2 - ножницы, 3 - бумага.
2. Если ввод игрока не является 1, 2 или 3, вывести сообщение об ошибке ввода и перейти к шагу 1.
3. Сгенерировать случайный выбор для компьютера: 1, 2 или 3.
4. Вывести на экран выбор игрока и компьютера.
5. Сравнить выбор игрока и компьютера:
   5.1 Если оба выбора совпадают, вывести "TIE".
   5.2 Если игрок выбирает 1 (камень), а компьютер 2 (ножницы), вывести "YOU WIN".
   5.3 Если игрок выбирает 1 (камень), а компьютер 3 (бумага), вывести "I WIN".
   5.4 Если игрок выбирает 2 (ножницы), а компьютер 1 (камень), вывести "I WIN".
   5.5 Если игрок выбирает 2 (ножницы), а компьютер 3 (бумага), вывести "YOU WIN".
   5.6 Если игрок выбирает 3 (бумага), а компьютер 1 (камень), вывести "YOU WIN".
   5.7 Если игрок выбирает 3 (бумага), а компьютер 2 (ножницы), вывести "I WIN".
6. Конец игры.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InputUserChoice["<p align='left'>Запрос выбора пользователя:
    <code><b>
    userChoice = input('1-ROCK, 2-SCISSORS, 3-PAPER?')
    </b></code></p>"]
    InputUserChoice --> ValidateInput{"Проверка: <code><b>userChoice in [1, 2, 3]?</b></code>"}
    ValidateInput -- Нет --> ErrorMessage["Вывод сообщения: <b>INVALID INPUT</b>"]
    ErrorMessage --> InputUserChoice
    ValidateInput -- Да --> GenerateComputerChoice["<p align='left'>Генерация случайного выбора компьютера:
    <code><b>
    computerChoice = random(1, 3)
    </b></code></p>"]
    GenerateComputerChoice --> OutputChoices["<p align='left'>Вывод выбора пользователя и компьютера</p>"]
    OutputChoices --> CompareChoices{"Сравнение выбора пользователя и компьютера"}
    CompareChoices -- "userChoice == computerChoice" --> OutputTie["Вывод сообщения: <b>TIE</b>"]
    CompareChoices -- "userChoice == 1 AND computerChoice == 2" --> OutputUserWin1["Вывод сообщения: <b>YOU WIN</b>"]
    CompareChoices -- "userChoice == 1 AND computerChoice == 3" --> OutputComputerWin1["Вывод сообщения: <b>I WIN</b>"]
    CompareChoices -- "userChoice == 2 AND computerChoice == 1" --> OutputComputerWin2["Вывод сообщения: <b>I WIN</b>"]
    CompareChoices -- "userChoice == 2 AND computerChoice == 3" --> OutputUserWin2["Вывод сообщения: <b>YOU WIN</b>"]
    CompareChoices -- "userChoice == 3 AND computerChoice == 1" --> OutputUserWin3["Вывод сообщения: <b>YOU WIN</b>"]
    CompareChoices -- "userChoice == 3 AND computerChoice == 2" --> OutputComputerWin3["Вывод сообщения: <b>I WIN</b>"]
    OutputTie --> End["Конец"]
    OutputUserWin1 --> End
    OutputComputerWin1 --> End
    OutputComputerWin2 --> End
    OutputUserWin2 --> End
    OutputUserWin3 --> End
    OutputComputerWin3 --> End
```

Legenda:
    Start - Начало игры.
    InputUserChoice - Запрос ввода пользователя: 1 - камень, 2 - ножницы, 3 - бумага.
    ValidateInput - Проверка корректности ввода пользователя: должно быть 1, 2 или 3.
    ErrorMessage - Вывод сообщения об ошибке ввода.
    GenerateComputerChoice - Генерация случайного выбора компьютера: 1, 2 или 3.
    OutputChoices - Вывод на экран выбора пользователя и компьютера.
    CompareChoices - Сравнение выбора пользователя и компьютера для определения победителя.
    OutputTie - Вывод сообщения о ничьей (TIE).
    OutputUserWin1 - Вывод сообщения о победе пользователя (YOU WIN) (пользователь выбрал камень, компьютер - ножницы).
    OutputComputerWin1 - Вывод сообщения о победе компьютера (I WIN) (пользователь выбрал камень, компьютер - бумага).
    OutputComputerWin2 - Вывод сообщения о победе компьютера (I WIN) (пользователь выбрал ножницы, компьютер - камень).
    OutputUserWin2 - Вывод сообщения о победе пользователя (YOU WIN) (пользователь выбрал ножницы, компьютер - бумага).
    OutputUserWin3 - Вывод сообщения о победе пользователя (YOU WIN) (пользователь выбрал бумагу, компьютер - камень).
    OutputComputerWin3 - Вывод сообщения о победе компьютера (I WIN) (пользователь выбрал бумагу, компьютер - ножницы).
    End - Конец игры.
"""
import random

# Функция для запуска игры
def play_rock_paper_scissors():
    while True:
        # Запрашиваем выбор пользователя
        try:
            user_choice = int(input("Введите ваш выбор (1 - Камень, 2 - Ножницы, 3 - Бумага): "))
        except ValueError:
            print("Неверный ввод. Пожалуйста, введите число 1, 2 или 3.")
            continue

        # Проверяем корректность ввода
        if user_choice not in [1, 2, 3]:
            print("Неверный ввод. Пожалуйста, введите число 1, 2 или 3.")
            continue

        # Генерируем случайный выбор для компьютера
        computer_choice = random.randint(1, 3)

        # Выводим выбор игрока и компьютера
        print("Ваш выбор:", user_choice)
        print("Выбор компьютера:", computer_choice)

        # Определяем победителя
        if user_choice == computer_choice:
            print("Ничья!")
        elif (user_choice == 1 and computer_choice == 2) or \
             (user_choice == 2 and computer_choice == 3) or \
             (user_choice == 3 and computer_choice == 1):
            print("Вы выиграли!")
        else:
            print("Вы проиграли!")
        break

# Запускаем игру
if __name__ == "__main__":
    play_rock_paper_scissors()
"""
Объяснение кода:
1. **Импорт модуля `random`**:
   - `import random`: Импортирует модуль `random`, который используется для генерации случайного выбора компьютера.

2. **Функция `play_rock_paper_scissors()`**:
   -  Определяет функцию, содержащую логику игры "Камень, ножницы, бумага".

3. **Цикл `while True:`**:
   -  Бесконечный цикл, который продолжается до тех пор, пока не будет выполнен корректный ввод и определен победитель.

4. **Ввод данных и проверка корректности**:
    - `try...except ValueError`: обрабатывает возможные ошибки, если пользователь введет не число.
   -   `user_choice = int(input("Введите ваш выбор (1 - Камень, 2 - Ножницы, 3 - Бумага): "))`: Запрашивает у пользователя выбор и преобразует его в целое число.
    -  `if user_choice not in [1, 2, 3]:`: Проверяет, что введенное число является 1, 2 или 3. Если ввод некорректный, выводится сообщение об ошибке, и цикл начинается заново.

5. **Генерация выбора компьютера**:
   - `computer_choice = random.randint(1, 3)`: Генерирует случайное целое число от 1 до 3 включительно и сохраняет его в `computer_choice`.

6.  **Вывод выбора пользователя и компьютера**:
     -  `print("Ваш выбор:", user_choice)`: Выводит на экран выбор пользователя.
     -  `print("Выбор компьютера:", computer_choice)`: Выводит на экран выбор компьютера.

7. **Определение победителя**:
   -   `if user_choice == computer_choice:`: Проверяет, совпали ли выборы. Если да, то выводится сообщение о ничьей.
   -  `elif (user_choice == 1 and computer_choice == 2) or \
         (user_choice == 2 and computer_choice == 3) or \
         (user_choice == 3 and computer_choice == 1):`: Проверяет все варианты, когда пользователь выигрывает.
   -    `print("Вы выиграли!")`: Выводит сообщение о победе пользователя.
   -    `else:`: Если ни одно из предыдущих условий не выполнилось, значит, победил компьютер.
        - `print("Вы проиграли!")`: Выводит сообщение о поражении пользователя.

8. **Завершение игры**:
   -   `break`: Завершает текущий игровой цикл.
9. **Запуск игры**:
   -  `if __name__ == "__main__":`: Этот блок гарантирует, что функция `play_rock_paper_scissors()` будет запущена, только если файл исполняется напрямую, а не импортируется как модуль.
   -  `play_rock_paper_scissors()`: Вызывает функцию для начала игры.
"""
