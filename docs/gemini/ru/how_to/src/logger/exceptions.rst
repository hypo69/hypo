Как использовать модуль exceptions
========================================================================================

Описание
-------------------------
Этот модуль определяет пользовательские исключения, используемые в приложении. Он содержит классы для обработки ошибок, связанных с различными компонентами приложения, включая операции с файлами, полями продукта, подключением к базе данных KeePass и ошибками PrestaShop WebService.  Модуль предоставляет базовый класс `CustomException`, а также специализированные исключения для разных сценариев.

Шаги выполнения
-------------------------
1. **Инициализация:**  При возникновении ошибки создается экземпляр соответствующего класса исключения. При этом передаются необходимые данные, такие как сообщение об ошибке и (необязательно) исходная ошибка.


2. **Обработка ошибок:** Класс `CustomException` содержит метод `handle_exception()`. Этот метод записывает информацию об ошибке в лог с помощью библиотеки `logger` и, если доступна, информацию об исходной ошибке.


3. **Наследование:**  Для специализированных исключений (например, `FileNotFoundError`, `ProductFieldException`) используется наследование от базового класса `CustomException`. Это позволяет использовать общую логику обработки ошибок и добавлять специфические атрибуты для каждого типа исключения.


4. **Управление исключениями:** Различные типы исключений (например, `KeePassException`, `PrestaShopException`) обрабатывают специфичные типы ошибок.


5. **Предоставление информации:** Класс `PrestaShopException` предоставляет информацию о типе ошибки (например, `ps_error_msg`, `ps_error_code`), которая может быть полезна для обработки и анализа ошибки со стороны PrestaShop.


Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.logger.exceptions import FileNotFoundError, PrestaShopException

    try:
        # Ваш код, который может вызвать ошибку
        open("несуществующий_файл.txt", "r")
    except FileNotFoundError as e:
        print(f"Файл не найден: {e}")


    try:
        # Ваш код, который может вызвать ошибку PrestaShop
        # ... ваш код вызова PrestaShop WebService ...
    except PrestaShopException as e:
        print(f"Ошибка PrestaShop: {e.ps_error_msg}, код ошибки: {e.ps_error_code}")

    try:
        # Ваш код, который может вызвать произвольную ошибку
        1/0
    except Exception as ex:
        # Используйте CustomException для логирования
        from hypotez.src.logger.exceptions import CustomException
        CustomException("Внутренняя ошибка", ex)