Как использовать модуль для преобразования HTML в PDF
============================================================================================

Описание
-------------------------
Модуль `hypotez/src/utils/pdf.py` предоставляет функции для сохранения HTML-контента или HTML-файлов в PDF-файлы, используя различные библиотеки (pdfkit, FPDF, WeasyPrint, xhtml2pdf).  Модуль включает поиск корневой директории проекта, валидацию существования библиотек `wkhtmltopdf`, а также установку шрифтов для FPDF.

Шаги выполнения
-------------------------
1. **Импортирование модуля:**
   Импортируйте модуль `PDFUtils` из файла `hypotez/src/utils/pdf.py`.

2. **Нахождение корневой директории проекта:**
   Функция `set_project_root()` ищет корневую директорию проекта, начиная с текущей директории, и поднимается вверх по дереву директорий, пока не найдёт директорию, содержащую файлы `pyproject.toml`, `requirements.txt`, или `.git`.  Эта функция необходима для корректного импорта дополнительных модулей.

3. **Выбор метода преобразования:**
   Выберите нужный метод преобразования из функций класса `PDFUtils`:
   - `save_pdf_pdfkit()`: Для преобразования HTML-контента или файла в PDF с помощью библиотеки `pdfkit`.
   - `save_pdf_fpdf()`: Для преобразования текста в PDF с помощью библиотеки `FPDF`.  Поддерживает автоматическое определение и использование шрифтов (используя `fonts.json`).
   - `save_pdf_weasyprint()`: Для преобразования HTML-контента или файла в PDF с помощью библиотеки `WeasyPrint`.
   - `save_pdf_xhtml2pdf()`: Для преобразования HTML-контента или файла в PDF с помощью библиотеки `xhtml2pdf`.

4. **Вызов метода преобразования:**
   Передайте HTML-контент (строка) или путь к HTML-файлу (`data`) и путь к сохраняемому PDF-файлу (`pdf_file`) в выбранную функцию.  Обратите внимание, что передача пути должна быть в виде строки (str).

5. **Обработка ошибок:**
   Модуль использует обработку исключений (`try...except`) для логгирования ошибок, возникающих при генерации PDF.  Важное замечание:  код содержит неполную обработку исключений, возможно, необходимо добавить более подробную логгирование или обработку ошибок.


Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.utils.pdf import PDFUtils
    from pathlib import Path

    # HTML-контент, который нужно преобразовать
    html_content = """
    <h1>Заголовок</h1>
    <p>Текст страницы.</p>
    """

    # Путь к файлу PDF, который будет создан
    pdf_file_path = Path("./output.pdf")

    # Вызов функции для преобразования HTML в PDF
    success = PDFUtils.save_pdf_pdfkit(html_content, str(pdf_file_path))

    if success:
        print(f"PDF файл успешно сохранен: {pdf_file_path}")
    else:
        print("Ошибка при создании PDF файла.")