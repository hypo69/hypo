Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Данный код реализует приложение, которое отображает веб-браузер в главном окне. Приложение позволяет вводить URL-адреса, загружать веб-страницы, сворачиваться в системный трей, а также предоставляет меню для быстрого доступа к популярным сервисам Google и выбору веб-моделей. Код использует PyQt6 для создания графического интерфейса и QtWebEngineWidgets для отображения веб-страниц.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:** Код импортирует необходимые модули из PyQt6 (для создания графического интерфейса), PyQt6.QtWebEngineWidgets (для работы с веб-браузером) и `os` (для работы с файловой системой).
2. **Определение класса `AssistantMainWindow`:** Этот класс отвечает за создание и управление главным окном приложения.
3. **Настройка главного окна:**
    * Устанавливаются размеры окна на 75% от размера экрана.
    * Запрашивается выбор браузера пользователя (Chrome, Firefox или Edge) с помощью диалогового окна.
    * Создаётся профиль веб-браузера на основе выбранного браузера.
    * Создаётся объект `QWebEngineView` для отображения веб-страниц.
    * Создаются виджеты для верхней панели (поле для ввода URL, кнопки загрузки, сворачивания, полноэкранного режима, закрытия).
    * Создаются layout'ы для размещения виджетов.
4. **Создание системного трея:**
    * Создаётся иконка для системного трея.
    * Создаётся контекстное меню для иконки в трее с опциями "Восстановить" и "Выход".
5. **Создание меню для выбора URL:**
    * Создаётся меню `self.url_menu` для быстрых ссылок на популярные сервисы Google (Google Login, Gmail, Google Docs, Google Sheets, Google Drive, Google Photos).
6. **Создание меню для выбора моделей:**
    * Создаётся меню `self.model_menu` для выбора различных веб-моделей (ChatGPT, Gemini, Claude).
7. **Метод `ask_for_browser()`:** Запрашивает у пользователя выбор браузера.
8. **Метод `load_url()`:** Загружает URL-адрес в веб-браузер. Проверяет правильность адреса и добавляет "http://" если необходимо.
9. **Метод `hide_to_tray()`:** Сворачивает приложение в трей.
10. **Метод `quit_app()`:** Закрывает приложение.
11. **Переопределение метода `closeEvent()`:** Игнорирует закрытие окна при клике на "X", вызывает `hide_to_tray()` для сворачивания приложения в трей.
12. **Главная функция `if __name__ == "__main__":`:** Создаёт приложение `QApplication`, создаёт и отображает главное окно `AssistantMainWindow`.

Пример использования
-------------------------
.. code-block:: python

    import sys
    from PyQt6.QtWidgets import QApplication

    if __name__ == "__main__":
        app = QApplication(sys.argv)
        window = AssistantMainWindow()
        window.show()
        sys.exit(app.exec())