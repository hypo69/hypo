Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код предоставляет функции для преобразования XML-строки или XML-дерева (ElementTree) в словарь Python. Он обрабатывает атрибуты, текстовые значения и вложенные элементы XML.  Функции обрабатывают ситуации, когда есть одинаковые теги, превращая их в список значений, и игнорируют атрибуты `href` при преобразовании.

Шаги выполнения
-------------------------
1. **Импорт необходимых библиотек:** Код импортирует библиотеку `xml.etree.ElementTree` для работы с XML. Обработка ошибок `ImportError` позволяет использовать как `cElementTree`, так и `ElementTree`.
2. **Функция `_parse_node`:**  Эта функция рекурсивно проходит по XML-узлам и преобразует каждый в словарь.
   - Создаёт пустой словарь `tree`.
   - Обрабатывает атрибуты узла, создавая словарь `attrs`. Важно, что атрибуты `href` игнорируются.
   - Получает текстовое значение узла (`node.text`).
   - Если у узла есть атрибуты, добавляет `attrs` в словарь `tree`.
   - Проходит по дочерним узлам:
     - Для каждого дочернего узла, рекурсивно вызывает `_parse_node`.
     - Если у дочернего узла есть значения (атрибуты или дочерние узлы), то `value` очищается.
     - Если тег дочернего узла уже есть в `tree`, и это не список, то текущее значение превращается в список. Добавляет новое значение в список.
   - Если у узла нет дочерних элементов, сохраняет текстовое значение в `tree` с ключом `value`.
   - Возвращает `tree` (словарь или значение).
3. **Функция `_make_dict`:** Эта функция создает словарь, используя тег элемента как ключ и значение. Обрабатывает XML-пространства имен, используя регулярное выражение, чтобы корректно сохранить информацию о них.
4. **Функция `xml2dict`:** Принимает XML-строку и преобразует её в словарь, используя `ET.fromstring` для создания XML-дерева.
5. **Функция `ET2dict`:** Принимает XML-дерево (ElementTree) и преобразует его в словарь, вызывая функцию `_parse_node`.

Пример использования
-------------------------
.. code-block:: python

    import xml.etree.ElementTree as ET
    from hypotez.src.utils.convertors.xml2dict import xml2dict

    xml_string = """
    <root attr1="value1" attr2="{http://example.com}namespaceValue">
        <child>text1</child>
        <child>text2</child>
        <another_child attr3="value3"></another_child>
    </root>
    """

    try:
        result = xml2dict(xml_string)
        print(result)
    except Exception as e:
        print(f"Ошибка: {e}")