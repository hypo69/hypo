Как использовать класс Supplier
=========================================================================================

Описание
-------------------------
Класс `Supplier` служит базовым классом для всех поставщиков данных. Он предоставляет стандартизированный интерфейс для взаимодействия с различными источниками данных (например, веб-сайтами, документами, базами данных).  Класс обрабатывает инициализацию, конфигурацию, аутентификацию и выполнение рабочих процессов для разных источников, таких как `amazon.com`, `walmart.com`, `mouser.com`, и `digikey.com`. Клиенты могут определить и добавить собственных поставщиков.  Класс включает методы для загрузки настроек, аутентификации и выполнения сценариев.

Шаги выполнения
-------------------------
1. **Инициализация:** Создайте экземпляр класса `Supplier`, передавая ему префикс поставщика (`supplier_prefix`) и, при необходимости, другие атрибуты (например, `locale`, `webdriver`).
2. **Загрузка настроек:** Вызовите метод `_payload`, передав тип драйвера (например, `webdriver = 'chrome'`). Этот метод загружает настройки поставщика, локэйторы и инициализирует веб-драйвер.  Убедитесь, что соответствующие файлы настроек (в JSON формате) и локэйторы доступны.
3. **Аутентификация (при необходимости):** Вызовите метод `login()`, если требуется аутентификация на сайте поставщика.
4. **Выполнение сценариев:** Вызовите метод `run_scenario_files()`, передав список сценариев (пути к файлам или список JSON-объектов). Или вызовите `run_scenarios()`, передавая список словарей сценариев.
5. **Обработка результатов:** Проверьте возвращаемые значения методов (`run_scenario_files`, `run_scenarios`), чтобы определить, были ли сценарии выполнены успешно.

Пример использования
-------------------------
.. code-block:: python

    from suppliers import Supplier
    from webdriver import Driver  # Подключите необходимый класс

    # Предполагая, что у вас есть соответствующие сценарии и настройки:
    supplier = Supplier(supplier_prefix='amazon', locale='en', webdriver=Driver('chrome'))  

    # Важно: Загрузите настройки:
    success = supplier._payload(webdriver='chrome')
    if not success:
        print("Ошибка загрузки настроек")
        exit(1)
    
    # Аутентификация (если требуется):
    if supplier.login():
        print("Успешная аутентификация")

        # Выполнение сценария из файла:
        success = supplier.run_scenario_files(['scenario1.json'])
        if success:
            print("Сценарии успешно выполнены.")
        else:
            print("Ошибка выполнения сценариев.")


    else:
        print("Ошибка аутентификации")