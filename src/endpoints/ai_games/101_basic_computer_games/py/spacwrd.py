"""
SPACWRD:
=================
Сложность: 5
-----------------
Игра "SPACWRD" - это игра-головоломка, в которой игрок должен угадать слово, буквы которого перемешаны. Компьютер выбирает слово из списка, перемешивает его буквы и предлагает игроку угадать это слово. Игра предоставляет ограниченное количество попыток.

Правила игры:
1. Компьютер выбирает случайное слово из заранее заданного списка.
2. Буквы выбранного слова перемешиваются.
3. Игрок должен ввести слово, пытаясь угадать исходное слово.
4. У игрока есть определенное количество попыток.
5. Если игрок угадывает слово правильно, игра заканчивается победой.
6. Если игрок не угадывает слово за отведенное количество попыток, игра заканчивается проигрышем.

-----------------
Алгоритм:
1.  Инициализировать список слов для игры.
2.  Выбрать случайное слово из списка.
3.  Перемешать буквы выбранного слова.
4.  Установить количество попыток.
5.  Начать игровой цикл "пока не закончены попытки или слово не угадано":
    5.1 Вывести перемешанное слово.
    5.2 Запросить у игрока ввод слова.
    5.3 Если введенное слово совпадает с загаданным словом, вывести сообщение о победе и перейти к шагу 6.
    5.4 Если введенное слово не совпадает с загаданным словом, уменьшить количество попыток на 1.
    5.5 Если количество попыток равно 0, вывести сообщение о проигрыше и загаданное слово, перейти к шагу 6.
6.  Завершить игру.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeGame["<p align='left'>Инициализация игры:
    <code><b>
    wordList = [...]
    attempts = 5
    </b></code></p>"]
    InitializeGame --> ChooseWord["Выбор случайного слова из списка: <code><b>secretWord</b></code>"]
    ChooseWord --> ShuffleWord["Перемешивание букв слова: <code><b>shuffledWord</b></code>"]
    ShuffleWord --> GameLoop{"Начало цикла: пока не закончены попытки или слово не угадано"}
    GameLoop -- Да --> OutputShuffledWord["Вывод перемешанного слова: <code><b>shuffledWord</b></code>"]
    OutputShuffledWord --> InputGuess["Ввод слова игроком: <code><b>userGuess</b></code>"]
    InputGuess --> CheckGuess{"Проверка: <code><b>userGuess == secretWord?</b></code>"}
    CheckGuess -- Да --> OutputWin["Вывод сообщения: <b>YOU GOT IT!</b>"]
    OutputWin --> End["Конец"]
    CheckGuess -- Нет --> DecreaseAttempts["<code><b>attempts = attempts - 1</b></code>"]
    DecreaseAttempts --> CheckAttempts{"Проверка: <code><b>attempts > 0?</b></code>"}
    CheckAttempts -- Да --> GameLoop
    CheckAttempts -- Нет --> OutputLose["Вывод сообщения: <b>YOU LOST. The word was <code>{secretWord}</code></b>"]
    OutputLose --> End
    GameLoop -- Нет --> End

```
Legenda:
    Start - Начало программы.
    InitializeGame - Инициализация игры: создается список слов `wordList` и устанавливается начальное количество попыток `attempts` равное 5.
    ChooseWord - Выбор случайного слова `secretWord` из списка `wordList`.
    ShuffleWord - Перемешивание букв выбранного слова `secretWord` и сохранение результата в `shuffledWord`.
    GameLoop - Начало цикла, который продолжается, пока не закончатся попытки или слово не будет угадано.
    OutputShuffledWord - Вывод перемешанного слова `shuffledWord` на экран для игрока.
    InputGuess - Запрос ввода слова от пользователя и сохранение его в `userGuess`.
    CheckGuess - Проверка, равно ли введенное слово `userGuess` загаданному слову `secretWord`.
    OutputWin - Вывод сообщения о победе, если слова равны.
    End - Конец программы.
    DecreaseAttempts - Уменьшение количества оставшихся попыток `attempts` на 1.
    CheckAttempts - Проверка, осталось ли еще попытки `attempts` больше 0.
    OutputLose - Вывод сообщения о проигрыше и показ загаданного слова `secretWord`.
"""
import random

# Список слов для игры
wordList = ["python", "java", "kotlin", "javascript", "swift", "ruby", "go", "csharp"]

# Функция для перемешивания букв слова
def shuffle_word(word):
    shuffled = list(word)
    random.shuffle(shuffled)
    return "".join(shuffled)

# Основная функция игры
def play_spacwrd():
    # Выбираем случайное слово из списка
    secretWord = random.choice(wordList)
    # Перемешиваем буквы выбранного слова
    shuffledWord = shuffle_word(secretWord)
    # Устанавливаем количество попыток
    attempts = 5

    # Игровой цикл
    while attempts > 0:
        print(f"Угадай слово: {shuffledWord}")
        # Запрашиваем ввод слова у пользователя
        userGuess = input("Ваш ответ: ").lower()

        # Проверяем, угадано ли слово
        if userGuess == secretWord:
            print("ПОЗДРАВЛЯЮ! Вы угадали слово!")
            return # Завершаем игру в случае победы
        else:
            # Сообщаем о неверном ответе и уменьшаем количество попыток
            attempts -= 1
            print(f"Неверно, осталось попыток: {attempts}")

    # Если попытки закончились выводим сообщение о проигрыше
    print(f"Вы проиграли. Загаданное слово было: {secretWord}")


# Запускаем игру
if __name__ == "__main__":
    play_spacwrd()

"""
Пояснения:
1.  **Импорт модуля `random`**:
    -  `import random`: Импортирует модуль `random`, который используется для выбора случайного слова и перемешивания букв.
2.  **Список слов `wordList`**:
    -   `wordList = ["python", "java", "kotlin", "javascript", "swift", "ruby", "go", "csharp"]`: Определяет список, из которого выбирается слово для игры.
3.  **Функция `shuffle_word(word)`**:
    -   Принимает слово `word` в качестве аргумента.
    -   Преобразует слово в список символов.
    -   Использует `random.shuffle()` для перемешивания символов в списке.
    -   Возвращает перемешанное слово в виде строки.
4.  **Функция `play_spacwrd()`**:
    -   `secretWord = random.choice(wordList)`: Выбирает случайное слово из `wordList` и сохраняет его в `secretWord`.
    -   `shuffledWord = shuffle_word(secretWord)`: Вызывает функцию `shuffle_word` для перемешивания букв загаданного слова.
    -   `attempts = 5`: Устанавливает начальное количество попыток.
5.  **Основной игровой цикл `while attempts > 0:`**:
    -   Цикл продолжается до тех пор, пока у игрока остаются попытки.
    -   `print(f"Угадай слово: {shuffledWord}")`: Выводит перемешанное слово для угадывания.
    -   `userGuess = input("Ваш ответ: ").lower()`: Запрашивает у пользователя ввод и преобразует его в нижний регистр.
    -   **Условие победы**:
        -   `if userGuess == secretWord:`: Проверяет, равно ли введенное слово загаданному.
        -   `print("ПОЗДРАВЛЯЮ! Вы угадали слово!")`: Выводит сообщение о победе.
        -   `return`: Завершает функцию (и игру), если слово угадано.
    -   **Неправильный ответ**:
        -  `else:`: Если слово не угадано.
        -  `attempts -= 1`: Уменьшает количество оставшихся попыток.
        -   `print(f"Неверно, осталось попыток: {attempts}")`: Выводит сообщение о неверном ответе и количестве оставшихся попыток.
6.  **Конец игры**:
    -   `print(f"Вы проиграли. Загаданное слово было: {secretWord}")`: Выводит сообщение о проигрыше и показывает загаданное слово.
7. **Запуск игры**:
    -   `if __name__ == "__main__":`: Этот блок гарантирует, что функция `play_spacwrd()` будет запущена, только если файл исполняется напрямую, а не импортируется как модуль.
    -   `play_spacwrd()`: Вызывает функцию для начала игры.
"""
```