"""
DIAMND:
=================
Сложность: 7
-----------------
Игра DIAMND представляет собой текстовую игру, где игрок пытается нарисовать ромб из звездочек, задавая его высоту.
Игра сначала запрашивает у пользователя нечетную высоту ромба. Затем, если введенное число является нечетным, игра строит ромб из звездочек, используя пробелы для формирования правильной геометрии фигуры. Если введенное число является четным или меньше 1, выводится сообщение об ошибке.
Правила игры:
1. Игрок вводит нечетное число, которое определяет высоту ромба.
2. Если введено четное число или число меньше 1, игра выводит сообщение об ошибке.
3. Если введено корректное (нечетное и больше 0) число, игра выводит на экран ромб из звездочек заданной высоты.
-----------------
Алгоритм:
1. Запросить у пользователя ввод высоты ромба (H).
2. Проверить, является ли H четным или меньше 1. Если да, то вывести сообщение об ошибке и перейти к шагу 1.
3. Если H нечетное и больше 0, то:
   3.1. Установить переменную `space` в H // 2 (целочисленное деление).
   3.2. Установить переменную `stars` в 1.
   3.3. Начать цикл от 1 до H включительно:
      3.3.1. Вывести `space` пробелов.
      3.3.2. Вывести `stars` звездочек.
      3.3.3. Вывести перевод строки.
      3.3.4. Если текущий номер строки меньше H // 2 + 1:
          3.3.4.1. Уменьшить `space` на 1.
          3.3.4.2. Увеличить `stars` на 2.
       3.3.5. Иначе:
          3.3.5.1. Увеличить `space` на 1.
          3.3.5.2. Уменьшить `stars` на 2.
4. Конец игры.
-----------------

"""


# Запрашиваем высоту ромба у пользователя
while True:
    try:
        height = int(input("Введите нечетную высоту ромба (больше 0): "))
        if height > 0 and height % 2 != 0:
            break  # Выходим из цикла, если высота корректна
        else:
            print("Пожалуйста, введите нечетное число больше 0.")
    except ValueError:
        print("Пожалуйста, введите целое число.")


# Инициализируем переменные
spaces = height // 2  # Начальное количество пробелов перед звездочками
stars = 1           # Начальное количество звездочек в первой строке

# Цикл для вывода ромба
for row in range(1, height + 1):
    # Выводим пробелы
    print(" " * spaces, end="")
    # Выводим звездочки
    print("*" * stars)

    # Увеличиваем или уменьшаем количество пробелов и звездочек в зависимости от строки
    if row <= height // 2:
        spaces -= 1
        stars += 2
    else:
        spaces += 1
        stars -= 2

"""
Объяснение кода:
1. **Запрос высоты ромба:**
   - Цикл `while True:`: Бесконечный цикл, который продолжается, пока пользователь не введет корректную высоту ромба.
   - `try...except ValueError:`: Блок для обработки ошибок ввода. Если пользователь вводит не число, то выводится сообщение об ошибке.
   - `height = int(input(...))`: Запрашивает ввод высоты ромба у пользователя и преобразует введенное значение в целое число.
   - `if height > 0 and height % 2 != 0:`: Проверяет, является ли введенное число нечетным и больше нуля. Если да, то `break` выходит из цикла.
   - Если введенное число не соответствует условию, выводится сообщение об ошибке, и цикл продолжается.

2. **Инициализация переменных:**
   - `spaces = height // 2`: Вычисляет начальное количество пробелов перед звездочками, используя целочисленное деление (`//`). 
   - `stars = 1`: Инициализирует количество звездочек в первой строке, равное 1.

3. **Цикл для вывода ромба:**
   - `for row in range(1, height + 1):`: Цикл перебирает строки от 1 до `height` включительно.
   - `print(" " * spaces, end="")`: Выводит нужное количество пробелов перед звездочками в текущей строке. Параметр `end=""` предотвращает автоматический перевод строки.
   - `print("*" * stars)`: Выводит нужное количество звездочек. После этого происходит автоматический перевод на новую строку.
   - `if row <= height // 2:`: Проверяет, находится ли текущая строка в верхней половине ромба (включая середину).
     - `spaces -= 1`: Уменьшает количество пробелов на 1, чтобы ромб расширялся.
     - `stars += 2`: Увеличивает количество звездочек на 2, чтобы ромб расширялся.
   - `else:`: Если текущая строка находится в нижней половине ромба.
     - `spaces += 1`: Увеличивает количество пробелов на 1, чтобы ромб сужался.
     - `stars -= 2`: Уменьшает количество звездочек на 2, чтобы ромб сужался.
"""
