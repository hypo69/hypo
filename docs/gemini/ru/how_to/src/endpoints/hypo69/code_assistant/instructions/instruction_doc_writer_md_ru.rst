Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот блок кода содержит инструкции по созданию документации к коду на Python в формате Markdown.  Документация должна включать заголовки, оглавление, описание классов и функций, включая детали параметров, возвращаемых значений и исключений.  Документация оформляется согласно заданным требованиям.

Шаги выполнения
-------------------------
1. **Анализ входного файла:** Прочитайте предоставленный Python-файл.
2. **Создание заголовков:**  Создайте заголовок первого уровня (#) для названия модуля, заголовки второго уровня (##) для разделов "Обзор", "Классы", "Функции", и т.д.
3. **Добавление описаний:** Для каждого класса и функции создайте описание третьего уровня (###) с кратким описанием.
4. **Форматирование описаний параметров:**  Для параметров в функциях/методах используйте список с описаниями, включая тип данных и значения по умолчанию.
5. **Форматирование возвращаемых значений:**  Аналогично, опишите возвращаемые значения.
6. **Форматирование исключений:**  Опишите возможные исключения, которые может вызвать функция/метод, включая описание ситуации.
7. **Оглавление:**  В самом начале документации создайте раздел оглавления с ссылками на все основные разделы.
8. **Создание Markdown файла:**  Результат сохраните в файле с расширением .md.
9. **Проверка соответствия формату:** Проверьте соответствие созданной документации заданным требованиям.

Пример использования
-------------------------
.. code-block:: python

    # Пример файла my_module.py
    class MyClass:
        """
        Описание класса MyClass
        """
        def my_method(self, param: int) -> str:
            """
            Описание метода my_method
            Args:
                param (int): Описание параметра param.
            Returns:
                str: Описание возвращаемого значения.
            """
            return "Результат"


    def my_function(arg1: str, arg2: int = 0) -> list:
        """
        Описание функции my_function.
        Args:
            arg1 (str):  Описание параметра arg1.
            arg2 (int, optional): Описание параметра arg2. Defaults to 0.
        Returns:
            list: Список.
        Raises:
            TypeError: Описание исключения.
        """
        return [arg1, arg2]

# Пример my_module.md -  результирующий файл документации (частично)
# Название модуля
#
# ## Обзор
#
# Краткое описание модуля my_module
#
# ## Классы
#
# ### MyClass
#
# **Описание**: Краткое описание класса.
#
# **Методы**:
# - `my_method`: Краткое описание метода.
#
# ## Функции
#
# ### `my_function`
#
# **Описание**: Краткое описание функции.
#
# **Параметры**:
# - `arg1` (str): Описание параметра `arg1`.
# - `arg2` (int, optional): Описание параметра `arg2`. По умолчанию `0`.
#
# **Возвращает**:
# - `list`: Список.
#
# **Вызывает исключения**:
# - `TypeError`: Описание ситуации, в которой возникает исключение `TypeError`.