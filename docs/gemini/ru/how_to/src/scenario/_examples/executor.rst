Как использовать модуль executor
========================================================================================

Описание
-------------------------
Модуль `executor` предоставляет функции для выполнения сценариев, обработки файлов сценариев, работы с продуктами и взаимодействия с API PrestaShop.  Этот документ содержит примеры использования функций модуля, включая запуск сценариев из файлов, вставку данных о продуктах и добавление купонов.

Шаги выполнения
-------------------------
Функции модуля позволяют запускать сценарии различными способами:

1. **Запуск списка файлов сценариев (`run_scenario_files`):**
   - Получите список путей к файлам сценариев.
   - Создайте экземпляр класса, представляющего поставщика данных (например, `MockSupplier`).  Этот класс должен содержать информацию о расположении сценариев и прочие необходимые данные.
   - Вызовите функцию `run_scenario_files`, передав в неё экземпляр поставщика и список файлов сценариев.
   - Функция выполняет сценарии в указанном порядке.  Результат выполнения (True/False) указывает, все ли сценарии были успешно выполнены.

2. **Запуск одного файла сценария (`run_scenario_file`):**
   - Получите путь к файлу сценария.
   - Создайте экземпляр класса, представляющего поставщика данных.
   - Вызовите функцию `run_scenario_file`, передав в неё экземпляр поставщика и путь к файлу сценария.
   - Функция выполняет сценарий из указанного файла.  Результат выполнения (True/False) указывает на успех или неудачу выполнения.

3. **Запуск одного сценария (`run_scenario`):**
   - Получите данные сценария. Это должен быть словарь с информацией о сценарии (например, URL, список продуктов).
   - Создайте экземпляр класса, представляющего поставщика данных.
   - Вызовите функцию `run_scenario`, передав в неё экземпляр поставщика и данные сценария.
   - Функция выполняет переданный сценарий. Результат выполнения (True/False) указывает на успех или неудачу.


4. **Вставка данных о продукте в PrestaShop (`insert_grabbed_data`):**
   - Получите данные продукта в формате `ProductFields`.  Эти данные должны содержать информацию о продукте, необходимую для вставки в PrestaShop (например, ссылка на изображения, наименование).
   - Вызовите функцию `insert_grabbed_data`, передав в неё данные продукта.
   - Функция выполняет вставку данных продукта в PrestaShop.

5. **Добавление купона в PrestaShop (`add_coupon`):**
   - Подготовьте необходимые данные для создания купона: учетные данные API PrestaShop, код купона, даты начала и окончания действия.
   - Вызовите функцию `add_coupon`, передав ей подготовленные данные.
   - Функция выполняет добавление купона в PrestaShop.

6. **Асинхронная вставка данных в PrestaShop (`execute_PrestaShop_insert_async`):**
   - Получите данные продукта в формате `ProductFields`.
   - Вызовите функцию `execute_PrestaShop_insert_async`, передав в неё данные продукта.
   - Функция асинхронно выполняет вставку данных в PrestaShop.

7. **Синхронная вставка данных в PrestaShop (`execute_PrestaShop_insert`):**
   - Получите данные продукта в формате `ProductFields`.
   - Вызовите функцию `execute_PrestaShop_insert`, передав в неё данные продукта.
   - Функция выполняет вставку данных в PrestaShop.  Результат выполнения (True/False) указывает на успех или неудачу.


Пример использования
-------------------------
.. code-block:: python

    from pathlib import Path
    from src.scenario.executor import run_scenario_files, run_scenario_file, run_scenario, insert_grabbed_data, execute_PrestaShop_insert
    from src.product import ProductFields
    # ... (импорты других необходимых классов и модулей) ...
    
    # Пример использования run_scenario_files
    supplier = MockSupplier()
    scenario_files = [Path('scenarios/scenario1.json'), Path('scenarios/scenario2.json')]
    result = run_scenario_files(supplier, scenario_files)
    if result:
        print("Все сценарии выполнены успешно.")
    else:
        print("Некоторые сценарии не были выполнены.")

    # ... (другие примеры использования функций) ...