Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет класс `FacebookFields`, предназначенный для работы с полями объявлений и событий Facebook.  Он загружает данные о полях из файла `facebook_fields.json`, расположенного в папке `advertisement/facebok` относительно корня проекта. Если загрузка файла не удается, выводится сообщение об ошибке в лог.  Затем код устанавливает значения полей как атрибуты класса.

Шаги выполнения
-------------------------
1. Импортируются необходимые модули: `Path`, `j_loads` из `src.utils.jjson`, `logger` из `src.logger`, и `gs` из `src`.
2. Определяется класс `FacebookFields`.
3. В методе `__init__` вызывается метод `_payload`.
4. В методе `_payload` происходит загрузка данных из файла `facebook_fields.json`. Путь к файлу формируется с использованием переменной `gs.path.src`.
5. Проверяется, загружены ли данные (`if not data`). Если нет, то выводится сообщение об ошибке в лог и метод возвращает `None`.
6. Если данные загружены успешно, цикл `for` перебирает пары ключ-значение из загруженных данных.
7. Для каждого ключа и значения устанавливается атрибут класса с именем, равным ключу, и значением, равным значению.
8. Метод `_payload` возвращает `True`, если загрузка и установка полей прошла успешно.


Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.endpoints.advertisement.facebook.facebook_fields import FacebookFields

    # Предполагаем, что gs.path.src корректно указывает на путь
    # к корню проекта.
    fields = FacebookFields()

    if fields:
        print(f"Имя поля 'name': {fields.name}")  # Доступ к атрибуту класса
        print(f"Значение поля 'value': {fields.value}") # Доступ к атрибуту класса

    # Обратите внимание, что если загрузка файла не удалась, 
    # то fields будет None.
    # В коде нужно обрабатывать этот случай.