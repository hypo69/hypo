Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код реализует класс `Driver` для работы с веб-драйверами Selenium.  Класс предоставляет унифицированный интерфейс для различных браузеров (Chrome, Firefox, Edge), включая инициализацию драйвера, навигацию по URL, прокрутку страницы, работу с куками, обработку исключений и извлечение HTML-контента.  Он также содержит методы для автоматизированной прокрутки страницы и определения языка страницы.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:** Код импортирует нужные модули, включая `selenium`, `time`, `re`, `Path`, `copy`, `pickle`, и другие, для работы с веб-драйверами и обработкой данных.

2. **Определение констант:**  `MODE = 'dev'` - переменная, вероятно, для определения режима работы (например, разработки или производства).

3. **Определение класса `Driver`:** Класс `Driver` принимает в качестве аргумента `webdriver_cls` (класс веб-драйвера) и дополнительные аргументы для его инициализации.

4. **Инициализация драйвера:** В методе `__init__` создается экземпляр веб-драйвера с использованием переданных аргументов.

5. **Обработка исключений:**  Класс содержит обработку исключений (`WebDriverException`, `InvalidArgumentException` и др.), которые могут возникнуть при работе с драйвером, логируя ошибки в файл.

6. **Методы навигации и прокрутки:** Методы `get_url`, `scroll` позволяют осуществлять навигацию по URL и прокручивать страницу.  Метод `scroll` использует локальную функцию `carousel` для более удобного управления прокруткой.  `get_url` реализует  проверку на корректность URL и состояние загрузки страницы.

7. **Метод для определения языка страницы:** Метод `locale` определяет язык страницы на основе мета-тегов или JavaScript.

8. **Сохранение куки:** Метод `_save_cookies_localy`  сохраняет куки драйвера в локальный файл.

9. **Извлечение HTML-контента:** Метод `fetch_html` извлекает HTML-контент из файла или веб-страницы.  Он умеет обрабатывать различные типы URL (файлы и веб-страницы).

10. **Метод `window_open`:** Открывает новую вкладку и переключается на нее.

11. **Метод `wait`:** Устанавливает задержку.

12. **Метод `__getattr__`:**  Предоставляет прокси-доступ к атрибутам драйвера. Это позволяет использовать методы и атрибуты веб-драйвера через объект класса `Driver`.

13. **`__init_subclass__`:** Метод вызывается при создании подклассов класса `Driver` и проверяет, задано ли `browser_name`.  Если нет, генерируется исключение `ValueError`.


Пример использования
-------------------------
.. code-block:: python

    from selenium.webdriver import Chrome
    from hypotez.src.webdriver.driver import Driver

    driver = Driver(Chrome, executable_path='/path/to/chromedriver')
    success = driver.get_url('https://www.example.com')

    if success:
        print("Страница загружена успешно")
        driver.scroll(scrolls=3, direction='down')
        language = driver.locale
        print(f"Язык страницы: {language}")
        # Далее можно использовать другие методы класса Driver

    driver.quit()