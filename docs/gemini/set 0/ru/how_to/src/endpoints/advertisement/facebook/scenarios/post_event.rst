Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код содержит функции для публикации календарных событий в группах Facebook.  Функции `post_title`, `post_date`, `post_time`, `post_description` и `post_event` отвечают за заполнение и отправку различных полей события.  `post_event` является основной функцией, которая управляет последовательностью действий по публикации. Она использует другие функции для заполнения заголовка, даты, времени и описания события.  В коде используются Selenium для взаимодействия с веб-страницей Facebook и  `SimpleNamespace` для передачи данных об событии.  Локаторы для элементов Facebook берутся из файла `post_event.json`.

Шаги выполнения
-------------------------
1. **Загрузка локаторов:** Функция `post_event` загружает локаторы из файла `post_event.json` с помощью `j_loads_ns` и сохраняет их в переменной `locator`.
2. **Отправка заголовка (post_title):** Функция `post_title` отправляет заголовок события с помощью метода `d.execute_locator`, используя предварительно загруженные локаторы.  Проверяется успешность отправки.
3. **Отправка даты (post_date):** Аналогично, `post_date` отправляет дату события.
4. **Отправка времени (post_time):** Функция `post_time` отправляет время события.
5. **Отправка описания (post_description):** Функция `post_description` отправляет описание события. При этом,  с помощью `d.scroll` происходит прокрутка страницы для поиска элемента описания.
6. **Отправка всей информации (post_event):** Функция `post_event` собирает вместе данные (заголовок, дату, время и описание), полученные из объекта `event` и отправляет их с помощью функций `post_title`, `post_date`, `post_time` и `post_description`.
7. **Нажатие кнопки отправки:**  `post_event` нажимает кнопку отправки с помощью `d.execute_locator`, используя соответствующий локатор.
8. **Ожидание (time.sleep):** Добавлена пауза `time.sleep(30)`, чтобы позволить странице Facebook обработать отправленное событие.


Пример использования
-------------------------
.. code-block:: python

    from src import gs
    from src.webdriver import Driver
    from src.utils import j_loads_ns
    from hypotez.src.endpoints.advertisement.facebook.scenarios.post_event import post_event
    # ... (другие импорты и настройки) ...


    # Предполагаемый экземпляр Driver
    driver = Driver()

    # Создаем объект event
    event = SimpleNamespace(
        title="Тестовое событие",
        start="2024-10-27 10:00",
        description="Описание тестового события",
        promotional_link="https://example.com"
    )


    # Вызов функции для публикации события
    if post_event(driver, event):
        print("Событие успешно опубликовано.")
    else:
        print("Ошибка при публикации события.")

    # ... (закрытие драйвера) ...