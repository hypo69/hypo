Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет класс `BotHandler`, предназначенный для обработки событий телеграм-бота.  Он обрабатывает URL-адреса, полученные от пользователя, в частности, ссылки с сайта OneTab, извлекает из них данные (цену, имя, список ссылок), и запускает сценарий `Mexiron` для дальнейшей обработки этих данных.

Шаги выполнения
-------------------------
1. **Инициализация обработчика:** Создается экземпляр класса `BotHandler` с опциональным параметром `webdriver_name` (по умолчанию 'firefox'), выбирающим используемый веб-драйвер (Chrome, Firefox или Edge).  Обработчик инициализирует объект `Mexiron`, который отвечает за выполнение сценария.  Веб-драйвер выбирается на основе указанного имени.

2. **Обработка URL (метод `handle_url`):**
    a.  Получает текст сообщения пользователя (`update.message.text`).
    b.  Проверяет, начинается ли текст с `https://one-tab.com`, `http://one-tab.com`, `https://www.one-tab.com` или `http://www.one-tab.com`.
    c.  Если условие выполнено, вызывает метод `get_data_from_onetab` для извлечения данных из ссылки OneTab.
    d.  Проверяет, что все извлеченные данные (`price`, `mexiron_name`, `urls`) не равны `None` или `False`.
    e.  Если данные корректны, вызывает метод `run_scenario` у объекта `mexiron` для запуска сценария с полученными данными и объектом `update`.
    f.  Если сценарий успешно выполнился (`return True`), отправляет пользователю сообщение 'Готово! Ссылку я вышлю на WhatsApp'.
    g.  Иначе (если данные некорректны или сценарий не выполнился), отправляет сообщение 'Некорректные данные.' или 'Ошибка. Попробуй ещё раз.'

3. **Извлечение данных из OneTab (метод `get_data_from_onetab`):**
    a. Вызывает вспомогательный метод `fetch_target_urls_onetab` для получения цены, имени и списка ссылок.
    b.  Возвращает извлеченные данные или `False` в случае ошибки.

4. **Извлечение целевых URL (метод `fetch_target_urls_onetab`):**
    a.  Выполняет GET-запрос к URL OneTab.
    b.  Парсит HTML-код полученного ответа с помощью `BeautifulSoup`.
    c.  Извлекает значения `href` из тегов `<a>` с классом `tabLink`, сохраняя их в переменную `urls`.
    d.  Извлекает данные из тега `<div>` с классом `tabGroupLabel`, сохраняя результат в переменную `data`.
    e.  Разбивает данные `data` на цену (`price`) и имя (`mexiron_name`). Цена преобразуется в целое число.
    f.  Возвращает значения `price`, `mexiron_name` и `urls` или `False` в случае ошибки.


Пример использования
-------------------------
.. code-block:: python

    handler = BotHandler(webdriver_name='firefox')
    update = Update.de_json({'message': {'text': 'https://one-tab.com/some/onetab/link'}}, None)
    context = CallbackContext(None)
    asyncio.run(handler.handle_url(update, context))