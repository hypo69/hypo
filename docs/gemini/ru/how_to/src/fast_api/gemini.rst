Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код представляет собой FastAPI приложение, которое обрабатывает запросы на получение ответа от модели Google Generative AI. Он принимает запрос пользователя (prompt) в формате JSON, отправляет его в модель, получает ответ и возвращает его в формате JSON.  Код включает обработку ошибок, возвращая соответствующие статусные коды (400 - если нет prompt, 500 - при возникновении исключения).

Шаги выполнения
-------------------------
1. **Импорт необходимых библиотек:** Код импортирует Flask для создания веб-приложения, `request` и `jsonify` для обработки запросов и ответов в формате JSON, а также класс `GoogleGenerativeAI` для взаимодействия с моделью Google Generative AI.

2. **Инициализация приложения и модели:** Создается Flask приложение (`app`) и объект `ai_model` класса `GoogleGenerativeAI`, который отвечает за взаимодействие с моделью.

3. **Определение маршрута `/ask`:** Определяется маршрут `/ask` с методом POST для обработки запросов.

4. **Получение данных запроса:** Из запроса извлекается поле `prompt`.

5. **Проверка наличия prompt:** Проверяется, что поле `prompt` получено. Если нет, возвращается ошибка с кодом 400.

6. **Вызов модели Google Generative AI:** Если prompt есть, вызывается метод `ask` объекта `ai_model` с переданным prompt.

7. **Обработка ответа модели:** Полученный ответ (`reply`) возвращается в формате JSON с ключом `reply`.

8. **Обработка ошибок:** В блоке `try...except` обрабатываются возможные исключения при взаимодействии с моделью. Если возникла ошибка, возвращается ошибка с кодом 500, содержащая сообщение об ошибке.

9. **Запуск приложения:** При запуске скрипта (если `__name__ == '__main__':`) приложение запускается в отладочном режиме (`debug=True`) на локальном хосте.


Пример использования
-------------------------
.. code-block:: python

    import requests

    # Пример запроса
    url = 'http://127.0.0.1:5000/ask'  # Замените на адрес вашего приложения
    data = {
        "prompt": "Напишите стихотворение о лете."
    }

    try:
        response = requests.post(url, json=data)
        response.raise_for_status()  # Проверка статуса ответа
        result = response.json()
        print(result.get('reply'))
    except requests.exceptions.RequestException as e:
        print(f"Ошибка при отправке запроса: {e}")
    except (KeyError, ValueError) as e:
        print(f"Ошибка при обработке ответа: {e}")