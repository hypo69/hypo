Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот JavaScript код отображает результаты поиска, полученные из расширения браузера (вероятно, TryXPath). Он заполняет элементы HTML с информацией о результатах поиска, включая текст сообщения, заголовок, URL, идентификатор фрейма и другие детали. Код также содержит таблицу результатов и обрабатывает события кликов по кнопкам для фокусировки на конкретных элементах.  Функции `showAllResults`, `makeTextDownloadUrl`, `makeInfoText`, `makeConvertedInfoText` - отвечают за сборку и форматирование выводимой информации.

Шаги выполнения
-------------------------
1. **Обработка события `load`:** Код ожидает события загрузки страницы.
2. **Отправка запроса в расширение:** С помощью `browser.runtime.sendMessage` отправляется запрос на получение результатов поиска.
3. **Получение результатов:** Функция `showAllResults` получает данные о результатах `results` из ответа расширения.
4. **Заполнение элементов HTML:**  Код заполняет значениями `results` элементы HTML с id: `message`, `title`, `url`, `frame-id` и т.д., отображая информацию в веб-странице.
5. **Обработка контекстных данных:** Если имеются контекстные данные (`results.context`), то код заполняет соответствующие элементы HTML: `context-method`, `context-expression`, `context-specified-result-type`, `context-result-type`, `context-resolver` и выводит таблицу `context-detail` с деталями, используя функцию `fu.updateDetailsTable`.
6. **Обработка основных данных:** Если нет контекстных данных, то скрывает соответствующий блок. Заполняются элементы HTML для основных данных (`main`): `main-method`, `main-expression`, `main-specified-result-type`, `main-result-type`, `main-resolver`, `main-count` и выводится таблица `main-details` с деталями, используя функцию `fu.updateDetailsTable`.
7. **Создание ссылок для скачивания:** Создаются ссылки для скачивания информации в текстовом формате (`export-text`, `export-partly-converted`) с использованием функций `makeTextDownloadUrl`, `makeInfoText`, `makeConvertedInfoText`.
8. **Обработка событий кликов:** Вешают обработчики событий кликов на таблицы с данными (`contDetail`, `mainDetails`). При клике на кнопку в таблице, отправляется запрос в расширение с использованием `browser.tabs.sendMessage` для фокусировки на соответствующем элементе. Запрос содержит необходимые данные (id вкладки, идентификатор выполнения и др.).


Пример использования
-------------------------
.. code-block:: javascript
    
    // Пример вызова функции showAllResults
    let results = {
        "message": "Сообщение",
        "title": "Название",
        "href": "http://example.com",
        "frameId": 123,
        "context": {
            "method": "Метод",
            "expression": "Выражение",
            "specifiedResultType": "Тип",
            "resultType": "Тип",
            "resolver": "Резолвер",
            "itemDetail": [...] // данные для таблицы
        },
        "main": {
            "method": "Метод",
            "expression": "Выражение",
            "specifiedResultType": "Тип",
            "resultType": "Тип",
            "resolver": "Резолвер",
            "itemDetails": [...] // данные для таблицы
        }
    };
    
    showAllResults(results);