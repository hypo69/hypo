Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот блок кода представляет собой помощника по Python для анализа входных данных различных форматов (JSON, CSV, XLS, объекты Python) и преобразования их в структурированное содержимое для создания PDF-документов.  Код ожидает на вход переменную `data` содержащую данные для анализа. Он должен определить тип данных, предоставить структурированное представление данных для создания PDF, предложить форматирование для таблиц и списков и оптимизировать выходные данные для профессионального внешнего вида PDF.

Шаги выполнения
-------------------------
1. **Определение типа данных**: Код анализирует переменную `data` и определяет её тип (JSON, CSV, XLS или объект Python).
2. **Структурирование данных**: В зависимости от типа данных, код создаёт структурированное представление. Например, для JSON он может преобразовать его в словарь, для CSV — в таблицу, для XLS — в таблицу с дополнительными характеристиками и т.д.
3. **Предложение форматирования**: Код предлагает конкретные детали форматирования для таблиц и списков: ширину столбцов, размер шрифта, стили. Это делается для оптимизации внешнего вида PDF. Примеры: для таблиц, могут быть указаны требуемые типы данных столбцов, ширина, выравнивание текста, наличие заголовков, границ. Для списков — уровень вложенности, форматирование маркирования и отступы.
4. **Оптимизация для PDF**: Код структурирует данные таким образом, чтобы они легко и эффективно отображались в PDF-документе. Например,  создаётся  представление структуры данных,  используются  разметки для элементов таблиц, списков,  текста,  и прочих элементов.

Пример использования
-------------------------
.. code-block:: python

    import json

    data = '{"name": "John Doe", "age": 30, "city": "New York"}'

    # Пример использования (предполагается, что у вас есть функция для обработки данных)
    processed_data = process_data(data)

    # Предполагаемый пример структуры, которую вернёт process_data
    # (реальный код будет изменять структуру в зависимости от типа data)
    formatted_data = {
        "title": "Data Summary",
        "sections": [
            {
                "type": "table",
                "columns": [
                    {"header": "Field", "width": "20%"},
                    {"header": "Value", "width": "80%"}
                ],
                "rows": [
                    {"Field": "Name", "Value": "John Doe"},
                    {"Field": "Age", "Value": "30"},
                    {"Field": "City", "Value": "New York"},
                ],
                "styles": {
                    "font_size": "12",
                    "table_border": "1px solid black"
                }
            }
        ]
    }
    # ... (Далее код для генерации PDF из formatted_data)