"""
RUSROU:
=================
Сложность: 3
-----------------
Игра "Русская Рулетка" - это простая игра, в которой компьютер имитирует вращение барабана револьвера с одним патроном. Игрок делает выбор между тем, чтобы нажать на курок, или остановиться. Цель игры - избежать выстрела. Если игрок продолжает играть и нажимает на курок в момент когда патрон в барабане, то проигрывает.

Правила игры:
1.  Компьютер имитирует барабан револьвера с шестью каморами, в одну из которых случайным образом помещается патрон.
2.  Игрок решает, нажать на курок ("нажать" или "да") или остановить игру ("нет").
3.  Если игрок решает нажать на курок, то происходит проверка, был ли патрон в текущей каморе.
4.  Если патрон был, игрок проигрывает.
5.  Если патрона не было, игра продолжается, и компьютер имитирует следующее вращение барабана.
6.  Если игрок решает остановить игру, он считается победителем.
-----------------
Алгоритм:
1.  Инициализировать переменную `bullet` случайным числом от 1 до 6 (номер каморы с патроном).
2.  Начать цикл "пока игра не закончена":
    2.1. Спросить игрока, хочет ли он нажать на курок ("нажать" или "да") или остановиться ("нет").
    2.2. Если игрок выбирает "нет", то вывести сообщение о победе и завершить игру.
    2.3. Если игрок выбирает "да", то сгенерировать случайное число от 1 до 6 (текущий номер каморы).
    2.4. Если номер каморы с патроном (`bullet`) совпадает с текущим номером каморы, вывести сообщение о проигрыше и завершить игру.
    2.5. Если номер каморы с патроном (`bullet`) не совпадает с текущим номером каморы, сообщить, что "щелкнуло" и продолжить игру.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeBullet["<p align='left'>Инициализация переменной <code><b>bullet</b></code>:
    <code><b>bullet = random(1, 6)</b></code></p>"]
    InitializeBullet --> LoopStart{"Начало цикла: пока игра не закончена"}
    LoopStart --> InputChoice["Запрос ввода: нажать или нет?"]
    InputChoice -- "Нет" --> OutputWin["Вывод сообщения: <b>YOU'RE SAFE</b>"]
    OutputWin --> End["Конец"]
    InputChoice -- "Да" --> GenerateChamber["<code><b>currentChamber = random(1, 6)</b></code>"]
     GenerateChamber --> CheckChamber{"Проверка: <code><b>currentChamber == bullet?</b></code>"}
    CheckChamber -- Да --> OutputLose["Вывод сообщения: <b>BANG-YOU'RE DEAD</b>"]
    OutputLose --> End
    CheckChamber -- Нет --> OutputClick["Вывод сообщения: <b>CLICK</b>"]
    OutputClick --> LoopStart
```
Legenda:
   Start - Начало игры.
    InitializeBullet - Инициализация переменной `bullet` случайным числом от 1 до 6, представляющим камору с патроном.
    LoopStart - Начало цикла, который продолжается до тех пор, пока игрок не решит остановиться или не проиграет.
    InputChoice - Запрос ввода от игрока: "нажать" или "нет".
    OutputWin - Вывод сообщения "YOU'RE SAFE", если игрок выбирает "нет", и завершение игры.
    End - Конец игры.
    GenerateChamber - Генерация случайного числа `currentChamber` от 1 до 6, представляющего текущую камору.
    CheckChamber - Проверка, совпадает ли `currentChamber` с каморой с патроном `bullet`.
    OutputLose - Вывод сообщения "BANG-YOU'RE DEAD" и завершение игры, если камора с патроном совпала.
    OutputClick - Вывод сообщения "CLICK", если патрон не попался, и продолжение цикла.
"""
import random

# Генерируем случайное число от 1 до 6, которое будет номером каморы с патроном
bullet = random.randint(1, 6)

# Начинаем основной цикл игры
while True:
    # Запрашиваем у пользователя выбор: нажать или нет
    choice = input("Нажать на курок? (да/нет): ").lower()

    # Если пользователь выбирает "нет", то он выигрывает
    if choice == "нет":
        print("Вы в безопасности!")
        break  # Завершаем игру

    # Если пользователь выбирает "да", то продолжаем игру
    if choice == "да":
        # Генерируем случайное число от 1 до 6, которое будет номером текущей каморы
        current_chamber = random.randint(1, 6)

        # Проверяем, попал ли патрон в текущую камору
        if current_chamber == bullet:
            print("БАХ-Вы мертвы!")  # Если попал, то игрок проигрывает
            break  # Завершаем игру
        else:
            print("Щелчок")  # Если не попал, то игра продолжается
    else:
         print("Некорректный ввод. Пожалуйста, введите 'да' или 'нет'.")

"""
Объяснение кода:

1.  **Импорт модуля `random`:**
    -   `import random`: Импортирует модуль `random`, который используется для генерации случайных чисел.
2.  **Инициализация положения патрона:**
    -   `bullet = random.randint(1, 6)`: Генерирует случайное целое число от 1 до 6, представляющее номер каморы, в которой находится патрон. Эта переменная хранит "заряженную" камору.
3.  **Основной игровой цикл:**
    -   `while True:`: Бесконечный цикл, который продолжается до тех пор, пока игра не закончится (игрок не решит остановиться или не проиграет).
    -   **Запрос выбора у игрока:**
        -   `choice = input("Нажать на курок? (да/нет): ").lower()`: Запрашивает у пользователя ввод (нажать или нет) и переводит ввод в нижний регистр для упрощения сравнения.
    -   **Условие победы (выбор "нет"):**
        -   `if choice == "нет":`: Если игрок вводит "нет", то он выигрывает.
        -   `print("Вы в безопасности!")`: Выводит сообщение о победе.
        -   `break`: Завершает цикл, то есть игра заканчивается.
    -   **Условие продолжения игры (выбор "да"):**
        -   `if choice == "да":`: Если игрок вводит "да", то игра продолжается.
        -   `current_chamber = random.randint(1, 6)`: Генерирует случайное целое число от 1 до 6, представляющее номер текущей каморы.
        -   **Проверка проигрыша:**
            -   `if current_chamber == bullet:`: Проверяет, совпадает ли номер текущей каморы с номером каморы, в которой находится патрон.
            -   `print("БАХ-Вы мертвы!")`: Если камора с патроном совпала, то игрок проигрывает и выводится сообщение о проигрыше.
            -   `break`: Завершает цикл, то есть игра заканчивается.
        -   **Продолжение игры:**
            -   `else:`: Если патрон не был в текущей каморе.
            -   `print("Щелчок")`: Выводится сообщение, что патрона не было и игра продолжается.
    -   **Обработка некорректного ввода:**
        - `else:`:  Если ввод не "да" и не "нет"
        - `print("Некорректный ввод. Пожалуйста, введите 'да' или 'нет'.")`: Выводится сообщение о некорректном вводе.
"""
