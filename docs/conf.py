import json
import os
import sys
import fnmatch

# -----------------------------------------------------------------------------------
# Загрузка данных проекта из файла settings.json
# -----------------------------------------------------------------------------------
try:
    # Открываем файл settings.json в режиме чтения
    with open('../src/settings.json', 'r') as settings_file:
        # Загружаем содержимое файла как JSON
        settings = json.load(settings_file)
        # Извлекаем значения по ключам с установкой значений по умолчанию
        _project_name = settings.get("project_name", "hypotez")
        _copyright = settings.get("copyright", "2024, hypo69")
        _release = settings.get("release", "2024, hypo69")
        _author = settings.get("author", "2024, hypo69")
except (FileNotFoundError, json.JSONDecodeError):
    # Устанавливаем значения по умолчанию в случае ошибки
    _project_name = "hypotez"
    _copyright = "2024, hypo69"
    _release = "2024, hypo69"
    _author = "2024, hypo69"

# -----------------------------------------------------------------------------------
# Информация о проекте
# -----------------------------------------------------------------------------------
project = _project_name       # Название проекта
copyright = _copyright         # Авторские права
author = _author               # Автор проекта
release = _release             # Версия релиза проекта

# -----------------------------------------------------------------------------------
# Общая конфигурация Sphinx
# -----------------------------------------------------------------------------------
extensions = [
    'sphinx.ext.autodoc',        # Включение расширения autodoc для автогенерации документации из docstring'ов
]

templates_path = ['_templates']  # Путь к директории с шаблонами
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']  # Шаблоны файлов и папок для исключения

# -----------------------------------------------------------------------------------
# Список доступных тем
# -----------------------------------------------------------------------------------
available_themes = {
    'sphinx_rtd_theme': 'Read the Docs',
    'alabaster': 'Alabaster',
    'sphinxdoc': 'Sphinxdoc',
    'traditional': 'Traditional',
    # Добавьте другие доступные темы по мере необходимости
}

# Выбор темы (можно изменить по умолчанию)
default_theme = 'sphinx_rtd_theme'  # Тема оформления по умолчанию
html_theme = available_themes.get(default_theme, default_theme)  # Получаем тему из списка

# -----------------------------------------------------------------------------------
# Настройки HTML-вывода
# -----------------------------------------------------------------------------------
html_static_path = ['_static']    # Путь к директории со статическими файлами (CSS, изображения и т.д.)

# -----------------------------------------------------------------------------------
# Добавление пути к исходному коду проекта
# -----------------------------------------------------------------------------------
sys.path.insert(0, os.path.abspath('../src'))  # Добавляем путь к папке 'src' для автодокументации

# -----------------------------------------------------------------------------------
# Функция для игнорирования файлов с определёнными шаблонами
# -----------------------------------------------------------------------------------
def skip_files(app, what, name, obj, skip, options):
    """
    Функция-обработчик события 'autodoc-skip-member'.
    Используется для игнорирования членов документации, соответствующих определённым шаблонам.

    Args:
        app: Объект приложения Sphinx
        what: Тип документации (например, 'module', 'class', 'exception', 'function', 'method', 'attribute')
        name: Имя члена документации
        obj: Объект члена документации
        skip: Логическое значение, указывающее, следует ли пропустить этот член по умолчанию
        options: Опции автодокументации

    Returns:
        bool: True, если член должен быть пропущен; иначе возвращает значение `skip`
    """
    # Проверяем, содержит ли имя члена круглые скобки или соответствует другим шаблонам
    if fnmatch.fnmatch(name, '*(*.*)') or fnmatch.fnmatch(name, '*(*).*'):
        return True  # Пропускаем этот член документации
    return skip  # Возвращаем исходное решение Sphinx о пропуске

# -----------------------------------------------------------------------------------
# Подключение функции игнорирования к событию Sphinx
# -----------------------------------------------------------------------------------
def setup(app):
    """
    Функция настройки, которая подключает функцию `skip_files` к событию `autodoc-skip-member`.

    Args:
        app: Объект приложения Sphinx
    """
    app.connect('autodoc-skip-member', skip_files)  # Подключаем обработчик событий
