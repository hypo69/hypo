"""
BINGO:
=================
Сложность: 4
-----------------
Игра "Бинго" - это простая игра, в которой на игровом поле 5x5 размещены случайные числа от 1 до 75, за исключением центрального квадрата, который помечен как "FREE". Игрок выбирает номера, пока не соберет линию из пяти отмеченных чисел по горизонтали, вертикали или диагонали.
Цель игры - как можно быстрее получить "БИНГО".

Правила игры:
1. Генерируется игровая доска 5x5 с числами от 1 до 75, без повторений.
2. Центральный квадрат поля - "FREE"
3. Выводится игровая доска на экран.
4. Игрок по очереди вводит число.
5. Если введенное число есть на игровой доске, оно отмечается.
6. После каждого ввода проверяется, есть ли на доске линии из пяти отмеченных чисел (горизонталь, вертикаль или диагональ).
7. Если линия есть, то игра заканчивается с сообщением о выигрыше, если нет, то игра продолжается.
8. Игра завершается, когда игрок соберет "БИНГО".
-----------------
Алгоритм:
1.  Инициализация игровой доски: 
    1.1 Создать пустую игровую доску 5x5.
    1.2 Заполнить доску случайными числами от 1 до 75 (без повторений), за исключением центрального квадрата, который отмечается как "FREE".
2. Вывести игровую доску на экран.
3. Начать цикл "пока не БИНГО":
    3.1 Запросить у игрока ввод числа.
    3.2 Проверить, есть ли введенное число на игровой доске.
    3.3 Если число есть, отметить его на игровой доске.
    3.4 Проверить, есть ли линия из пяти отмеченных чисел (горизонталь, вертикаль или диагональ).
    3.5 Если есть, вывести сообщение "БИНГО!" и закончить игру.
    3.6 Если нет, перейти к началу цикла.
4. Конец игры.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeBoard["Инициализация игровой доски 5x5 с числами от 1 до 75 (центральная ячейка FREE)"]
    InitializeBoard --> DisplayBoard["Вывод игровой доски"]
    DisplayBoard --> LoopStart{"Начало цикла: пока не БИНГО"}
    LoopStart -- Да --> InputNumber["Ввод числа пользователем"]
    InputNumber --> CheckNumber{"Проверка: есть ли число на доске?"}
    CheckNumber -- Да --> MarkNumber["Отметить число на доске"]
    MarkNumber --> CheckBingo{"Проверка: есть ли БИНГО?"}
    CheckBingo -- Да --> OutputWin["Вывод сообщения: БИНГО!"]
    OutputWin --> End["Конец"]
    CheckBingo -- Нет --> DisplayBoard
    CheckNumber -- Нет --> DisplayBoard
    LoopStart -- Нет --> End
```

Legenda:
    Start - Начало программы.
    InitializeBoard - Инициализация игровой доски 5x5 с числами от 1 до 75 (центральная ячейка FREE).
    DisplayBoard - Вывод игровой доски на экран.
    LoopStart - Начало цикла, который продолжается, пока не достигнуто БИНГО.
    InputNumber - Запрос у пользователя ввода числа.
    CheckNumber - Проверка, есть ли введенное число на игровой доске.
    MarkNumber - Отметить введенное число на доске.
    CheckBingo - Проверка, есть ли на доске линия из пяти отмеченных чисел (горизонталь, вертикаль или диагональ).
    OutputWin - Вывод сообщения "БИНГО!", если есть линия из пяти отмеченных чисел.
    End - Конец программы.
"""
```python
import random

def create_bingo_board():
    """
    Создает игровую доску Бинго 5x5 с уникальными числами от 1 до 75.
    Центральная ячейка помечена как "FREE".

    Returns:
        list of lists: Игровая доска Бинго.
    """
    numbers = random.sample(range(1, 76), 24) # Выбираем 24 уникальных числа от 1 до 75
    board = []
    for i in range(5):
        row = numbers[i*5 : (i+1)*5] # Разделяем список чисел на строки
        board.append(row)
    board[2][2] = "FREE" # Устанавливаем центральную ячейку в "FREE"
    return board


def display_board(board, marked):
    """
    Выводит на экран игровую доску Бинго.

    Args:
        board (list of lists): Игровая доска.
        marked (list of lists): Матрица отмеченных ячеек, где True означает ячейку отмечена, False - нет.
    """
    print("---------------------")
    for i, row in enumerate(board):
        for j, cell in enumerate(row):
            if marked[i][j]:
                print(f"{'X':^3}", end=" ")
            else:
                 print(f"{str(cell):^3}", end=" ")
        print()
    print("---------------------")


def check_bingo(board, marked):
    """
    Проверяет, есть ли Бинго на игровой доске.

    Args:
        board (list of lists): Игровая доска.
        marked (list of lists): Матрица отмеченных ячеек.

    Returns:
         bool: True, если есть Бинго, иначе False.
    """
    # Проверка горизонталей
    for row in marked:
        if all(row):
            return True

    # Проверка вертикалей
    for col in range(5):
        if all(marked[row][col] for row in range(5)):
            return True

    # Проверка диагоналей
    if all(marked[i][i] for i in range(5)) or all(marked[i][4-i] for i in range(5)):
        return True

    return False


def play_bingo():
    """
    Функция запуска игры Бинго.
    """
    board = create_bingo_board() # Создаем игровую доску
    marked = [[False for _ in range(5)] for _ in range(5)]  # Создаем матрицу для отметки чисел
    marked[2][2] = True # Отмечаем центральную ячейку "FREE"

    while True: # Главный игровой цикл
        display_board(board, marked)  # Выводим доску на экран

        try:
          number = int(input("Введите число (1-75): ")) # Запрашиваем ввод числа
        except ValueError:
          print ("Неверный ввод, введите целое число от 1 до 75")
          continue

        found = False
        for i in range(5): # Ищем число на доске
            for j in range(5):
                if board[i][j] == number: # Если число найдено, то отмечаем его
                    marked[i][j] = True
                    found = True
                    break
            if found:
                break

        if not found:
             print("Число не найдено на доске.") # Выводим сообщение, если число не найдено

        if check_bingo(board, marked): # Проверяем, есть ли БИНГО
             display_board(board, marked) # Выводим доску на экран
             print("БИНГО!") # Выводим сообщение о выигрыше
             break


if __name__ == "__main__":
    play_bingo()

```
"""
Пояснения:
1.  **Импорт модуля `random`**:
   -  `import random`: Импортирует модуль `random`, который используется для генерации случайных чисел.

2.  **Функция `create_bingo_board()`**:
    -   `numbers = random.sample(range(1, 76), 24)`: Генерирует 24 случайных уникальных числа в диапазоне от 1 до 75.
    -   Создает пустую доску `board`, представляющую собой список списков.
    -   Цикл for заполняет доску числами из списка `numbers` в порядке слева-направо сверху-вниз.
    -   `board[2][2] = "FREE"`: устанавливает центральную ячейку доски в значение "FREE".
    -   Возвращает доску `board`.

3.  **Функция `display_board(board, marked)`**:
    -   Принимает доску `board` и матрицу отмеченных ячеек `marked`.
    -   Проходит циклом по каждой ячейке доски, выводит значение ячейки, или "X" если ячейка отмечена.

4.  **Функция `check_bingo(board, marked)`**:
    -   Принимает доску `board` и матрицу отмеченных ячеек `marked`.
    -   Проверяет наличие БИНГО по горизонтали, вертикали и двум диагоналям.
    -   Возвращает `True`, если БИНГО найдено, и `False` в противном случае.

5.  **Функция `play_bingo()`**:
    -   Создает игровую доску БИНГО, вызывая функцию `create_bingo_board()`.
    -   Создает матрицу marked, помечает центральную ячейку как отмеченную.
    -   Запускает бесконечный игровой цикл `while True:`
        -   Выводит игровую доску на экран, вызывая функцию `display_board`.
        -   Запрашивает ввод числа у игрока, обрабатывает ошибки ввода.
        -   Поиск введенного числа в доске
        -   Если число найдено, то ставит пометку в матрице marked
        -   Если число не найдено, выводит сообщение об этом.
        -   Проверяет, не собрано ли БИНГО с помощью функции `check_bingo`. Если БИНГО есть, выводит доску и сообщение о победе, затем завершает игру.
        -  Если БИНГО нет, то цикл продолжается.
        
6.  **Запуск игры**:
   -   `if __name__ == "__main__":`: Этот блок гарантирует, что функция `play_bingo()` будет запущена, только если файл исполняется напрямую, а не импортируется как модуль.
   -    `play_bingo()`: Вызывает функцию для начала игры.
"""
```
