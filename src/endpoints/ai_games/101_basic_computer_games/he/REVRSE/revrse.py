<REVRSE>:
=================
קושי: 4
-----------------
המשחק "REVRSE" הוא משחק מילים פשוט בו המחשב מבקש מהמשתמש להזין מחרוזת טקסט. לאחר מכן, המחשב הופך את סדר התווים במחרוזת ומציג את המחרוזת ההפוכה. המשחק ממשיך עד שהמשתמש מזין מחרוזת ריקה.

חוקי המשחק:
1. המחשב מבקש מהמשתמש להזין מחרוזת טקסט.
2. המחשב הופך את סדר התווים במחרוזת שהוזנה.
3. המחשב מציג למשתמש את המחרוזת ההפוכה.
4. המשחק ממשיך עד שהמשתמש מזין מחרוזת ריקה.
-----------------
אלגוריתם:
1. התחל לולאה אינסופית.
2. בתוך הלולאה, בקש מהמשתמש להזין מחרוזת.
3. אם המחרוזת שהוזנה ריקה, צא מהלולאה.
4. הפוך את סדר התווים במחרוזת.
5. הצג את המחרוזת ההפוכה למשתמש.
6. המשך לולאה עד שהמחרוזת ריקה.
-----------------
תרשים זרימה:
```mermaid
flowchart TD
    Start["התחלה"] --> LoopStart{"תחילת לולאה אינסופית"}
    LoopStart --> InputString["קלט מחרוזת מהמשתמש: <code><b>inputString</b></code>"]
    InputString --> CheckEmpty{"בדיקה: <code><b>inputString ריקה?</b></code>"}
    CheckEmpty -- כן --> End["סוף"]
    CheckEmpty -- לא --> ReverseString["הפיכת סדר התווים במחרוזת: <code><b>reversedString</b></code>"]
    ReverseString --> OutputReversed["הצגת המחרוזת ההפוכה: <code><b>reversedString</b></code>"]
    OutputReversed --> LoopStart
```

Legenda:
    Start - התחלת התוכנית.
    LoopStart - תחילת הלולאה האינסופית, שתמשיך עד שהמשתמש יזין מחרוזת ריקה.
    InputString - קלט מחרוזת מהמשתמש ושמירתה במשתנה `inputString`.
    CheckEmpty - בדיקה האם המחרוזת שהוזנה ריקה.
    End - סוף התוכנית (אם המחרוזת ריקה).
    ReverseString - הפיכת סדר התווים במחרוזת ושמירת התוצאה במשתנה `reversedString`.
    OutputReversed - הצגת המחרוזת ההפוכה למשתמש.
"""

"""
הסברים:
הקוד מממש משחק פשוט בשם "REVRSE", שבו המשתמש מזין מחרוזות, והתוכנית הופכת ומציגה אותן בסדר הפוך. המשחק נמשך עד שהמשתמש מזין מחרוזת ריקה.
licence:MIT(../licence)
"""
# לולאה אינסופית המאפשרת למשתמש להמשיך להזין מחרוזות עד שיזין מחרוזת ריקה
while True:
    # בקשת קלט מהמשתמש להזין מחרוזת
    input_string = input("הזן מחרוזת (או הקש Enter לסיום): ")
    
    # בדיקה האם המחרוזת שהוזנה ריקה
    if not input_string:
        # אם המחרוזת ריקה, יוצאים מהלולאה וסיום המשחק
        break
    
    # הפיכת סדר התווים במחרוזת
    reversed_string = input_string[::-1]
    
    # הצגת המחרוזת ההפוכה למשתמש
    print("המחרוזת ההפוכה:", reversed_string)

"""
הסבר מפורט לקוד:
1.  **לולאה אינסופית `while True:`**:
    - לולאה זו מאפשרת למשתמש להמשיך להזין מחרוזות ולהפוך אותן, עד שיזין מחרוזת ריקה.
2.  **קבלת קלט מהמשתמש**:
    - `input_string = input("הזן מחרוזת (או הקש Enter לסיום): ")`: מציגה הודעה למשתמש ומאפשרת לו להזין מחרוזת. הקלט נשמר במשתנה `input_string`.
3.  **בדיקה האם המחרוזת ריקה**:
    - `if not input_string:`: בדיקה אם המחרוזת שהמשתמש הזין ריקה. מחרוזת ריקה בפייתון נחשבת ל-`False` בבדיקה בוליאנית.
4.  **יציאה מהלולאה**:
    - `break`: אם המחרוזת ריקה, הפקודה `break` מפסיקה את הלולאה האינסופית, ובכך המשחק מסתיים.
5.  **הפיכת סדר התווים במחרוזת**:
    - `reversed_string = input_string[::-1]`: שימוש ב-slicing כדי להפוך את סדר התווים במחרוזת. `[::-1]` יוצר עותק הפוך של המחרוזת, והוא נשמר במשתנה `reversed_string`.
6.  **הצגת הפלט**:
    - `print("המחרוזת ההפוכה:", reversed_string)`: מציגה למשתמש את המחרוזת ההפוכה.
"""
