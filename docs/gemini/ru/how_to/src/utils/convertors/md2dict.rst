Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код представляет собой функцию `md2dict`, которая преобразует строку Markdown в структурированный словарь.  Функция умеет извлекать JSON объекты, если они присутствуют в строке Markdown.  Если JSON не найден, она парсит Markdown в словарь, где ключами являются заголовки, а значениями — список строк текста под соответствующим заголовком.

Шаги выполнения
-------------------------
1. **Извлечение JSON:** Функция `extract_json_from_string` пытается найти JSON-объект в переданной строке Markdown. Если JSON-объект найден, он парсится с помощью `eval` и возвращается. Если JSON не обнаружен, возвращается `None`.

2. **Обработка Markdown:** Если JSON не найден, функция `markdown` из модуля `markdown2` преобразует строку Markdown в HTML.

3. **Разделение на секции:** Алгоритм итерируется по строкам полученного HTML. Если строка соответствует заголовку (тегу h1-h6), функция определяет уровень заголовка и, если уровень 1, создаёт новую секцию в словаре. В остальных случаях, текст заголовка добавляется в текущую секцию.

4. **Очистка текста:** Текст, извлечённый из HTML, очищается от HTML-тегов с помощью регулярного выражения.

5. **Возврат результата:** В результате функции возвращается словарь, где ключи – заголовки, а значения – списки строк текста, соответствующие этим заголовкам.  Если был найден JSON, возвращается словарь с ключом "json" и значением извлеченного JSON.


Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.utils.convertors.md2dict import md2dict

    markdown_text = """
    # Заголовок 1
    Это текст под заголовком 1.

    ## Заголовок 2
    Это текст под заголовком 2.
    
    ```json
    {"key": "value"}
    ```
    """

    result = md2dict(markdown_text)
    print(result)