Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код реализует класс `ReportGenerator`, предназначенный для генерации отчетов в HTML и PDF форматах.  Класс использует данные из JSON-файла, шаблон HTML (Jinja2) и библиотеку `pdfkit` для преобразования HTML в PDF.  Он предоставляет методы для генерации HTML, сохранения его в файл, генерации PDF и запуска полного процесса создания отчета. Функция `main` демонстрирует использование класса для генерации отчетов по заданному мехирону и языку.


Шаги выполнения
-------------------------
1. **Инициализация:** Создается экземпляр класса `ReportGenerator()`. Этот класс настраивает среду Jinja2 для работы с шаблоном HTML, который находится по умолчанию в папке `src/endpoints/kazarinov/react/templates/template.html`.
2. **Загрузка данных:** Функция `main` загружает данные из JSON-файла, расположенного в подпапке `ru.json` по отношению к базовому пути `base_path`.  Файл `ru.json` должен содержать данные, необходимые для заполнения шаблона HTML.
3. **Генерация HTML:** Метод `generate_html` класса `ReportGenerator` использует загруженные данные и шаблон HTML для генерации HTML-контента. Он использует Jinja2 для подстановки данных в шаблон.
4. **Сохранение HTML:** Метод `save_text_file` сохраняет сгенерированный HTML-контент в файл, заданный переменной `html_file`.
5. **Генерация PDF:** Метод `create_report` использует библиотеку `pdfkit` для преобразования HTML-контента в PDF.  Функция `save_pdf_pdfkit` из вспомогательного модуля `PDFUtils` выполняет преобразование.
6. **Сохранение PDF:** Результат преобразования сохраняется в файл, указанный переменной `pdf_file`.
7. **Обработка ошибок:**  В коде присутствует обработка ошибок при преобразовании HTML в PDF. Если преобразование не удалось, происходит логирование ошибки.
8. **Вызов функции main:** Функция `main` вызывает `create_report` для запуска всего процесса, передавая данные, пути к файлам HTML и PDF. В основной части скрипта `if __name__ == "__main__":` вызывается функция `main` с аргументами `mexiron` (имя мехирона) и `lang` (язык).

Пример использования
-------------------------
.. code-block:: python

    import gs
    from pathlib import Path
    from src.endpoints.kazarinov.react.pricelist_generator import main
    
    # Укажите базовый путь к данным мехирона
    mexiron_name = "24_12_01_03_18_24_269"
    base_path = gs.path.external_storage / 'kazarinov' / 'mexironim' / mexiron_name
    
    # Укажите язык (например, 'ru')
    lang = 'ru'
    
    # Проверьте, что папки существуют
    if not base_path.exists():
        base_path.mkdir(parents=True, exist_ok=True)
        
    # Создайте тестовый json файл (в реальном коде он загружается из базы данных)
    data = {"name": "Мехирон", "items": [{"name": "Товар 1", "price": 100}, {"name": "Товар 2", "price": 200}]}
    (base_path / 'ru.json').write_text(json.dumps(data, ensure_ascii=False, indent=4), encoding='utf-8')
    

    
    result = main(mexiron_name, lang)
    if result:
        print(f"Отчёт успешно сгенерирован для {mexiron_name} на языке {lang}")
    else:
        print(f"Ошибка при генерации отчёта для {mexiron_name}")