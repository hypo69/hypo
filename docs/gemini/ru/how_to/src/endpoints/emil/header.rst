Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root()`, которая находит корневую директорию проекта, начиная с текущей директории файла.  Он ищет указанные маркерные файлы (pyproject.toml, requirements.txt, .git) в родительских директориях, пока не найдет директорию, содержащую хотя бы один из них.  Затем, если корневая директория не содержится в системном пути, она добавляется в него.  Код также загружает настройки из файла settings.json и документ README.MD, если они существуют.  Наконец, он извлекает из настроек значения для имени проекта, версии, документации, деталей, автора, авторских прав и ссылки на пожертвования.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек**: Импортируются модули `sys`, `json`, `packaging.version`, `pathlib`.

2. **Определение функции `set_project_root`**:  Определяется функция, которая ищет корневую директорию проекта.
   - Функция принимает кортеж `marker_files` с именами файлов/директорий, которые указывают на корень проекта.
   - Начинает поиск с текущей директории.
   - Итерируется по родительским директориям, проверяя наличие маркеров.
   - Если маркер найден, функция сохраняет путь к родительской директории в переменной `__root__` и прерывает цикл.
   - Если корневая директория не найдена, возвращает текущую директорию.
   - Если корневая директория не в `sys.path`, добавляет её в начало.
   - Возвращает найденную корневую директорию.


3. **Получение корневой директории проекта**: Вызов функции `set_project_root()` для получения пути к корневой директории и сохранение его в переменной `__root__`.

4. **Загрузка настроек**: Попытка загрузить настройки из файла `gs.path.root / 'src' / 'settings.json'`. Если файл не найден или некорректно отформатирован, обработка исключения.

5. **Чтение документации (README.MD)**: Попытка прочитать документ README.MD из файла `gs.path.root / 'src' / 'README.MD'`. При ошибках, обработка исключений.

6. **Извлечение настроек**: Извлечение значений имени проекта, версии, документации, деталей, автора, авторских прав и ссылки на пожертвования из загруженных настроек.  Если настройки не найдены, используются значения по умолчанию.


Пример использования
-------------------------
.. code-block:: python

    # Пример предполагает, что модуль gs и его атрибут path уже определены в проекте.
    import sys
    from pathlib import Path
    from hypotez.src.endpoints.emil.header import set_project_root


    # Предположим, что вы находитесь в каталоге проекта.
    # Если нет, скорректируйте path в соответствии с вашей структурой.
    project_root = set_project_root()

    print(f"Корневая директория проекта: {project_root}")

    # Доступ к извлеченным данным:
    print(f"Имя проекта: {__project_name__}")
    print(f"Версия: {__version__}")
    print(f"Документация: {__doc__}")