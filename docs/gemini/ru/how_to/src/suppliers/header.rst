Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневой каталог проекта, начиная от текущей директории.  Он ищет файлы или каталоги-маркеры (например, `pyproject.toml`, `requirements.txt`, `.git`),  и возвращает путь к каталогу, содержащему хотя бы один из этих маркеров. Если такой каталог не найден, возвращает текущую директорию.  Затем устанавливает найденный путь в `sys.path` для корректного импорта модулей из других каталогов проекта.  Также код загружает настройки из файла `settings.json` и, при наличии, содержание `README.MD` в переменные, используемые в дальнейшем для получения метаданных проекта.

Шаги выполнения
-------------------------
1. **Инициализация:** Код определяет корневую директорию проекта, используя функцию `set_project_root`.
2. **Поиск файла настроек:**  Проверяет существование файла `settings.json` в корневой директории проекта.
3. **Загрузка настроек:** Если файл найден, код загружает данные из него в словарь `settings` с помощью `json.load()`. При этом обрабатываются возможные ошибки `FileNotFoundError` и `json.JSONDecodeError`.
4. **Поиск README:** Проверяет существование файла `README.MD` в корневой директории проекта.
5. **Чтение README:** Если файл `README.MD` найден, его содержимое считывается в переменную `doc_str`. Если файл не найден или есть ошибки чтения, `doc_str` остаётся None.
6. **Получение метаданных:**  Считывает метаданные проекта (`project_name`, `version`, `author`, `copyright`, `cofee`) из словаря `settings` или использует значения по умолчанию, если `settings` не найдены или в нём не указаны значения.
7. **Добавление пути в sys.path:** Если корневой каталог проекта не присутствует в `sys.path`, он добавляется.
8. **Возвращение пути:** Возвращает путь к корневой директории проекта.


Пример использования
-------------------------
.. code-block:: python

    import os
    from pathlib import Path

    # Предполагая, что у вас есть директория проекта с файлом settings.json и README.MD
    # например:
    # myproject/
    #  ├── src/
    #  │   └── settings.json
    #  │   └── README.MD
    #  └── pyproject.toml

    current_dir = Path(__file__).resolve().parent
    # Изменяем текущую директорию на директорию с исходным кодом
    os.chdir(current_dir)

    from hypotez.src.suppliers.header import set_project_root, __root__

    # Находим корневой каталог проекта
    root_dir = set_project_root()
    print(f"Корневой каталог: {root_dir}")

    # Проверяем наличие метаданных проекта
    print(f"Имя проекта: {__project_name__}")
    print(f"Версия: {__version__}")
    print(f"Документация: {__doc__}")