"""
KING:
=================
Сложность: 6
-----------------
Игра "Король" - это игра в слова, где игроки по очереди называют слова, начинающиеся с последней буквы предыдущего слова.
Игра продолжается до тех пор, пока один из игроков не сдастся или не сможет назвать слово.

Правила игры:
1.  Игрок 1 вводит любое слово.
2.  Игрок 2 должен ввести слово, начинающееся с последней буквы слова игрока 1.
3.  Игроки по очереди вводят слова, соблюдая правило первой буквы.
4.  Игра заканчивается, когда игрок вводит '0' или если не может подобрать слово.
-----------------
Алгоритм:
1. Вывести приглашение для первого игрока.
2. Ввести первое слово.
3. Установить текущего игрока в 2.
4. Начать цикл, пока не конец игры:
    4.1. Вывести приглашение для текущего игрока.
    4.2. Ввести новое слово.
    4.3. Если новое слово равно '0', то перейти к шагу 7.
    4.4. Если первая буква нового слова не равна последней букве предыдущего слова, то вывести сообщение об ошибке.
    4.5. Если игрок ввел верное слово, то:
         4.5.1. Установить предыдущее слово в текущее слово.
         4.5.2. Переключить текущего игрока.
5. Вывести сообщение о конце игры.
6. Вывести сообщение о победе предыдущего игрока.
7. Конец игры.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InputFirstWord["Ввод первого слова от игрока 1"]
    InputFirstWord --> SetCurrentPlayer["<code><b>currentPlayer = 2</b></code>"]
    SetCurrentPlayer --> GameLoopStart{"Начало цикла игры"}
    GameLoopStart -- "Да" --> InputWord["Ввод слова от <code><b>currentPlayer</b></code>"]
    InputWord --> CheckQuit{"Проверка: <code><b>word == '0'?</b></code>"}
    CheckQuit -- Да --> GameOver["Конец игры"]
    CheckQuit -- Нет --> CheckFirstLetter{"Проверка: <code><b>firstLetter(word) == lastLetter(previousWord)?</b></code>"}
    CheckFirstLetter -- Нет --> OutputError["Вывод ошибки: <b>INCORRECT WORD</b>"]
    OutputError --> GameLoopStart
    CheckFirstLetter -- Да --> UpdatePreviousWord["<code><b>previousWord = word</b></code>"]
    UpdatePreviousWord --> SwitchPlayer["<code><b>currentPlayer = 3 - currentPlayer</b></code>"]
     SwitchPlayer --> GameLoopStart
    GameLoopStart -- "Нет" --> OutputEndMessage["Вывод: <b>GAME OVER</b>"]
    OutputEndMessage --> OutputWinner["Вывод победителя: <b>Player {3 - currentPlayer} WINS!</b>"]
    OutputWinner --> End["Конец"]
```
Legenda:
    Start - Начало программы.
    InputFirstWord - Запрос ввода первого слова от игрока 1.
    SetCurrentPlayer - Установка текущего игрока в 2.
    GameLoopStart - Начало основного игрового цикла.
    InputWord - Запрос ввода слова от текущего игрока.
    CheckQuit - Проверка, введено ли слово '0' для завершения игры.
    GameOver - Завершение игры.
    CheckFirstLetter - Проверка, совпадает ли первая буква введенного слова с последней буквой предыдущего слова.
    OutputError - Вывод сообщения об ошибке, если слово неверное.
    UpdatePreviousWord - Обновление предыдущего слова текущим словом.
    SwitchPlayer - Переключение текущего игрока.
    OutputEndMessage - Вывод сообщения о завершении игры.
    OutputWinner - Вывод победителя игры.
    End - Конец программы.
"""

# Инициализация начальных переменных
previousWord = ""
currentPlayer = 1

# Запрос первого слова
previousWord = input("Игрок 1, введите первое слово: ").strip() # удаляем пробелы
currentPlayer = 2 # переключаемся на второго игрока

# Начинаем игру
while True:
    currentWord = input(f"Игрок {currentPlayer}, введите слово: ").strip() # удаляем пробелы

    # Проверка на выход из игры
    if currentWord == '0':
        print("Игра окончена.")
        break

    # Проверка первой буквы
    if previousWord and currentWord[0].lower() != previousWord[-1].lower():
        print("Неверное слово, первая буква должна совпадать с последней буквой предыдущего слова.")
        continue

    # Подготовка к следующему ходу
    previousWord = currentWord
    currentPlayer = 3 - currentPlayer  # переключаем игрока

print(f"Игрок {3 - currentPlayer} победил!")

"""
Объяснение кода:
1. **Инициализация переменных**:
   -  `previousWord = ""`: Переменная для хранения последнего введенного слова. Изначально пустая строка.
   -  `currentPlayer = 1`: Переменная для хранения номера текущего игрока. Начинаем с игрока 1.
2. **Запрос первого слова**:
   -  `previousWord = input("Игрок 1, введите первое слово: ").strip()`: Запрашивает у игрока 1 ввод первого слова и сохраняет его в `previousWord`, обрезая пробелы в начале и конце.
   -  `currentPlayer = 2`: Переключает текущего игрока на игрока 2.
3. **Основной игровой цикл**:
    -  `while True:`: Начинается бесконечный цикл, который продолжается до тех пор, пока один из игроков не введет '0'.
    - `currentWord = input(f"Игрок {currentPlayer}, введите слово: ").strip()`: Запрашивает у текущего игрока ввод слова, сохраняя его в `currentWord`, обрезая пробелы в начале и конце.
   -  **Проверка выхода**:
      -  `if currentWord == '0':`: Проверяет, ввел ли игрок '0'. Если да, то игра завершается.
      - `print("Игра окончена.")`: Выводит сообщение об окончании игры.
      -  `break`: Завершает цикл.
   - **Проверка первой буквы**:
      -   `if previousWord and currentWord[0].lower() != previousWord[-1].lower():`: Проверяет, совпадает ли первая буква текущего слова с последней буквой предыдущего слова (без учета регистра).
      -   `print("Неверное слово, первая буква должна совпадать с последней буквой предыдущего слова.")`: Выводит сообщение об ошибке, если проверка не прошла.
      -   `continue`: Переходит к следующей итерации цикла.
   -   **Подготовка к следующему ходу**:
      - `previousWord = currentWord`: Обновляет `previousWord` текущим словом.
      - `currentPlayer = 3 - currentPlayer`: Переключает текущего игрока (если был игрок 1, то станет игрок 2, и наоборот).
4. **Объявление победителя**:
    - `print(f"Игрок {3 - currentPlayer} победил!")`: Выводит сообщение о победе предыдущего игрока (так как переключение на следующего игрока уже произошло).
"""
