# CHIEF:
=================
קושי: 4
-----------------
המשחק "CHIEF" הוא משחק ניחושים בו המחשב בוחר מספר אקראי בין 1 ל-100, והשחקן מנסה לנחש את המספר. המשחק מספק רמזים: "נמוך מדי" או "גבוה מדי" כדי לעזור לשחקן למצוא את המספר הנכון. המטרה היא לנחש את המספר בכמה שפחות ניסיונות.

חוקי המשחק:
1. המחשב בוחר מספר אקראי שלם בין 1 ל-100.
2. השחקן מזין מספר ניחוש.
3. המחשב מגיב "TOO LOW" אם הניחוש נמוך מהמספר האמיתי, או "TOO HIGH" אם הניחוש גבוה מהמספר האמיתי.
4. המשחק נמשך עד שהשחקן מנחש את המספר הנכון.
5. בסוף המשחק מוצגת הודעת ניצחון המציינת את מספר הניסיונות.
-----------------
אלגוריתם:
1. אתחל את מספר הניסיונות (numberOfGuesses) ל-0.
2. הגרל מספר שלם אקראי (targetNumber) בין 1 ל-100.
3. התחל לולאה "כל עוד לא נוחש":
   3.1. הגדל את מספר הניסיונות (numberOfGuesses) ב-1.
   3.2. קבל קלט מהמשתמש - מספר ניחוש (userGuess).
   3.3. אם מספר הניחוש שווה למספר המטרה:
       3.3.1. הצג הודעת ניצחון המציינת את מספר הניסיונות וסיים את המשחק.
   3.4. אם מספר הניחוש קטן ממספר המטרה:
       3.4.1. הצג "TOO LOW"
   3.5. אם מספר הניחוש גדול ממספר המטרה:
      3.5.1 הצג "TOO HIGH"
-----------------
תרשים זרימה:
```mermaid
flowchart TD
    Start["התחלה"] --> InitializeVariables["<p align='left'>אתחול משתנים:
    <code><b>
    numberOfGuesses = 0
    targetNumber = random(1, 100)
    </b></code></p>"]
    InitializeVariables --> LoopStart{"תחילת לולאה: כל עוד לא נוחש"}
    LoopStart -- כן --> IncreaseGuesses["<code><b>numberOfGuesses = numberOfGuesses + 1</b></code>"]
    IncreaseGuesses --> InputGuess["קלט מספר מהמשתמש: <code><b>userGuess</b></code>"]
    InputGuess --> CheckGuess{"בדיקה: <code><b>userGuess == targetNumber?</b></code>"}
    CheckGuess -- כן --> OutputWin["הצגת הודעה: <b>YOU GOT IT IN <code>{numberOfGuesses}</code> GUESSES!</b>"]
    OutputWin --> End["סוף"]
    CheckGuess -- לא --> CheckLow{"בדיקה: <code><b>userGuess < targetNumber?</b></code>"}
    CheckLow -- כן --> OutputLow["הצגת הודעה: <b>TOO LOW</b>"]
    OutputLow --> LoopStart
    CheckLow -- לא --> OutputHigh["הצגת הודעה: <b>TOO HIGH</b>"]
    OutputHigh --> LoopStart
	LoopStart -- לא --> End
```
Legenda:
    Start - תחילת המשחק.
    InitializeVariables - אתחול משתנים: `numberOfGuesses` מתחיל מ-0, ו-`targetNumber` הוא מספר אקראי בין 1 ל-100.
    LoopStart - תחילת הלולאה, שתמשיך כל עוד המספר לא נוחש.
    IncreaseGuesses - הגדלת מספר הניסיונות ב-1.
    InputGuess - קליטת ניחוש מהמשתמש.
    CheckGuess - בדיקה אם הניחוש נכון.
    OutputWin - הצגת הודעת ניצחון ומספר הניסיונות.
    End - סיום המשחק.
    CheckLow - בדיקה אם הניחוש קטן מהמספר הנכון.
    OutputLow - הצגת הודעה "TOO LOW".
    OutputHigh - הצגת הודעה "TOO HIGH".
"""
import random

def play_chief_game():
    """
    משחק ניחוש מספרים בו המחשב בוחר מספר אקראי והשחקן מנסה לנחש אותו.
    """

    # 1. אתחול מספר הניסיונות
    numberOfGuesses = 0
    # 2. יצירת מספר אקראי בין 1 ל-100
    targetNumber = random.randint(1, 100)

    # 3. לולאת משחק ראשית
    while True:
        # 3.1 הגדלת מספר הניסיונות
        numberOfGuesses += 1
        # 3.2 קבלת קלט מהמשתמש - ניחוש
        try:
            userGuess = int(input("נסה לנחש מספר בין 1 ל-100: "))
        except ValueError:
            print("אנא הזן מספר שלם.")
            continue  # חזרה לתחילת הלולאה אם הקלט לא תקין

        # 3.3 בדיקה אם הניחוש נכון
        if userGuess == targetNumber:
            # 3.3.1 הצגת הודעת ניצחון
            print(f"כל הכבוד! ניחשת את המספר ב-{numberOfGuesses} ניסיונות!")
            break  # יציאה מהלולאה לאחר ניצחון

        # 3.4 בדיקה אם הניחוש נמוך מדי
        elif userGuess < targetNumber:
            # 3.4.1 הצגת רמז "נמוך מדי"
            print("TOO LOW")
        # 3.5 בדיקה אם הניחוש גבוה מדי
        else:
             # 3.5.1 הצגת רמז "גבוה מדי"
            print("TOO HIGH")

if __name__ == "__main__":
    play_chief_game()
"""
הסברים:
1. **ייבוא המודול `random`**:
   - `import random`: מייבא את המודול random, שמאפשר יצירת מספרים אקראיים.

2. **הגדרת הפונקציה `play_chief_game()`**:
   - `def play_chief_game():`: מגדיר פונקציה המכילה את כל לוגיקת המשחק.

3. **אתחול משתנים**:
   - `numberOfGuesses = 0`: מאתחל את מספר הניסיונות ל-0. משתנה זה יעקוב אחר מספר הפעמים שהמשתמש ניסה לנחש את המספר.
   - `targetNumber = random.randint(1, 100)`: יוצר מספר אקראי שלם בין 1 ל-100, זה המספר שהמשתמש צריך לנחש.

4. **לולאת המשחק `while True:`**:
   - לולאה אינסופית שרצה עד שהמשתמש מנחש את המספר הנכון.
   - `numberOfGuesses += 1`: מגדיל את מונה הניסיונות בכל סיבוב של הלולאה.
   - **קליטת קלט מהמשתמש**:
     - `try...except ValueError:`: בלוק try-except מטפל בשגיאות קלט, למשל אם המשתמש מזין טקסט במקום מספר. אם הקלט לא תקין, מוצגת הודעת שגיאה והמשחק ממשיך לסיבוב הבא.
     - `userGuess = int(input("נסה לנחש מספר בין 1 ל-100: "))`: מבקש מהמשתמש להזין ניחוש וממיר אותו למספר שלם.
   - **בדיקת הניחוש**:
     - `if userGuess == targetNumber:`: בודק אם הניחוש שווה למספר האקראי.
       - אם כן: מודפסת הודעת ניצחון, ומספר הניסיונות שהמשתמש ביצע מוצג. הלולאה מסתיימת בעזרת `break`.
     - `elif userGuess < targetNumber:`: אם הניחוש נמוך מהמספר האקראי, מוצג הרמז "TOO LOW".
     - `else:`: אם הניחוש לא נכון ולא קטן מהמספר האקראי (כלומר הוא גדול מהמספר האקראי), מוצג הרמז "TOO HIGH".

5. **הפעלת המשחק**:
   - `if __name__ == "__main__":`: בלוק שמוודא שהקוד בתוכו ירוץ רק כאשר הקובץ מורץ ישירות ולא כשמייבאים אותו.
   - `play_chief_game()`: קריאה לפונקציה כדי להתחיל את המשחק.

הקוד בנוי בצורה פשוטה עם הערות מפורטות כדי שיהיה קל להבנה למתחילים. הוא משתמש בלולאה ובתנאים, שהם אבני יסוד של תכנות, ומספק חווית משחק אינטראקטיבית.
"""
