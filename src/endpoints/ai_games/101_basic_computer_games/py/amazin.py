"""
<AMAZIN>:
=================
Сложность: 3
-----------------
Игра "Удивительные числа" представляет собой простую числовую головоломку. Игрок выбирает максимальное число, а затем программа случайным образом генерирует число в этом диапазоне. Игроку дается несколько попыток, чтобы угадать задуманное число. После каждой попытки программа сообщает, больше или меньше загаданное число, чем введенное игроком.
Правила игры:
1. Игрок вводит максимальное число для диапазона.
2. Программа загадывает случайное число в диапазоне от 1 до максимального числа.
3. Игрок вводит свое предположение о загаданном числе.
4. Программа сообщает, больше или меньше загаданное число, чем предположение игрока.
5. Игрок имеет ограниченное количество попыток.
6. Если игрок угадывает число, игра заканчивается с сообщением о победе.
7. Если игрок не угадывает число за отведенное количество попыток, игра заканчивается с сообщением о проигрыше и загаданном числе.
-----------------
Алгоритм:
1. Вывести приветствие и предложение ввести максимальное число.
2. Запросить у пользователя максимальное число (max_number).
3. Сгенерировать случайное число (target_number) в диапазоне от 1 до max_number.
4. Задать количество попыток (number_of_guesses) равным 7.
5. Вывести сообщение о том, что нужно угадать число.
6. Начать цикл, повторяющийся пока количество попыток больше 0:
7. Запросить у пользователя предположение (player_guess).
8. Уменьшить количество попыток на 1.
9. Если предположение совпадает с загаданным числом, вывести сообщение о победе и выйти из цикла.
10. Если предположение меньше загаданного числа, вывести сообщение "Слишком мало".
11. Если предположение больше загаданного числа, вывести сообщение "Слишком много".
12. Если количество попыток становится равным 0, вывести сообщение о проигрыше и загаданное число, и выйти из цикла.
13. Завершить игру.
-----------------
Блок-схема: 
```mermaid
graph TD
    Start[Начало игры] --> InputMaxNumber[Ввод максимального числа];
    InputMaxNumber --> GenerateTargetNumber[Генерация случайного числа];
    GenerateTargetNumber --> SetGuesses[Установка количества попыток = 7];
    SetGuesses --> OutputGuessMessage[Сообщение о необходимости угадать число];
    OutputGuessMessage --> GuessLoopStart{Цикл: Попытки > 0?};
    GuessLoopStart -- Да --> InputGuess[Ввод предположения игрока];
    InputGuess --> DecreaseGuesses[Уменьшить количество попыток на 1];
    DecreaseGuesses --> CheckGuess{Предположение == Загаданное число?};
    CheckGuess -- Да --> OutputWin[Сообщение о победе];
    OutputWin --> End[Конец игры];
    CheckGuess -- Нет --> CheckLess{Предположение < Загаданное число?};
    CheckLess -- Да --> OutputTooLow[Сообщение "Слишком мало"];
    OutputTooLow --> GuessLoopStart;
    CheckLess -- Нет --> CheckMore{Предположение > Загаданное число?};
    CheckMore -- Да --> OutputTooHigh[Сообщение "Слишком много"];
    OutputTooHigh --> GuessLoopStart;
    CheckMore -- Нет --> CheckGuessesZero{Количество попыток == 0?};
    CheckGuessesZero -- Да --> OutputLose[Сообщение о проигрыше и загаданное число];
    OutputLose --> End;
    GuessLoopStart -- Нет --> CheckGuessesZero
  
```
"""
import random

def play_amazing_game():
    """
    Функция запускает игру "Удивительные числа".
    """

    print("Привет! Давай поиграем в Удивительные числа.")

    # Запрашиваем у пользователя максимальное число для диапазона
    while True:
        try:
            max_number = int(input("Введи максимальное число: "))
            if max_number <= 0:
                print("Пожалуйста, введите положительное число больше 0.")
            else:
                break
        except ValueError:
            print("Пожалуйста, введите целое число.")

    # Генерируем случайное число в диапазоне от 1 до max_number
    target_number = random.randint(1, max_number)

    # Устанавливаем количество попыток
    number_of_guesses = 7
    print(f"Я загадал число от 1 до {max_number}. Попробуй его угадать!")

    # Начинаем игровой цикл
    while number_of_guesses > 0:
        try:
            # Запрашиваем у пользователя предположение
            player_guess = int(input(f"У тебя осталось {number_of_guesses} попыток. Введи свое предположение: "))
            # Уменьшаем количество попыток
            number_of_guesses -= 1
            
            # Проверяем предположение игрока
            if player_guess == target_number:
                print("Ты угадал! Поздравляю!")
                break # выход из цикла
            elif player_guess < target_number:
                print("Слишком мало.")
            else:
                print("Слишком много.")
        except ValueError:
            print("Пожалуйста, введи целое число.")


    # Если попытки закончились, сообщаем о проигрыше и показываем загаданное число
    if number_of_guesses == 0:
        print(f"Увы, попытки закончились. Загаданное число было {target_number}.")

if __name__ == "__main__":
    play_amazing_game()
"""
Пояснения:
1.  **`import random`**: Импортирует модуль `random` для генерации случайных чисел.
2.  **`play_amazing_game()`**: Главная функция, запускающая игру.
3.  **`print("Привет! Давай поиграем в Удивительные числа.")`**: Выводит приветствие.
4.  **`while True:`**: Начинает бесконечный цикл для запроса максимального числа, пока не будет введено корректное значение.
5.  **`try...except ValueError`**: Обрабатывает ошибку, если пользователь вводит не целое число.
6.  **`max_number = int(input("Введи максимальное число: "))`**: Запрашивает максимальное число и преобразует его в целое число.
7.  **`if max_number <= 0:`**: Проверяет, является ли число положительным.
8.  **`break`**: Выход из бесконечного цикла, если введенное число корректно.
9.  **`target_number = random.randint(1, max_number)`**: Генерирует случайное число в диапазоне от 1 до `max_number`.
10. **`number_of_guesses = 7`**: Устанавливает начальное количество попыток.
11. **`print(f"Я загадал число от 1 до {max_number}. Попробуй его угадать!")`**: Выводит сообщение о загаданном числе.
12. **`while number_of_guesses > 0:`**: Начинает основной игровой цикл, пока есть попытки.
13. **`player_guess = int(input(f"У тебя осталось {number_of_guesses} попыток. Введи свое предположение: "))`**: Запрашивает предположение игрока и уменьшает количество попыток.
14. **`number_of_guesses -= 1`**: Уменьшает количество попыток на 1.
15. **`if player_guess == target_number:`**: Проверяет, угадал ли игрок число.
16. **`print("Ты угадал! Поздравляю!")`**: Выводит сообщение о победе.
17. **`break`**: Выход из цикла, если игрок угадал число.
18. **`elif player_guess < target_number:`**: Проверяет, меньше ли предположение загаданного числа.
19. **`print("Слишком мало.")`**: Выводит сообщение "Слишком мало".
20. **`else:`**: Если предположение больше загаданного числа.
21. **`print("Слишком много.")`**: Выводит сообщение "Слишком много".
22. **`if number_of_guesses == 0:`**: Проверяет, закончились ли попытки.
23. **`print(f"Увы, попытки закончились. Загаданное число было {target_number}.")`**: Выводит сообщение о проигрыше и загаданное число.
24. **`if __name__ == "__main__":`**: Проверяет, что скрипт запущен как основная программа.
25. **`play_amazing_game()`**: Запускает игру.
licence:MIT(../licence)
"""
__author__ = 'hypo69 (hypo69@davidka.net)'
```