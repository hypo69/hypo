Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код реализует класс `FacebookPromoter`, предназначенный для автоматической промоции продуктов и мероприятий AliExpress в группах Facebook.  Он использует WebDriver для взаимодействия с браузером, обрабатывает рекламные кампании, избегает дублирования и управляет интервалом между промоциями в каждой группе. Код загружает данные о группах из файлов JSON, определяет, какие категории или события нужно продвигать, а затем публикует их в выбранных группах, соблюдая заданный интервал.

Шаги выполнения
-------------------------
1. **Инициализация:** Создается экземпляр класса `FacebookPromoter`. При этом требуется передать:
    - `d`: Экземпляр `Driver` (WebDriver), который используется для управления браузером.
    - `promoter`: Строка, определяющая источник данных для промоции (например, 'aliexpress').
    - `group_file_paths`: Список путей к файлам JSON, содержащим данные о Facebook группах. По умолчанию используется список файлов из заданной директории.
    - `no_video`: Флаг, указывающий на необходимость пропуска видео в постах.

2. **Загрузка данных о группах:**  Метод `get_filenames` или `group_file_paths` использует для загрузки данных о группах, которые хранятся в файлах JSON.

3. **Проверка интервала:** Перед публикацией в каждой группе метод `check_interval` проверяет, истек ли установленный интервал времени для размещения новых сообщений.  Если интервал не истек,  продвижение в этой группе пропускается.

4. **Выбор категории/события:**  Метод `get_category_item` выбирает категорию или событие для продвижения в зависимости от кампании и указанного источника.  Он выбирает случайный элемент из списка категорий или событий.  Используется логика случайного перемешивания, чтобы избежать  преимущественного продвижения первых элементов в списке.

5. **Проверка на дублирование:**  Код проверяет, не была ли данная категория или событие уже продвинута в группе. Если уже была, пропуск.

6. **Проверка соответствия языка/валюты:** Проверяет, что язык и валюта группы соответствуют заданным параметрам. Если не соответствуют, пропускает группу.

7. **Продвижение (promote):**  Метод `promote` продвигает категорию или событие в группе. В зависимости от типа контента используется `post_message` или `post_event`, а также проверяется на ошибку.

8. **Обновление данных о продвижении:** Метод `update_group_promotion_data` обновляет данные о группе, записывая информацию о последней отправленной промоции и продвинутых категориях/событиях в файл JSON.

9. **Обработка групп (process_groups):** Метод `process_groups` последовательно обрабатывает все группы, полученные из файлов JSON.

10. **Запуск кампаний (run_campaigns):** Метод `run_campaigns` запускает продвижение для каждой кампании, переданной в качестве аргумента.  Он циклически проходит по списку кампаний и обрабатывает группы, связанные с этой кампанией.

11. **Завершение (stop):** Метод `stop` закрывает WebDriver.


Пример использования
-------------------------
```python
import os
from src.webdriver import Driver, Chrome
from src.utils import j_loads_ns

# ... (подключение других необходимых модулей)

# Предполагаем, что у вас есть данные о группах в файлах group1.json, group2.json и т.д.
group_files = ["ru_usd.json", "usa.json"]

# Создайте экземпляр Driver
driver = Driver(Chrome())

# Инициализируйте FacebookPromoter
promoter = FacebookPromoter(d=driver, promoter='aliexpress', group_file_paths=group_files, no_video=False)

# Запустите промоцию для кампаний
promoter.run_campaigns(campaigns=["campaign1"], group_file_paths=group_files)

# ... (добавьте обработку ошибок и закрытия драйвера)

promoter.stop()
```
```
```

**Важно:**  В примере предполагается, что у вас есть необходимые файлы с данными о группах и кампаниях в формате JSON, а также установлены необходимые библиотеки (например, `selenium`).  Необходимо также правильно настроить пути к файлам и параметры для корректного функционирования кода.