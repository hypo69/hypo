Как использовать этот блок кода
=========================================================================================\n

Описание
-------------------------
Этот блок кода содержит набор вспомогательных функций для тестирования модуля `tinytroupe`.  Функции предназначены для проверки различных аспектов взаимодействия агентов, стимулов и действий в среде TinyWorld, а также для проверки предложений с помощью LLM.  Включает функции для проверки наличия определенных типов действий или стимулов, проверки завершения диалога определенным действием, проверки истинности утверждений и удаления файлов.  Также содержит фикстуры для создания тестовых сред.

Шаги выполнения
-------------------------
1. **Импорт необходимых модулей:** Код импортирует необходимые модули, включая `os`, `sys`, `time`, `openai_utils`, `TinyPerson`, `TinyWorld`, `TinySocialNetwork`, `pytest`, `importlib` и `tinytroupe.examples`. Пути к модулям добавляются в `sys.path` для корректного поиска.

2. **Кэширование API OpenAI:** Функция `force_api_cache` включает кэширование API OpenAI для оптимизации тестирования.

3. **Функции проверки:** Функции `contains_action_type`, `contains_action_content`, `contains_stimulus_type`, `contains_stimulus_content` проверяют наличие действий или стимулов определенного типа или содержания в списках.

4. **Функция проверки завершения:** Функция `terminates_with_action_type` проверяет, завершается ли последовательность действий заданным типом действия.

5. **Функция проверки предложений:** Функция `proposition_holds` проверяет истинность предложения, используя вызов LLM.

6. **Функции для работы с текстом:** Функции `only_alphanumeric` и `create_test_system_user_message` предназначены для очистки текста и создания сообщений для LLM соответственно.

7. **Функции для сравнения конфигураций агентов:** Функция `agents_configs_are_equal` сравнивает конфигурации двух агентов,  позволяя игнорировать определенные ключи в сравнении.

8. **Функции для I/O операций:** Функции `remove_file_if_exists`, `get_relative_to_test_path` позволяют управлять файлами и получать пути к тестовым файлам.

9. **Фикстуры:** Фикстуры `focus_group_world` и `setup` создают и настраивают тестовые среды для работы с агентами и мирами.


Пример использования
-------------------------
.. code-block:: python

    import pytest
    from hypotez.src.ai.tiny_troupe.TinyTroupe.tests.testing_utils import contains_action_type, focus_group_world

    def test_contains_action_type(focus_group_world):
        # Предположим, что actions - это список действий, полученных в результате взаимодействия агентов в среде.
        actions = [
            {"action": {"type": "greet"}},
            {"action": {"type": "ask"}},
            {"action": {"type": "respond"}}
        ]

        # Проверить, содержит ли список действий действие типа "greet".
        assert contains_action_type(actions, "greet") == True

        # Проверить, содержит ли список действий действие типа "sleep".
        assert contains_action_type(actions, "sleep") == False

    # Пример использования фикстуры focus_group_world
    def test_focus_group_world(focus_group_world):
        assert focus_group_world.name == "Focus group"