Как использовать системную инструкцию в модели Gemini
========================================================================================

Описание
-------------------------
Этот фрагмент кода демонстрирует, как задать системную инструкцию при инициализации модели Gemini. Системная инструкция — это указание (промт), которое передается модели при ее создании и остается неизменным в течение всего ее существования.  Она задает общий контекст для всех запросов, отправляемых к модели в рамках одного экземпляра.

Шаги выполнения
-------------------------
1. **Импортировать необходимые модули**:  Проверьте, что у вас есть необходимые библиотеки для работы с моделью Gemini.
2. **Инициализировать модель**:  Создайте экземпляр модели, передавая необходимые параметры, включая `system_instruction`.
   - `api_key`:  Ключ API для доступа к сервису.
   - `model_name`:  Название модели (если требуется).
   - `generation_config`:  Настройки для генерации (если нужны).
   - `system_instruction`: Строковое значение, содержащее системную инструкцию.  Это значение останется неизменным для всех запросов к этой модели.


3. **Отправить запрос к модели**:  После создания экземпляра, вы можете использовать методы модели для отправки запросов,  которые будут выполняться в контексте заданной системной инструкции.

Пример использования
-------------------------
.. code-block:: python

    from typing import Optional, Dict
    # Предположим, что вы импортировали нужные классы из библиотеки Gemini

    # Пример системной инструкции
    system_instruction = """Будь вежливым и предоставь краткий, но информативный ответ."""

    try:
        # Инициализируем модель, используя системную инструкцию
        model = Gemini(
            api_key="YOUR_API_KEY",
            system_instruction=system_instruction,
        )

        # Теперь можно использовать модель для запросов, которые будут
        # исполняться с заданной инструкцией

        response = model.generate_text(prompt="Расскажите про себя")
        print(response)
    except Exception as e:
        print(f"Произошла ошибка: {e}")