"""
<HORSES>:
=================
Сложность: 3
-----------------
Игра "Скачки" - это простая текстовая игра, в которой игрок делает ставку на одну из шести лошадей, а затем наблюдает за скачками, пока одна из них не пересечет финишную линию. Скорость каждой лошади генерируется случайным образом. Выигрывает лошадь, сделавшая наибольшее число скачков за раунд.
-----------------
Правила игры:
1. Игроку предлагается выбрать одну из шести лошадей, введя ее номер от 1 до 6.
2. Игрок делает ставку на выбранную лошадь.
3. Происходит забег, в котором каждая лошадь перемещается случайным образом.
4. Выигрывает лошадь, которая первой достигнет финиша.
5. Результат забега сообщается игроку. Если игрок поставил на выигрышную лошадь, то он выигрывает.
-----------------
Алгоритм:
1. Инициализация:
   - Установить длину дистанции (finishLine) в 15.
   - Инициализировать массив positions, содержащий текущую позицию каждой из 6 лошадей, все позиции начинаются с 0.
   - Инициализировать массив names с именами лошадей.
2. Вывод на экран:
  - Вывести заголовок игры.
  - Вывести имена лошадей с номерами.
3. Запрос ввода:
  - Запросить у игрока номер лошади, на которую он делает ставку (playerChoice).
  - Запросить у игрока размер ставки (playerBet).
4. Игровой цикл:
  - Пока ни одна из лошадей не достигла финиша:
    - Для каждой лошади:
      - Сгенерировать случайное число (jumpDistance) от 1 до 3.
      - Увеличить позицию текущей лошади на это число.
  - Определение победителя:
     - Найти лошадь с максимальной позицией (winnerHorse).
5. Результат:
   - Вывести имя лошади-победителя.
   - Сравнить номер выбранной лошади игроком с номером победившей лошади.
   - Вывести сообщение о выигрыше или проигрыше игрока.
-----------------
Блок-схема:
```mermaid
graph TD
    Start(Начало) --> Initialize(Инициализация игры: finishLine = 15, positions = [0, 0, 0, 0, 0, 0], names = ["Bess","Bill","Jane","Dolly","Harry","Pat"]);
    Initialize --> DisplayHorses(Вывести имена и номера лошадей);
    DisplayHorses --> InputChoice(Запросить выбор лошади (playerChoice));
    InputChoice --> InputBet(Запросить ставку (playerBet));
    InputBet --> StartRace(Начать забег);
    StartRace --> CheckFinish(Проверить, достигла ли хоть одна лошадь финиша?);
    CheckFinish -- Нет --> MoveHorses(Переместить лошадей);
    MoveHorses --> CheckFinish;
    CheckFinish -- Да --> FindWinner(Определить лошадь-победителя (winnerHorse));
    FindWinner --> DisplayWinner(Вывести имя победителя);
    DisplayWinner --> CheckPlayerWin(Сравнить выбор игрока с победителем);
    CheckPlayerWin -- Выиграл --> OutputWin(Вывести сообщение о выигрыше);
    CheckPlayerWin -- Проиграл --> OutputLose(Вывести сообщение о проигрыше);
    OutputWin --> End(Конец);
    OutputLose --> End;
```
"""
import random

def horses_game():
    """
    Игра "Скачки".
    """
    # 1. Инициализация
    finish_line = 15  # Длина дистанции
    horse_positions = [0, 0, 0, 0, 0, 0] # Позиция каждой из 6 лошадей.
    horse_names = ["Bess", "Bill", "Jane", "Dolly", "Harry", "Pat"] # Имена лошадей

    # 2. Вывод на экран
    print("==================")
    print("     СКАЧКИ     ")
    print("==================")
    for i, name in enumerate(horse_names): # Выводим имена лошадей с номерами.
        print(f"{i+1}. {name}")

    # 3. Запрос ввода
    while True:
      try:
        player_choice = int(input("Выберите лошадь (1-6): ")) - 1  # Номер выбранной лошади.
        if 0 <= player_choice <= 5:
          break
        else:
           print("Неверный ввод. Пожалуйста, выберите номер от 1 до 6")
      except ValueError:
          print("Неверный ввод. Пожалуйста, введите целое число.")


    while True:
      try:
        player_bet = int(input("Введите вашу ставку: "))  # Размер ставки.
        if player_bet > 0:
          break
        else:
          print("Ставка должна быть больше 0")
      except ValueError:
        print("Неверный ввод. Пожалуйста, введите целое число")

    # 4. Игровой цикл
    race_finished = False # Флаг окончания забега
    while not race_finished:
        for i in range(len(horse_positions)): # Для каждой лошади
            jump_distance = random.randint(1, 3) # Случайное перемещение.
            horse_positions[i] += jump_distance # Обновляем позицию лошади
            if horse_positions[i] >= finish_line:
              race_finished = True
    # 5. Определение победителя
    winner_horse = horse_positions.index(max(horse_positions)) # Индекс лошади с максимальной позицией.

    # 6. Результат
    print("==================")
    print(f"Победила лошадь: {horse_names[winner_horse]}!") # Выводим имя победителя
    if player_choice == winner_horse: # Проверяем, выиграл ли игрок.
        print(f"Вы выиграли {player_bet}!")
    else:
        print("Вы проиграли.")
    print("==================")


if __name__ == "__main__":
    horses_game()
"""
Пояснения:
    1.  Инициализация:
        - `finish_line`: задает длину дистанции в 15 позиций.
        - `horse_positions`: список, хранящий текущую позицию каждой из 6 лошадей, изначально все лошади находятся на старте (позиция 0).
        - `horse_names`: список имен лошадей.
    2. Вывод на экран:
       - Выводится заголовок игры.
       - Затем выводятся имена лошадей с порядковыми номерами для удобства выбора игроком.
    3. Запрос ввода:
       - Игрок вводит номер лошади, на которую он хочет поставить (индекс вычисляется путем вычитания 1, поскольку отсчет индексов в списке начинается с 0)
       - Игрок вводит размер ставки, которую он хочет сделать.
    4. Игровой цикл:
      - Цикл while выполняется до тех пор, пока забег не закончен. Это определяется флагом race_finished
      - В цикле перебираются все лошади, для каждой лошади генерируется случайное число от 1 до 3, которое добавляется к ее текущей позиции.
      - После каждого перемещения лошадей проверяется, не достигла ли какая-либо из них финишной линии. Если да, то флаг race_finished устанавливается в True, что прерывает цикл.
    5. Определение победителя:
       - Определяем победителя, находя индекс лошади с максимальной позицией в списке `horse_positions`.
    6. Результат:
       - Выводится имя победившей лошади.
       - Сравнивается выбор игрока с номером победившей лошади.
       - Выводится сообщение о выигрыше или проигрыше игрока.

licence:MIT(../licence)
"""
__author__ = 'hypo69 (hypo69@davidka.net)'