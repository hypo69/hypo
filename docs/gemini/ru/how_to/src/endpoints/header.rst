Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневую директорию проекта, начиная от текущей директории файла.  Функция ищет директории вверх по дереву каталогов, пока не найдёт директорию, содержащую файлы-маркеры (например, `pyproject.toml`, `requirements.txt`, `.git`).  Если корневая директория найдена, она добавляется в `sys.path` для корректного импорта модулей.  Далее, код загружает настройки из файла `settings.json` и описание проекта из файла `README.MD`, если они существуют.  Наконец, код устанавливает переменные, содержащие название проекта, версию, документацию, детали, автора, копирайт и информацию о поддержке разработчика.

Шаги выполнения
-------------------------
1. **Инициализация**:  Код импортирует необходимые модули (`sys`, `json`, `pathlib`, `packaging.version`).
2. **Определение функции `set_project_root`**:  Функция принимает кортеж `marker_files` с именами файлов-маркеров.
3. **Поиск корневой директории**: Функция `set_project_root` определяет текущую директорию файла. Она итерирует по родительским директориям, проверяя, содержат ли они файлы-маркеры из `marker_files`. Если такой файл найден, то `__root__` устанавливается в текущую родительскую директорию и цикл прерывается.
4. **Добавление в `sys.path`**: Если найденная корневая директория `__root__` не присутствует в `sys.path`, она добавляется в начало списка.
5. **Возврат корневой директории**: Функция возвращает найденную корневую директорию `__root__`.
6. **Получение настроек**: Код получает путь к файлу `settings.json` относительно корневой директории. Затем, он пытается загрузить данные из файла используя `json.load()`. Если файл не найден или содержимое некорректно, используется значение по умолчанию.
7. **Получение документации**: Код аналогично получает путь к файлу `README.MD` и загружает его содержимое, если он существует.
8. **Установка переменных**: Код устанавливает переменные, такие как `__project_name__`, `__version__`, `__doc__`, `__author__` и др., используя данные из загруженных настроек или значения по умолчанию, если соответствующий элемент не найден.
9. **Возврат значений**:  Код возвращает значения переменных, содержащих имя проекта, версию, документацию и другие данные.


Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.endpoints.header import set_project_root

    # Вызов функции для получения корневой директории
    root_dir = set_project_root()

    # Теперь вы можете использовать root_dir для работы с файлами проекта.
    # Например, чтение файла settings.json
    # from pathlib import Path
    # settings_path = Path(root_dir) / 'src' / 'settings.json'
    # ... (обработка файла settings_json)

    print(f"Корневая директория проекта: {root_dir}")
    print(f"Имя проекта: {__project_name__}")