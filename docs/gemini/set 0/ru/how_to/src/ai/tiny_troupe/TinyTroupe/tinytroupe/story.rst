Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет класс `TinyStory`, предназначенный для создания историй на основе симуляции. Класс позволяет инициализировать историю с заданным окружением (`environment`) или агентом (`agent`), целью (`purpose`), контекстом и параметрами для отображения взаимодействия.  Методы `start_story` и `continue_story` генерируют текст истории, используя информацию о симуляции и заданные требования. Метод `_current_story` формирует строку с описанием текущих взаимодействий агента или среды.

Шаги выполнения
-------------------------
1. **Инициализация:** Создайте экземпляр класса `TinyStory`, передав необходимый параметр `environment` или `agent`.  Важно, что должен быть указан либо один, либо другой, а не оба одновременно. Вы можете также задать цель истории, контекст, количество включаемых взаимодействий и информацию об опущенных.

2. **Запуск истории:** Вызовите метод `start_story()`, передав дополнительные требования к истории (`requirements`), желаемое количество слов и флаг для включения поворота сюжета.

3. **Продолжение истории:** Для продолжения истории используйте метод `continue_story()`, также передавая требования, количество слов и флаг для поворота сюжета.

4. **Получение текущей истории:** Для доступа к текущему состоянию истории используйте метод `_current_story()`. Он возвращает строку с текущим содержимым истории, включая описание взаимодействий.


Пример использования
-------------------------
.. code-block:: python

    from tinytroupe.story import TinyStory
    from tinytroupe.agent import TinyPerson
    from tinytroupe.environment import TinyWorld
    
    # Создаем агента и окружение (замените на ваши объекты)
    agent = TinyPerson()
    environment = TinyWorld()

    # Инициализируем историю, используя агента
    story = TinyStory(agent=agent, purpose="Исследование взаимодействия агента с окружением")

    # Запускаем историю с дополнительными требованиями
    start_story_result = story.start_story(requirements="Начать историю о взаимодействии агента с окружающей средой.", number_of_words=150, include_plot_twist=True)
    print(f"Начало истории: {start_story_result}")

    # Продолжаем историю
    continuation_story_result = story.continue_story(requirements="Продолжить историю, уделяя внимание...", number_of_words=100)
    print(f"Продолжение истории: {continuation_story_result}")

    # Получаем текущую историю
    current_story = story._current_story()
    print(f"Текущая история: {current_story}")