"""
<ROULET>:
=================
Сложность: 2
-----------------
Игра "Рулетка" - это простая игра, имитирующая вращение рулетки. Игрок вводит ставку и выбирает число от 1 до 8. Если выпавшее на рулетке случайное число совпадает с выбранным, игрок выигрывает сумму в 5 раз больше ставки.
-----------------
Правила игры:
1. Игрок вводит сумму ставки.
2. Игрок выбирает число от 1 до 8.
3. Происходит "вращение рулетки", генерируется случайное число от 1 до 8.
4. Если выпавшее число совпадает с выбранным числом игрока, игрок выигрывает сумму в 5 раз больше своей ставки.
5. Игра продолжается, пока игрок не введет 0 для ставки, чтобы завершить игру.
-----------------
Алгоритм:
1. Начало игры.
2. Игрок вводит ставку. Если ставка равна 0, игра заканчивается.
3. Игрок вводит число, на которое ставит.
4. Генерируется случайное число от 1 до 8 (результат рулетки).
5. Если результат рулетки совпадает с числом игрока, игрок выигрывает. Выводится сообщение о выигрыше и сумма выигрыша.
6. Если результат рулетки не совпадает с числом игрока, игрок проигрывает. Выводится сообщение о проигрыше.
7. Игра возвращается к шагу 2 (повторяем ввод ставки).
8. Конец игры.
-----------------
Блок-схема:
```mermaid
graph TD
    Start(Начало игры) --> InputBet(Ввод ставки);
    InputBet -- Ставка равна 0 --> End(Конец игры);
    InputBet -- Ставка > 0 --> InputNumber(Ввод числа);
    InputNumber --> GenerateRandomNumber(Генерация случайного числа);
    GenerateRandomNumber --> CheckWin(Проверка выигрыша);
    CheckWin -- Выигрыш --> OutputWin(Вывод сообщения о выигрыше);
    OutputWin --> InputBet;
    CheckWin -- Проигрыш --> OutputLose(Вывод сообщения о проигрыше);
    OutputLose --> InputBet;
    End --> Stop(Конец);
    
```
"""
import random

def roulette():
    """
    Игра "Рулетка". Игрок делает ставку и выбирает число от 1 до 8.
    Если выпавшее на рулетке число совпадает с выбранным, игрок выигрывает.
    """
    print("Добро пожаловать в игру Рулетка!")

    while True:
        # Ввод ставки игроком
        while True:
            try:
                bet = int(input("Введите вашу ставку (0 для выхода): "))
                if bet >= 0:
                    break # Выход из цикла, если ставка введена корректно
                else:
                     print("Ставка должна быть неотрицательной. Попробуйте снова.")
            except ValueError:
                print("Некорректный ввод. Введите целое число.")

        if bet == 0:
            print("Спасибо за игру!")
            break # Завершение игры, если ставка 0

        # Ввод числа, на которое ставит игрок
        while True:
            try:
                chosen_number = int(input("Выберите число от 1 до 8: "))
                if 1 <= chosen_number <= 8:
                    break
                else:
                    print("Число должно быть от 1 до 8. Попробуйте снова.")
            except ValueError:
                print("Некорректный ввод. Введите целое число.")
        

        # Генерируем случайное число от 1 до 8
        roulette_result = random.randint(1, 8)
        print(f"Рулетка показала: {roulette_result}")

        # Проверяем, совпало ли число игрока с результатом рулетки
        if chosen_number == roulette_result:
            winnings = bet * 5
            print(f"Поздравляю, вы выиграли {winnings}!")
        else:
            print("К сожалению, вы проиграли.")

# Запуск игры
if __name__ == "__main__":
    roulette()
"""
Пояснения:
1. `roulette()` - это функция, которая запускает игру "Рулетка".
2.  `while True:` - это внешний бесконечный цикл, который позволяет игре продолжаться до тех пор, пока игрок не захочет выйти.
3.  `while True:` - это вложенный бесконечный цикл для проверки корректности ввода ставки.
   - `try-except` конструкция для отлова ошибок при вводе.
   -  `bet = int(input(...))` - запрашиваем ставку у игрока и преобразуем в целое число.
   -  `if bet >= 0: break` -  если ставка неотрицательная то выходим из внутреннего цикла.
   -   `else: print(...)` - если ставка отрицательная то просим ввести еще раз.
   - `except ValueError` - если ввели не число, то просим ввести корректно.
4. `if bet == 0:` - если ставка 0, то игра завершается.
5.  `while True:` - вложенный бесконечный цикл для проверки корректности ввода числа.
    - `try-except` конструкция для отлова ошибок при вводе.
   -  `chosen_number = int(input(...))` - запрашиваем число и преобразуем в целое.
   -  `if 1 <= chosen_number <= 8: break` - если число от 1 до 8 то выходим из цикла.
   -  `else: print(...)` - если число не от 1 до 8, то просим ввести еще раз.
   - `except ValueError` - если ввели не число, то просим ввести корректно.
6. `roulette_result = random.randint(1, 8)` - генерируем случайное число от 1 до 8, имитируя вращение рулетки.
7. `print(f"Рулетка показала: {roulette_result}")` - выводим результат рулетки на экран.
8.  `if chosen_number == roulette_result:` - проверяем, совпало ли число игрока с результатом рулетки.
    -  `winnings = bet * 5` - если совпало, то рассчитываем выигрыш.
    - `print(f"Поздравляю, вы выиграли {winnings}!")` - выводим сообщение о выигрыше.
9. `else:` - если число не совпало:
    - `print("К сожалению, вы проиграли.")` - выводим сообщение о проигрыше.
10. `if __name__ == "__main__":` -  запускаем игру, если скрипт выполняется напрямую.
    - `roulette()` - вызываем функцию для запуска игры.
licence:MIT(../licence)
"""
__author__ = 'hypo69 (hypo69@davidka.net)'
```