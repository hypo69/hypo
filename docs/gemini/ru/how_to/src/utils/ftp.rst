Как использовать функции для работы с FTP сервером
=========================================================================================

Описание
-------------------------
Этот модуль предоставляет функции для отправки, получения и удаления файлов с FTP сервера.  Функции `write`, `read` и `delete` позволяют взаимодействовать с FTP сервером.  Они принимают пути к файлам и каталогам на сервере, а также имя файла для отправки/получения/удаления.  Модуль использует библиотеку `ftplib` и логирует ошибки в случае проблем с подключением или передачей.

Шаги выполнения
-------------------------
1. **Подключение к FTP серверу:** Функции `write`, `read` и `delete` сначала устанавливают соединение с FTP сервером, используя заданные в конфигурации `_connection` сервер, порт, имя пользователя и пароль.


2. **Изменение каталога (cwd):**  Функции переходят в нужный каталог на FTP сервере с помощью метода `session.cwd(dest_dir)`.


3. **Отправка файла (write):**
   - Функция `write` открывает файл для чтения в бинарном режиме (`'rb'`).
   - Затем она использует метод `session.storbinary()` для отправки содержимого файла на FTP сервер.
   - Если все прошло успешно, возвращается `True`. В противном случае - `False`.


4. **Получение файла (read):**
   - Функция `read` открывает файл для записи в бинарном режиме (`'wb'`).
   - Использует `session.retrbinary()` для скачивания файла с сервера.
   - Содержимое файла читается и возвращается в виде `bytes`.  В случае ошибки - возвращается `None`.


5. **Удаление файла (delete):**
   - Функция `delete` использует метод `session.delete()` для удаления файла с сервера.
   - Возвращает `True` в случае успеха, `False` - в случае ошибки.


6. **Закрытие сессии:** Во всех функциях происходит закрытие FTP сессии с помощью `session.quit()`, даже если произошла ошибка.  Это гарантирует освобождение ресурсов.


Пример использования
-------------------------
.. code-block:: python

    import os
    from hypotez.src.utils.ftp import write, read, delete

    # Пути к файлам и каталогам. Замените на свои значения!
    source_file_path = 'path/to/your/local/file.txt'
    dest_dir = '/remote/directory'
    dest_file_name = 'file.txt'
    
    # Отправка файла
    success = write(source_file_path, dest_dir, dest_file_name)
    if success:
        print("Файл успешно отправлен")
    else:
        print("Ошибка при отправке файла")


    # Получение файла
    try:
        content = read(source_file_path, dest_dir, dest_file_name)
        if content:
          with open("downloaded_file.txt", "wb") as f:
            f.write(content)
          print("Файл успешно получен")
        else:
          print("Ошибка при получении файла")
    except Exception as e:
        print(f"Ошибка при получении файла: {e}")

    # Удаление файла
    success = delete(source_file_path, dest_dir, dest_file_name)
    if success:
        print("Файл успешно удален")
    else:
        print("Ошибка при удалении файла")