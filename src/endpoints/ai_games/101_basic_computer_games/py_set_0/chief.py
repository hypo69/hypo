"""
CHIEF:
=================
Сложность: 2
-----------------
Игра "CHIEF" - это простая игра, в которой игрок пытается угадать случайное число, загаданное компьютером. Игра сообщает, угадал ли игрок число, и предоставляет подсказки "слишком большое" или "слишком маленькое".

Правила игры: 
1. Компьютер генерирует случайное целое число от 1 до 100.
2. Игрок вводит целое число в качестве своей догадки.
3. Если догадка совпадает с загаданным числом, игра сообщает, что игрок угадал, и заканчивается.
4. Если догадка больше загаданного числа, игра сообщает "Слишком большое" и предлагает ввести новую догадку.
5. Если догадка меньше загаданного числа, игра сообщает "Слишком маленькое" и предлагает ввести новую догадку.
6. Игра продолжается до тех пор, пока игрок не угадает число.
-----------------
Алгоритм:
1. Установить генератор случайных чисел.
2. Сгенерировать случайное целое число (secretNumber) в диапазоне от 1 до 100.
3. Вывести сообщение "I AM THINKING OF A NUMBER BETWEEN 1 AND 100."
4. В цикле:
   - Ввести догадку игрока (guess).
   - Если догадка равна секретному числу, то:
       - Вывести сообщение "YOU GOT IT RIGHT"
       - Завершить игру.
   - Иначе, если догадка больше секретного числа, то:
       - Вывести сообщение "TOO LARGE."
   - Иначе:
       - Вывести сообщение "TOO SMALL."
5. Перейти к шагу 4.
-----------------
Блок-схема: 
```mermaid
graph TD
    Start(Start) --> GenerateSecretNumber(Генерация случайного числа);
    GenerateSecretNumber --> OutputStartMessage(Вывод начального сообщения);
    OutputStartMessage --> InputGuess(Ввод числа от игрока);
    InputGuess --> CheckGuess(Проверка числа);
    CheckGuess -- Верно --> OutputWinMessage(Вывод сообщения о победе);
    OutputWinMessage --> End(Конец игры);
    CheckGuess -- Больше --> OutputTooLarge(Вывод сообщения "Слишком большое");
    OutputTooLarge --> InputGuess;
    CheckGuess -- Меньше --> OutputTooSmall(Вывод сообщения "Слишком маленькое");
     OutputTooSmall --> InputGuess;
```
"""
import random

# Устанавливаем сид для генератора случайных чисел для воспроизводимости
random.seed()

# Генерируем случайное число от 1 до 100 включительно
secret_number = random.randint(1, 100)

# Выводим приветственное сообщение для игрока
print("I AM THINKING OF A NUMBER BETWEEN 1 AND 100.")

# Начинаем бесконечный цикл, пока игрок не угадает число
while True:
    # Запрашиваем ввод числа от игрока
    try:
        guess = int(input("YOUR GUESS? "))
    except ValueError:
        # Если введено не число, сообщаем об ошибке и просим повторить ввод
        print("Пожалуйста, введите целое число.")
        continue

    # Проверяем, угадал ли игрок число
    if guess == secret_number:
        # Если угадал, выводим сообщение о победе и завершаем игру
        print("YOU GOT IT RIGHT")
        break
    elif guess > secret_number:
        # Если догадка больше загаданного числа, выводим подсказку
        print("TOO LARGE.")
    else:
        # Если догадка меньше загаданного числа, выводим подсказку
        print("TOO SMALL.")
"""
Пояснения:
1.  `import random`: Импортируем модуль `random`, который предоставляет функции для работы со случайными числами.
2.  `random.seed()`:  Инициализируем генератор случайных чисел.
3.  `secret_number = random.randint(1, 100)`: Генерируем случайное целое число в диапазоне от 1 до 100 включительно и сохраняем его в переменную `secret_number`. Это число, которое должен угадать игрок.
4.  `print("I AM THINKING OF A NUMBER BETWEEN 1 AND 100.")`: Выводим на экран приветственное сообщение для игрока.
5.  `while True:`: Запускаем бесконечный цикл, который будет продолжаться, пока игрок не угадает число.
6.  `try...except ValueError:`: Используем блок try-except для обработки исключения ValueError, которое может возникнуть, если пользователь введет не целое число.
7.  `guess = int(input("YOUR GUESS? "))`: Запрашиваем у игрока ввод числа и преобразуем его в целое число. Сохраняем ввод пользователя в переменную guess.
8.  `if guess == secret_number:`: Проверяем, равно ли число, введенное игроком, загаданному числу. Если да, то игрок угадал число.
9. `print("YOU GOT IT RIGHT")`: Выводим сообщение о победе.
10. `break`: Завершаем цикл `while`, так как игрок угадал число.
11. `elif guess > secret_number:`: Если введенное число больше загаданного, выводим сообщение "TOO LARGE.".
12. `else:`: Если введенное число меньше загаданного, выводим сообщение "TOO SMALL.".
13. Цикл while продолжается, пока не будет выполнена инструкция break.
licence:MIT(../licence)
"""
__author__ = 'hypo69 (hypo69@davidka.net)'
```