"""
HORSES:
=================
Сложность: 5
-----------------
Игра "Скачки" - это игра для одного или нескольких игроков, в которой каждый игрок управляет лошадью, и они соревнуются на беговой дорожке. Игра состоит из раундов, в каждом из которых лошади перемещаются на случайное количество позиций. Цель игры - первым достичь финишной черты, которая расположена на 20 позиции.

Правила игры:
1. Игроки выбирают количество лошадей, участвующих в забеге (от 2 до 7).
2. Каждая лошадь стартует с позиции 0.
3. В каждом раунде каждая лошадь перемещается на случайное количество позиций (от 1 до 6).
4. Игра продолжается, пока одна из лошадей не достигнет или не превысит финишную черту (20 позицию).
5. Лошадь, первой достигшая или превысившая финишную черту, объявляется победителем.
-----------------
Алгоритм:
1.  Запросить у пользователя количество участвующих лошадей (от 2 до 7).
2.  Инициализировать позиции всех лошадей, установив их в 0.
3.  Начать цикл "пока ни одна из лошадей не достигла финишной черты":
    3.1 Для каждой лошади:
        3.1.1 Сгенерировать случайное число от 1 до 6 (количество позиций для перемещения).
        3.1.2 Увеличить текущую позицию лошади на сгенерированное число.
        3.1.3 Вывести текущую позицию лошади.
    3.2 Проверить, есть ли лошадь, достигшая или превысившая 20 позицию.
    3.3 Если такая лошадь найдена, вывести сообщение о победе и завершить игру.
4. Конец игры.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InputNumberOfHorses["Ввод количества лошадей: <code><b>numberOfHorses</b></code>(2-7)"]
    InputNumberOfHorses --> InitializePositions["<p align='left'>Инициализация позиций лошадей:
    <code><b>
    horsePositions = [0] * numberOfHorses
    </b></code></p>"]
    InitializePositions --> LoopStart{"Начало цикла: пока нет победителя"}
    LoopStart -- Да --> LoopHorsesStart{"Начало цикла для каждой лошади"}
    LoopHorsesStart --> GenerateMove["<code><b>move = random(1,6)</b></code>"]
    GenerateMove --> UpdatePosition["<code><b>horsePositions[i] += move</b></code>"]
    UpdatePosition --> OutputPosition["Вывод позиции лошади <code><b>horsePositions[i]</b></code>"]
    OutputPosition --> LoopHorsesEnd{"Конец цикла для каждой лошади"}
    LoopHorsesEnd --> CheckWinner{"Проверка: <code><b>horsePositions[i] >= 20?</b></code>"}
    CheckWinner -- Да --> OutputWinner["Вывод сообщения: <b>Лошадь {i+1} победила!</b>"]
    OutputWinner --> End["Конец"]
    CheckWinner -- Нет --> LoopStart
    LoopStart -- Нет --> End
```
Legenda:
    Start - Начало программы.
    InputNumberOfHorses - Запрос у пользователя количества лошадей (от 2 до 7).
    InitializePositions - Инициализация списка позиций всех лошадей, устанавливая их начальное значение в 0.
    LoopStart - Начало цикла, который продолжается до тех пор, пока не будет определен победитель.
    LoopHorsesStart - Начало цикла для каждой лошади.
    GenerateMove - Генерация случайного числа от 1 до 6, которое будет использоваться для перемещения текущей лошади.
    UpdatePosition - Обновление позиции текущей лошади, добавляя к ее текущей позиции сгенерированное случайное число.
    OutputPosition - Вывод текущей позиции лошади на экран.
    LoopHorsesEnd - Конец цикла для всех лошадей.
    CheckWinner - Проверка, достигла ли какая-либо из лошадей или превысила финишную линию (позиция 20).
    OutputWinner - Вывод сообщения о победе с указанием номера лошади-победителя.
    End - Конец программы.
"""

import random

# Запрашиваем количество лошадей у пользователя
while True:
    try:
        numberOfHorses = int(input("Введите количество лошадей (от 2 до 7): "))
        if 2 <= numberOfHorses <= 7:
            break
        else:
            print("Пожалуйста, введите число от 2 до 7.")
    except ValueError:
        print("Пожалуйста, введите целое число.")

# Инициализируем список позиций лошадей, все на старте (позиция 0)
horsePositions = [0] * numberOfHorses

# Основной игровой цикл
while True:
    # Перебираем каждую лошадь
    for i in range(numberOfHorses):
        # Генерируем случайный сдвиг для лошади (от 1 до 6)
        move = random.randint(1, 6)
        # Обновляем позицию лошади
        horsePositions[i] += move
        # Выводим текущую позицию лошади
        print(f"Лошадь {i + 1}: {horsePositions[i]}")

    # Проверяем, есть ли победитель
    for i in range(numberOfHorses):
        if horsePositions[i] >= 20:
            print(f"Лошадь {i + 1} победила!")
            exit() # Завершаем программу, если есть победитель

"""
Пояснения:
1. **Импорт модуля random**:
   - `import random`: Импортирует модуль `random`, который используется для генерации случайных чисел.

2. **Запрос количества лошадей у пользователя**:
   - `while True:`: Бесконечный цикл, который продолжается до тех пор, пока пользователь не введет корректное число.
   - `try...except ValueError`: Блок try-except обрабатывает возможные ошибки ввода.
   - `numberOfHorses = int(input("Введите количество лошадей (от 2 до 7): "))`: Запрашивает у пользователя количество лошадей и преобразует его в целое число.
   - `if 2 <= numberOfHorses <= 7:`: Проверяет, находится ли введенное число в допустимом диапазоне.
   - `break`: Прерывает цикл, если введено корректное число.
   - `else:`: Выводит сообщение об ошибке, если введенное число не в диапазоне.
   - `print("Пожалуйста, введите целое число.")`: Выводит сообщение об ошибке, если введено не целое число.

3. **Инициализация позиций лошадей**:
   - `horsePositions = [0] * numberOfHorses`: Создает список `horsePositions`, где каждый элемент представляет позицию лошади. Начальная позиция всех лошадей равна 0.

4. **Основной игровой цикл**:
   - `while True:`: Бесконечный цикл, который продолжается до тех пор, пока не будет определен победитель.
   - `for i in range(numberOfHorses):`: Цикл для перебора всех лошадей.
     - `move = random.randint(1, 6)`: Генерирует случайное число от 1 до 6, которое будет использоваться для перемещения лошади.
     - `horsePositions[i] += move`: Обновляет позицию лошади, добавляя случайное число к текущей позиции.
     - `print(f"Лошадь {i + 1}: {horsePositions[i]}")`: Выводит текущую позицию лошади.
   - `for i in range(numberOfHorses):`: Цикл для перебора всех лошадей, для проверки победителя.
     - `if horsePositions[i] >= 20:`: Проверяет, достигла ли какая-либо из лошадей финишной линии (позиция 20).
     - `print(f"Лошадь {i + 1} победила!")`: Выводит сообщение о победе с указанием номера лошади-победителя.
     - `exit()`: Завершает программу, если победитель определен.
"""
