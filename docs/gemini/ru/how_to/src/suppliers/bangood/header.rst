Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневую директорию проекта, начиная с текущей директории файла. Он ищет файлы (или директории), такие как `pyproject.toml`, `requirements.txt` и `.git`, чтобы определить корень проекта. Если корневая директория не найдена, то возвращается текущая директория. Затем код загружает настройки из файла `settings.json` и документ из `README.MD`, если они существуют.  В противном случае, используются значения по умолчанию.  Наконец, он устанавливает переменные, содержащие информацию о проекте (название, версия, документация, автор, и т.д.), полученные из настроек или со значениями по умолчанию.

Шаги выполнения
-------------------------
1. **Определение корневой директории проекта:**
   Функция `set_project_root` ищет корневую директорию проекта, начиная с текущей директории файла и поднимаясь по дереву директорий. Она проверяет наличие файлов или директорий, указанных в аргументе `marker_files`, для определения корневой директории. Если корневая директория найдена, она добавляется в `sys.path`.

2. **Загрузка настроек:**
   Код пытается загрузить настройки из файла `settings.json` в корневой директории проекта.  Если файл не найден или содержимое файла некорректно, обработчик исключения `except` обрабатывает ошибку.

3. **Чтение документации:**
   Код пытается загрузить документацию из файла `README.MD` в корневой директории проекта. Если файл не найден или содержимое файла некорректно, обработчик исключения `except` обрабатывает ошибку.

4. **Инициализация переменных проекта:**
   Код инициализирует переменные, относящиеся к проекту, такие как `__project_name__`, `__version__`, `__doc__`, `__author__`, `__copyright__`, `__cofee__`. Эти переменные могут быть получены из загруженных настроек или иметь значения по умолчанию.


Пример использования
-------------------------
.. code-block:: python

    import os
    from hypotez.src.suppliers.bangood.header import set_project_root

    # Пример использования функции set_project_root
    project_root = set_project_root()
    print(f"Корневая директория проекта: {project_root}")

    # Пример доступа к переменным проекта
    print(f"Название проекта: {__project_name__}")
    print(f"Версия проекта: {__version__}")

    # Добавление проверки существования файла settings.json:
    if os.path.exists(str(project_root / 'src' / 'settings.json')):
        # Доступ к данным из settings.json
        print("Данные из settings.json:", __project_name__)
    else:
        print("Файл settings.json не найден.")