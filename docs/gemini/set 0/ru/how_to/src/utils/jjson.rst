Как использовать функцию j_dumps
========================================================================================

Описание
-------------------------
Функция `j_dumps` предназначена для записи данных в формате JSON в файл или возврата их в виде словаря. Она поддерживает различные типы данных, включая словари, списки словарей, объекты `SimpleNamespace`, и строки, которые могут содержать JSON. Функция умеет работать с CSV файлами. Она также умеет обрабатывать вложенные структуры данных, такие как списки и словари, содержащие объекты `SimpleNamespace`. Функция позволяет указать режим открытия файла (запись поверх (`w`), добавление в начало (`a+`), добавление в конец (`+a`)).  Если в данных присутствует ошибка, функция записывает ее в лог и возвращает `None`.

Шаги выполнения
-------------------------
1. **Подготовьте данные:**  Подготовьте данные, которые хотите сохранить в JSON формате. Это могут быть словари, списки, объекты `SimpleNamespace` или строка, содержащая JSON.
2. **Укажите путь к файлу (необязательно):** Если вы хотите сохранить данные в файл, укажите путь к нему используя объект `Path` или строку. Если вы хотите получить данные в формате JSON как словарь, укажите `None` в качестве пути к файлу.
3. **Вызовите функцию `j_dumps`:** Вызовите функцию `j_dumps`, передав ей подготовленные данные и (необязательно) путь к файлу, режим записи (`mode`), и флаг `ensure_ascii`.
4. **Обработайте результат:** Если вы указали путь к файлу, данные будут записаны в него. В случае успеха функция возвращает `data` (то что вы сохранили). Если вы передали `None` в качестве пути к файлу, функция возвращает словарь с данными в формате JSON.  Если произошла ошибка, функция возвращает `None`.

Пример использования
-------------------------
.. code-block:: python

    import json
    from pathlib import Path
    from src.utils.jjson import j_dumps, j_loads_ns

    # Пример данных
    data = {"name": "John Doe", "age": 30}
    data2 = {"name": "Jane Doe", "age": 25}
    
    # Сохранение данных в файл
    file_path = Path("data.json")
    j_dumps(data, file_path)


    # Чтение данных из файла
    loaded_data = j_loads_ns(file_path)
    print(loaded_data)


    # Сохранение списка в файл
    list_data = [{"name": "Alice", "age": 22}, {"name": "Bob", "age": 28}]
    j_dumps(list_data, Path("list_data.json"))
    
    # Пример работы с а+ режимом
    j_dumps({"name": "Peter"}, file_path, mode="a+")
    loaded_data = j_loads_ns(file_path)
    print(loaded_data)

    # Обработка строки, представляющей JSON
    json_string = """{"name": "David", "age": 35}"""
    j_dumps(json_string, Path("string_data.json"))

    # Обработка данных в виде SimpleNamespace
    from types import SimpleNamespace
    ns_data = SimpleNamespace(name="David", age=35)
    j_dumps(ns_data, Path("ns_data.json"))