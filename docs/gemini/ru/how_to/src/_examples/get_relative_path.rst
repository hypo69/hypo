Как использовать этот блок кода
=========================================================================================\n\nОписание
-------------------------
Этот фрагмент кода демонстрирует использование функции `get_relative_path` для получения относительного пути к файлу `hypotez` относительно текущего файла. Функция принимает в качестве аргументов абсолютный путь к текущему файлу и имя каталога. Она возвращает строку, представляющую собой относительный путь.

Шаги выполнения
-------------------------
1. Импортируется модуль `Path` из библиотеки `pathlib`.
2. Определяется константа `MODE` со значением 'dev'.
3. Импортируются модули `header` и `get_relative_path` из соответствующих модулей.
4. Вызывается функция `get_relative_path` с двумя аргументами:
    - `Path(__file__).resolve()`:  получается абсолютный путь к текущему файлу и выполняется его нормализация с помощью `.resolve()`.
    - `'hypotez'`:  имя каталога, относительно которого требуется получить относительный путь.
5. Результат работы функции `get_relative_path` (относительный путь) сохраняется в переменной `relative_path`.
6. Выводится значение переменной `relative_path` на консоль.


Пример использования
-------------------------
.. code-block:: python

    from pathlib import Path
    from src.utils.path import get_relative_path

    # Предполагается, что текущий файл расположен в директории 'hypotez/src/_examples/'
    # и вызывается из файла 'get_relative_path.py'
    
    current_file_path = Path(__file__).resolve()
    relative_path_to_hypotez = get_relative_path(current_file_path, 'hypotez')
    print(relative_path_to_hypotez)