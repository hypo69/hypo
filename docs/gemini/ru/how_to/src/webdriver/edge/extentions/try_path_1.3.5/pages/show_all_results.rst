Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код отображает результаты поиска, полученные с помощью расширения tryxpath. Он заполняет различные элементы HTML (например, `message`, `title`, `url`),  описывающие результат поиска.  Также, он выводит подробные данные о контексте поиска (context) и основных результатах (main).  Функция `showAllResults` отвечает за  отображение полученных данных в виде таблиц.  Код обрабатывает возможные ошибки с помощью `catch(fu.onError)`. Он использует функции из библиотеки tryxpath (`tx`, `fu`), а также взаимодействует с браузерным API для получения и обработки данных.

Шаги выполнения
-------------------------
1. **Получение результатов поиска:** Код ожидает получения данных о результатах поиска от расширения браузера (`browser.runtime.sendMessage`).
2. **Обработка результатов:**
   - Функция `showAllResults` получает объект `results` с данными поиска.
   - Заполняются соответствующие элементы HTML, такие как заголовки, URL, ID фрейма.
   -  Проверяется наличие контекста (`results.context`). Если контекст есть, вызывается `fu.updateDetailsTable` для отображения деталей контекста в таблице. Если нет - удаляется область для контекста.
   - Для основных результатов (`results.main`) тоже выполняется заполнение элементов и вызов `fu.updateDetailsTable`.
3. **Создание ссылок для скачивания:**
   - Создаются ссылки на текстовые файлы, содержащие подробную информацию о результатах (`makeTextDownloadUrl`, `makeInfoText`, `makeConvertedInfoText`).
   - Ссылки на скачивание настраиваются для разных типов файлов.
4. **Обработка кликов на кнопки:**
    - Клик по кнопкам в таблице контекста отправляет сообщение в активную вкладку браузера для фокусирования на соответствующем элементе контекста (`browser.tabs.sendMessage`).
    - Клик по кнопкам в основной таблице отправляет сообщение в активную вкладку браузера для фокусирования на соответствующем элементе (`browser.tabs.sendMessage`).
5. **Инициализация:** Функция `addEventListener` сработает при загрузке страницы, вызовет `browser.runtime.sendMessage`, обработает полученные данные (`results`), отобразит их и настроит обработку кликов.

Пример использования
-------------------------
.. code-block:: javascript
    // Пример вызова функции showAllResults
    let exampleResults = {
        "message": "Результаты поиска",
        "title": "Название страницы",
        "href": "https://example.com",
        "frameId": 123,
        "context": {
            "method": "GET",
            "expression": "someExpression",
            "specifiedResultType": "json",
            "resultType": "text",
            "resolver": "resolver1",
            "itemDetail": [{"type": "type1", "name": "name1", "value": "value1", "textContent": "text1"}]
        },
        "main": {
            "method": "POST",
            "expression": "anotherExpression",
            "specifiedResultType": "html",
            "resultType": "json",
            "resolver": "resolver2",
            "itemDetails": []
        }
    };

    showAllResults(exampleResults);