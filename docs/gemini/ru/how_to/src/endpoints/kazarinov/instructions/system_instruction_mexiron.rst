Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код описывает шаблон для генерации документации к коду. Он принимает на вход JSON-массив с информацией о компонентах компьютера, и должен: определить тип сборки (например, игровая, офисная, рабочая станция), сгенерировать описание сборки на иврите и русском, перевести названия и описания компонентов на иврит и русский, вернуть ответ в формате JSON, строго следуя указанной структуре, и обеспечить правильное форматирование всех кавычек и структуры в выводе.

Шаги выполнения
-------------------------
1. **Анализ входных данных:** Проанализировать JSON-массив, содержащий информацию о компонентах компьютера (product_id, product_title, product_description, image_local_saved_path).
2. **Определение типа сборки:** На основе характеристик компонентов (например, процессор, видеокарта, объем памяти) определить тип сборки (gaming, workstation, etc.) и оценить вероятность каждого типа, используя весовые коэффициенты.
3. **Генерация заголовка и описания:** Сгенерировать заголовок и описание сборки на иврите и русском. Заголовок и описание должны быть информативными и описывать ключевые характеристики компонентов.
4. **Перевод названий и описаний:** Перевести названия и описания компонентов на иврит и русский, используя подходящие термины и сохраняя контекст.
5. **Формирование выходного JSON:** Сформировать JSON-ответ в соответствии с заданной структурой. Включить заголовок, описание, типы сборки (с оценками вероятности) и массив компонентов с переведенными названиями и описаниями на иврит и русский.
6. **Форматирование выходных данных:** Строго следовать формату JSON, указанному в примере. Убедиться, что все поля заполнены, и все переводные термины точны, особенно технические спецификации.  Обрабатывать случай с отсутствующей информацией, заполняя поля по возможности или используя заглушки.

Пример использования
-------------------------
.. code-block:: python

    import json

    input_data = [
        {"product_id": "123", "product_title": "Процессор Intel i9-14900K", "product_description": "Высокопроизводительный процессор", "image_local_saved_path": "path/to/image"},
        {"product_id": "456", "product_title": "Видеокарта NVIDIA RTX 4060 Ti", "product_description": "Мощная видеокарта для игр", "image_local_saved_path": "path/to/image"}
    ]

    # Пример кода для обработки input_data и генерации output_data
    # (реализация зависит от используемой технологии, например, Gemini AI)

    output_data = {
        "he": {
            "title": "מחשב גיימינג בעל ביצועים גבוהים",
            "description": "מחשב מודרני למשחקים ותוכנות תובעניים. כולל מעבד Intel i9-14900K, כרטיס מסך NVIDIA RTX 4060 Ti, ...",
            "build_types": {"gaming": 0.9, "workstation": 0.1},
            "products": [...]
        },
        "ru": {
            "title": "Высокопроизводительный игровой компьютер",
            "description": "Современный компьютер для требовательных игр и приложений. Включает процессор Intel i9-14900K, видеокарту NVIDIA RTX 4060 Ti, ...",
            "build_types": {"gaming": 0.9, "workstation": 0.1},
            "products": [...]
        }
    }

    print(json.dumps(output_data, indent=4, ensure_ascii=False))