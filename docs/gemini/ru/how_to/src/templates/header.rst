Как использовать функцию set_project_root
=========================================================================================

Описание
-------------------------
Функция `set_project_root` определяет корневую директорию проекта. Она ищет директории вверх от текущего файла, пока не найдет директорию, содержащую один из файлов из набора `marker_files`.  Если корневая директория найдена, она добавляется в `sys.path`, что позволяет импортировать модули из других частей проекта. В противном случае, в `sys.path` добавляется директория, где расположен текущий файл.

Шаги выполнения
-------------------------
1. Функция принимает кортеж `marker_files` с именами файлов или директорий, которые указывают на корень проекта.
2. Начинает поиск с текущей директории и переходит к родительским директориям.
3. Для каждой родительской директории проверяет наличие хотя бы одного из файлов из `marker_files`.
4. Если такой файл найден, функция устанавливает `__root__` на эту родительскую директорию и прерывает поиск.
5. Если корневая директория не найдена, функция устанавливает `__root__` на директорию текущего файла.
6. Если `__root__` не содержится в `sys.path`, добавляет его в начало списка `sys.path`.
7. Возвращает объект `Path` корневой директории.

Пример использования
-------------------------
.. code-block:: python

    from pathlib import Path
    from hypotez.src.templates.header import set_project_root

    # Пример использования с pyproject.toml в родительской директории
    root_dir = set_project_root(marker_files=('pyproject.toml',))
    print(root_dir)

    # Пример использования с несколькими файлами
    root_dir = set_project_root(marker_files=('pyproject.toml', 'requirements.txt'))
    print(root_dir)

    # Пример, если корневая директория не найдена
    # Использовано временное хранение для демонстрации. 
    # Удалять temp_dir после использования
    import tempfile
    temp_dir = tempfile.TemporaryDirectory()
    root_dir_no_marker = set_project_root()
    print(root_dir_no_marker)