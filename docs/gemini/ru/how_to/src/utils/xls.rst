Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код предоставляет функции для конвертации файлов Excel (формат xls) в JSON и обратно.  Он умеет обрабатывать несколько листов в файле Excel.  Функции обеспечивают чтение, запись и обработку ошибок.

Шаги выполнения
-------------------------
1. **Импорт необходимых библиотек:** Код импортирует библиотеки `pandas`, `json`, `logging` и `pathlib`.  `pandas` используется для работы с Excel-файлами, `json` для работы с JSON-данными, `logging` для записи сообщений об ошибках и `pathlib` для работы с путями к файлам.

2. **Настройка логгирования:**  Устанавливает уровень логгирования и формат сообщений для `logging`.

3. **Функция `read_xls_as_dict`:**
    - **Проверяет существование файла:**  Проверяет, существует ли указанный Excel-файл. Если нет, возвращает `False` и записывает сообщение об ошибке в лог.
    - **Читает Excel-файл:** Использует `pandas` для чтения Excel-файла.
    - **Обработка нескольких листов (опционально):** Если параметр `sheet_name` не указан, код читает все листы в файле и создаёт словарь, где ключи - имена листов, а значения - списки словарей, представляющих строки данных каждого листа.
    - **Обработка одного листа (опционально):** Если параметр `sheet_name` указан, код считывает только указанный лист.
    - **Обработка ошибок:**  Использует блоки `try...except` для обработки потенциальных ошибок при чтении Excel-файла и сохранении JSON-данных, выводит ошибки в лог.
    - **Сохранение в JSON (опционально):** Если параметр `json_file` указан, сохраняет данные в JSON-файл.
    - **Возвращает данные:** Возвращает словарь с данными из Excel-файла или `False` в случае ошибки.


4. **Функция `save_xls_file`:**
    - **Записывает данные в Excel:** Использует `pandas` для записи данных из словаря в Excel-файл с указанными именами листов.
    - **Обработка ошибок:** Использует блок `try...except` для обработки потенциальных ошибок при сохранении Excel-файла, выводит ошибки в лог.
    - **Возвращает результат:** Возвращает `True` в случае успешного сохранения или `False` в случае ошибки.

Пример использования
-------------------------
.. code-block:: python

    import os
    from hypotez.src.utils.xls import read_xls_as_dict, save_xls_file

    # Создаем тестовый Excel файл для примера
    data_to_save = {'Sheet1': [{'Column A': 'Value 1', 'Column B': 123}, {'Column A': 'Value 2', 'Column B': 456}]}
    test_file = 'test.xlsx'
    save_xls_file(data_to_save, test_file)

    # Читаем файл
    data = read_xls_as_dict(test_file)
    if data:
        print(data)

    # Удаляем тестовый файл
    os.remove(test_file)