Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код содержит набор тестов для модуля `TinyWorld`, проверяющих его функциональность, включая создание пустого мира, мира с агентами, отправку широковещательных сообщений, кодирование и декодирование состояния мира. Тесты написаны с использованием фреймворка `pytest`.

Шаги выполнения
-------------------------
1. **Импорт необходимых модулей**: Код импортирует модули `pytest`, `logging`, `sys`,  классы для создания агентов (Lisa, Oscar, Marcos), класс `TinyWorld` и вспомогательные функции из модуля `testing_utils`.  Пути к этим модулям добавляются в `sys.path`.

2. **Определение тестовых функций**: Определены функции `test_run`, `test_broadcast`, `test_encode_complete_state` и `test_decode_complete_state`, каждая из которых содержит тесты для определённых аспектов работы класса `TinyWorld`.

3. **Тест `test_run`**:
    * Создаёт пустой мир (`TinyWorld`) и мир с агентами (`focus_group_world`).
    * Вызывает метод `run` для выполнения шагов симуляции в обоих мирах.
    * Отправляет широковещательное сообщение агентам во втором мире.
    * Проверяет, что агенты не отправляют сообщения сами себе.

4. **Тест `test_broadcast`**:
    * Отправляет широковещательное сообщение в мир.
    * Проверяет, что все агенты получили сообщение.

5. **Тест `test_encode_complete_state`**:
    * Кодирует состояние мира.
    * Проверяет, что закодированное состояние не `None` и содержит имя мира и агентов.

6. **Тест `test_decode_complete_state`**:
    * Кодирует состояние мира.
    * Изменяет свойства мира (имя и список агентов).
    * Декодирует закодированное состояние в новый мир.
    * Проверяет, что декодированный мир сохранил исходные свойства (имя и количество агентов).


Пример использования
-------------------------
.. code-block:: python

    import pytest
    # ... (импорт модулей, как в исходном коде)

    # Предполагая, что setup и focus_group_world уже доступны:
    def test_example_broadcast(setup, focus_group_world):
        world = focus_group_world
        world.broadcast("Test broadcast message")
        #  Проверка результата, например, проверка, что message получено всеми агентами
        for agent in world.agents:
            assert "Test broadcast message" in agent.episodic_memory.retrieve_first(1)[0]['content']['stimuli'][0]['content']

    # Запуск тестов
    pytest.main(['-v', '--disable-warnings', 'test_tinyworld.py'])