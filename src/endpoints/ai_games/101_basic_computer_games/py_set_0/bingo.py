"""
<BINGO>:
=================
Сложность: 3
-----------------
Описание игры:
Игра "Бинго" представляет собой простую числовую лотерею. Игрок получает карточку с 24 уникальными случайными числами от 1 до 75, расположенными в 5 столбцах по 5 строк, причем центральный элемент пустой (обозначается как 0). После этого случайным образом выбираются числа от 1 до 75, и игрок отмечает их на своей карточке. Цель игры - собрать линию из 5 отмеченных чисел по горизонтали, вертикали или диагонали.

Правила игры:
1. Карточка бинго состоит из 5 столбцов и 5 строк, центральная ячейка пуста (0).
2. На карточке располагаются 24 уникальных случайных числа от 1 до 75, расположенные в произвольном порядке, за исключением центральной ячейки.
3. Ведущий случайным образом выбирает числа от 1 до 75.
4. Игрок отмечает выбранные числа на своей карточке, если они там есть.
5. Игра продолжается до тех пор, пока игрок не соберет линию (горизонтальную, вертикальную или диагональную) из 5 отмеченных чисел.
6. Когда игрок соберет линию, игра заканчивается и он считается победителем.

-----------------
Алгоритм:
1. Инициализация:
    - Создается пустая карточка бинго (массив 5x5).
    - Заполняются ячейки карточки случайными уникальными числами от 1 до 75, кроме центральной ячейки, где устанавливается 0.
2. Игровой цикл:
    - Генерируется случайное число от 1 до 75.
    - Выводится сгенерированное число.
    - Игрок просматривает карточку и отмечает выпавшее число, если оно есть.
    - Проверяется, есть ли на карточке линия (горизонталь, вертикаль, диагональ) из 5 отмеченных чисел.
    - Если линия есть, игра заканчивается, игрок победил.
    - Если линии нет, цикл продолжается, генерируется следующее число.
3. Конец игры:
    - Выводится сообщение о победе.

-----------------
Блок-схема:
```mermaid
graph TD
    Start(Start) --> InitializeCard(Инициализация карточки);
    InitializeCard --> GenerateNumber(Генерация случайного числа);
    GenerateNumber --> OutputNumber(Вывод числа);
    OutputNumber --> MarkNumber(Отметить число на карточке);
    MarkNumber --> CheckWin(Проверка на победу);
    CheckWin -- Yes --> EndGame(Конец игры);
    CheckWin -- No --> GenerateNumber;
    EndGame --> OutputWinMessage(Вывод сообщения о победе);
    OutputWinMessage --> End(End);
    style Start fill:#f9f,stroke:#333,stroke-width:2px
    style End fill:#f9f,stroke:#333,stroke-width:2px
```
"""
import random

def create_bingo_card():
    """
    Создает игровую карту бинго с уникальными случайными числами от 1 до 75.
    Центральная ячейка заполняется 0.
    
    Returns:
        list: Двумерный список (массив 5x5), представляющий игровую карту бинго.
    """
    card = [[0 for _ in range(5)] for _ in range(5)] # Инициализируем пустую карту
    numbers = random.sample(range(1, 76), 24)  #  Генерируем 24 случайных уникальных числа
    k = 0
    for i in range(5):
        for j in range(5):
            if i == 2 and j == 2: # Центральную ячейку пропускаем, она всегда 0
                continue
            card[i][j] = numbers[k]
            k += 1
    return card

def print_bingo_card(card, marked_numbers):
    """
    Выводит текущее состояние игровой карты бинго.
    Отмечает отмеченные числа на карте.

    Args:
        card (list): Двумерный список, представляющий игровую карту бинго.
        marked_numbers (set): Множество отмеченных чисел.
    """
    print("------ БИНГО КАРТА ------")
    for row in card:
        print_row = ""
        for number in row:
          if number == 0:
            print_row += "  X " # Центральная ячейка
            continue
          if number in marked_numbers:
            print_row += f"[{number:2}]" # Отмеченные числа в скобках
          else:
            print_row += f" {number:2} " # Неотмеченные числа
        print(print_row)
    print("------------------------")

def check_bingo(card, marked_numbers):
    """
    Проверяет, есть ли на игровой карте бинго линия из 5 отмеченных чисел.
    Линия может быть горизонтальной, вертикальной или диагональной.

    Args:
        card (list): Двумерный список, представляющий игровую карту бинго.
        marked_numbers (set): Множество отмеченных чисел.

    Returns:
        bool: True, если есть линия, иначе False.
    """

    # Проверка горизонталей
    for row in card:
        if all(number in marked_numbers for number in row if number != 0):
            return True

    # Проверка вертикалей
    for col in range(5):
      if all(card[row][col] in marked_numbers for row in range(5) if card[row][col]!=0):
        return True

    # Проверка диагоналей
    if all(card[i][i] in marked_numbers for i in range(5) if card[i][i]!=0):
      return True
    if all(card[i][4-i] in marked_numbers for i in range(5) if card[i][4-i]!=0):
      return True

    return False

def play_bingo():
    """
    Запускает игру в бинго.
    """
    bingo_card = create_bingo_card() # Создаем карточку бинго
    marked_numbers = set() # Инициализируем множество отмеченных чисел
    called_numbers = set()  # Множество уже выпавших чисел

    while True:
        print_bingo_card(bingo_card, marked_numbers) # Выводим карточку бинго
        while True:
            number = random.randint(1, 75) # Генерируем случайное число
            if number not in called_numbers:
              called_numbers.add(number)
              break
            
        print(f"Выпало число: {number}") # Выводим выпавшее число

        # Отмечаем число на карте, если оно там есть
        for row in range(5):
          for col in range(5):
            if bingo_card[row][col] == number:
              marked_numbers.add(number)

        # Проверяем, есть ли линия
        if check_bingo(bingo_card, marked_numbers):
          print_bingo_card(bingo_card, marked_numbers)
          print("БИНГО! Вы победили!")
          break

if __name__ == "__main__":
    play_bingo()
"""
Пояснения:
1. `create_bingo_card()`: 
    - Создает пустую карточку бинго в виде двумерного списка 5x5.
    - Генерирует 24 уникальных случайных числа от 1 до 75 с помощью `random.sample()`.
    - Заполняет карточку этими числами, пропуская центральную ячейку (она всегда 0).
    - Возвращает заполненную карту.

2. `print_bingo_card(card, marked_numbers)`:
    - Выводит текущее состояние карточки бинго.
    - Для каждой ячейки проверяет, находится ли число в множестве `marked_numbers`. Если да, то число заключается в квадратные скобки.
    - Центральная ячейка (0) выводится как " X ".

3. `check_bingo(card, marked_numbers)`:
   - Проверяет, есть ли линия из 5 отмеченных чисел на карточке бинго.
   - Проверяет горизонтальные линии, вертикальные линии и две диагонали.
   - Возвращает `True`, если есть линия, иначе `False`.

4. `play_bingo()`:
   - Основная функция для запуска игры.
   - Создает карточку бинго, инициализирует множество отмеченных чисел и множество выпавших чисел
   - В цикле:
     - Выводит текущее состояние карточки бинго.
     - Генерирует случайное число от 1 до 75, которое еще не выпало.
     - Выводит выпавшее число.
     - Если число есть на карточке, добавляет его в `marked_numbers`.
     - Проверяет, есть ли линия, и если есть, то игра заканчивается, и выводится сообщение о победе.

5. `if __name__ == "__main__":`
    - Запускает игру, если скрипт запущен напрямую.

licence:MIT(../licence)
"""
__author__ = 'hypo69 (hypo69@davidka.net)'
```