Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот JavaScript-код содержит функции для работы с XPath, селекторами CSS и узлами DOM. Он позволяет выполнять XPath-запросы, получать результаты в разных форматах (например, узлы, числа, строки), обрабатывать ошибки и работать с элементами DOM. Код предоставляет методы для сохранения и восстановления атрибутов элементов, создания таблиц, работы с фреймами и др.  Функции предоставляют гибкий и эффективный способ для извлечения, манипулирования и анализа данных на веб-страницах.

Шаги выполнения
-------------------------
1. **Инициализация:** Код объявляет пространство имен `tryxpath.functions` для хранения функций.
2. **Проверка выполнения:**  Проверяет, выполнена ли функция `execExpr` ранее и, если да, пропускает дальнейшее выполнение.
3. **Выполнение запроса:** Функция `fu.execExpr` выполняет запрос (XPath, querySelector или querySelectorAll) по заданному выражению и контексту.
   - Она принимает выражение `expr`, тип запроса `method`, и опции `opts` (например, `context`, `resultType`, `resolver`).
   - В зависимости от `method` выбирается соответствующий способ выполнения запроса (с помощью `evaluate`, `querySelector` или `querySelectorAll`).
4. **Обработка результатов:** Функция `fu.resToArr` преобразует результат запроса в массив.
   - В зависимости от типа результата (`resultType`),  она обрабатывает числовые, строковые, булевы значения, а также итераторы и снимки узлов, преобразуя их в массив.
5. **Возврат результата:**  Функция `fu.execExpr` возвращает объект с массивом результатов (`items`), типом метода (`method`) и типом результата (`resultType`).
6. **Дополнительные функции:** Код включает функции для работы с узлами (получение типа узла, родительских элементов, проверки типа узла, атрибутов),  создания таблиц, работы с фреймами (нахождение фрейма, индекса фрейма), и обработки ошибок.

Пример использования
-------------------------
.. code-block:: javascript

    // Выполнить XPath-запрос
    var result = tryxpath.functions.execExpr(
        "//div[@class='product']",
        "evaluate",
        {
            context: document,
            resultType: xpathResult.ORDERED_NODE_ITERATOR_TYPE
        }
    );

    // Обработать полученные элементы
    if (result.items.length > 0) {
        for (var i = 0; i < result.items.length; i++) {
            var item = result.items[i];
            console.log(item.textContent);
        }
    }


    // Пример использования querySelector
    let elem = tryxpath.functions.execExpr("div.product", "querySelector", {context: document}).items[0];
    console.log(elem.innerText);