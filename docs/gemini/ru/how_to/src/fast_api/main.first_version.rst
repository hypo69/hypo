Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код представляет собой точку входа FastAPI приложения. Он настраивает маршруты для обработки данных из HTML-формы, запуска скрипта Python и вывода результата.  Также код отвечает за открытие HTML-страницы в браузере.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек**: Код импортирует необходимые библиотеки, такие как FastAPI,  Form, Request, HTTPException,  Popen, PIPE, StaticFiles для работы с FastAPI,  для взаимодействия с внешними процессами и др.

2. **Настройка FastAPI приложения**: Создается приложение FastAPI, и каталог html монтируется как статические файлы.

3. **Открытие HTML-страницы в браузере**: Используя `webbrowser.open()`, происходит открытие  `index.html`  в браузере по адресу `http://localhost:8000/html/index.html`.

4. **Обработка POST запроса на /process_data**:
    - Принимает данные `first_name` и `last_name` из HTML-формы.
    - **Проверка валидности**: Проверяет, что оба поля заполнены. Если нет, возвращает ошибку 400.
    - **Формирование входных данных**: Формирует строку входных данных, объединяя `first_name` и `last_name`.
    - **Запуск внешнего скрипта**: Запускает скрипт Python `script.py` с помощью `subprocess.Popen`.  Ввод для скрипта - сформированные входные данные.
    - **Обработка ответа**: Получает результат выполнения скрипта.
    - **Обработка ошибок**: Проверяет код возврата `process.returncode`. Если код не 0, значит произошла ошибка при выполнении скрипта. Возвращает ошибку 500 с подробным сообщением об ошибке.
    - **Возврат результата**: Возвращает результат выполнения скрипта в формате JSON.

5. **Обработка GET запроса на /**:
    - Возвращает сообщение о перенаправлении на `index.html`.


Пример использования
-------------------------
.. code-block:: python

    # Предполагаемый код в HTML-форме:
    <form method="post" action="/process_data">
        <input type="text" name="first_name" placeholder="Имя">
        <input type="text" name="last_name" placeholder="Фамилия">
        <button type="submit">Отправить</button>
    </form>

    # Пример скрипта script.py (для обработки входных данных):
    import sys

    def process_data(input_data):
        # Обработка входных данных
        print(f"Processing data: {input_data}")
        result = f"Hello, {input_data}!"
        return result
    
    input_data = sys.stdin.readline().decode().strip()
    output = process_data(input_data)
    print(output)