Как использовать класс OggConverter для преобразования и загрузки аудио в формате OGG
=========================================================================================

Описание
-------------------------
Этот код определяет класс `OggConverter`, предназначенный для загрузки аудио в формате OGG по URL и преобразования его в MP3.  Класс использует библиотеки `axios`, `fluent-ffmpeg`, `fs` и `path` для выполнения этих операций. Он также содержит методы для удаления временных файлов.

Шаги выполнения
-------------------------
1. **Импортирование необходимых модулей**: Код импортирует необходимые библиотеки: `axios` для работы с HTTP, `createWriteStream` и `fs` для работы с файлами, `path` для работы с путями, `ffmpeg` для преобразования аудио, `installer` для установки FFmpeg, и `removeFile` для удаления файлов.

2. **Инициализация класса `OggConverter`**:  Создается экземпляр класса `OggConverter`.  В конструкторе устанавливается путь к исполняемому файлу FFmpeg.

3. **Метод `toMp3`**: Этот метод преобразует аудиофайл в формате OGG в MP3.
    - Он принимает путь к входному файлу (в формате OGG) и имя выходного файла (в формате MP3).
    - Вычисляет полный путь к выходному файлу (MP3).
    - Использует `ffmpeg` для преобразования файла, задавая опцию `-t 30` для ограничения длительности преобразования 30 секундами.
    - Обрабатывает события `end` и `error` для успешного завершения или обработки ошибок соответственно.
    - В случае успеха, удаляет входной файл (в формате OGG) и возвращает путь к выходному файлу (MP3).

4. **Метод `create`**: Этот метод загружает аудио по URL в формате OGG и сохраняет его на диск.
    - Принимает URL аудио и имя файла.
    - Создаёт полный путь к сохраняемому файлу (в формате OGG).
    - Использует `axios` для загрузки файла по URL.
    - Использует `createWriteStream` для сохранения загруженного потока в файл.
    - Обрабатывает событие `finish` для успешного завершения сохранения и возвращает путь к сохранённому файлу (в формате OGG).
    - Обрабатывает ошибки при загрузке и записи файла.

Пример использования
-------------------------
.. code-block:: javascript
    
    import { ogg } from './ogg.js'; // Импортируем наш класс

    async function convertAndSave() {
        const url = 'https://example.com/audio.ogg'; // URL аудио
        const filename = 'myAudio'; // Имя файла (без расширения)
        try {
            const oggPath = await ogg.create(url, filename); // Загрузка в OGG
            const mp3Path = await ogg.toMp3(oggPath, filename); // Преобразование в MP3
            console.log('Файл успешно преобразован и сохранён:', mp3Path);
        } catch (error) {
            console.error('Ошибка:', error);
        }
    }

    convertAndSave();