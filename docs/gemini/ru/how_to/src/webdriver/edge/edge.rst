Как использовать класс Edge WebDriver
========================================================================================

Описание
-------------------------
Этот код определяет класс `Edge`, который расширяет базовый класс `selenium.webdriver.Edge` для упрощенной настройки WebDriver браузера Edge и использования `fake_useragent`.  Класс `Edge` настраивает WebDriver с пользовательским user-agent, загружает необходимые инструменты для работы с локаторами и JavaScript, и предоставляет методы для взаимодействия с веб-элементами и выполнения JavaScript-кода.  Он также включает обработку потенциальных ошибок во время инициализации WebDriver.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек:** Код импортирует необходимые библиотеки, включая `selenium`, `fake_useragent`, `pathlib`, и другие вспомогательные модули.

2. **Определение константы `MODE`:**  Устанавливается переменная `MODE` со значением 'dev'.  Вероятно, она используется для разных конфигураций в дальнейшем.

3. **Инициализация класса `Edge`:**
   - Создается экземпляр класса `Edge` с необязательным параметром `user_agent`, который может быть словарем для указания пользовательского user-agent, или `None` для случайного user-agent.
   - Загружает настройки из файла `edge.json` с помощью функции `j_loads_ns`.  Этот файл должен содержать путь к исполняемому файлу драйвера Edge.
   - Создает экземпляр `EdgeOptions`.
   - Добавляет `user-agent` в параметры WebDriver.
   - Использует `logger` для вывода информации о запуске и обработке ошибок.
   - Инициализирует `WebDriver` с параметрами `options` и `service`.
   - Вызывает метод `_payload()`.

4. **Обработка ошибок:** Код содержит обработку `WebDriverException` и общих исключений для предотвращения аварийного завершения программы при проблемах с инициализацией WebDriver.

5. **Выполнение `_payload()`:**
   - Загружает инструменты для работы с локаторами и JavaScript.
   - Создаёт необходимые для работы объекты.
   - Присваивает  методы из `ExecuteLocator` и `JavaScript` экземпляру класса `Edge`.

6. **Метод `set_options`:**
   - Создаёт экземпляр `EdgeOptions`.
   - Добавляет переданные параметры в `options`, если они переданы.
   - Возвращает сконфигурированный объект `EdgeOptions`.

Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.webdriver.edge.edge import Edge
    from src import gs  # Подключение к вашему модулю gs


    # Задание user-agent
    user_agent = {'user_agent': 'Мой пользовательский user-agent'}

    # Создание объекта Edge WebDriver
    driver = Edge(user_agent=user_agent)

    # Настройка дополнительных опций (если нужно)
    options = driver.set_options(['--headless', '--window-size=1920,1080'])  # Пример добавления headless режима

    # ... дальнейшее использование driver ...

    driver.quit()