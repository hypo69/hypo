Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код реализует асинхронную публикацию сообщения в Facebook с рекламными данными. Он включает в себя функции для отправки заголовка и описания кампании, загрузки медиафайлов (изображений и видео) и добавления к ним подписей.  Код использует библиотеку Selenium для взаимодействия с веб-сайтом Facebook и обрабатывает возможные ошибки, такие как проблемы со скроллингом, открытием формы добавления сообщения, загрузки медиа и ошибками в процессе добавления подписей к изображениям.

Шаги выполнения
-------------------------
1. **Загрузка локализованных строк:** Код загружает локализованные строки (например, названия категорий, цен, скидок) из файла `translations.json` для использования в подписях к изображениям.

2. **Определение заголовка и описания:** Функция `post_title` принимает объект `Driver` и `SimpleNamespace` с информацией о заголовке и описании кампании. Она прокручивает страницу, открывает форму добавления сообщения, формирует сообщение из заголовка и описания и добавляет его в форму. Функция возвращает `True`, если все шаги выполнены успешно, и `None` в случае ошибки.

3. **Загрузка медиафайлов:** Функция `upload_media` принимает объект `Driver` и список объектов `SimpleNamespace` с информацией о медиафайлах (пути к изображениям/видео). Она открывает форму загрузки медиафайлов (если она ещё не открыта), загружает каждый медиафайл и устанавливает задержку. После загрузки всех файлов, функция открывает форму редактирования подписей к загруженным медиафайлам, и асинхронно добавляет подписи к каждому загруженному файлу. Функция возвращает `True` при успешной загрузке и обработке ошибок в процессе загрузки.

4. **Асинхронное добавление подписей:** Функция `update_images_captions` асинхронно добавляет подписи к изображениям, используя функцию `handle_product` для синхронного добавления подписей к каждому продукту. Она использует локализованные строки из файла `translations.json` для формирования подписей в зависимости от выбранного языка.

5. **Публикация сообщения:** Функция `promote_post` объединяет все предыдущие шаги:  принимает заголовок, описание и список товаров, вызываем функции `post_title` и `upload_media`. После успешного выполнения данных функций, функция `promote_post` выполняет публикацию сообщения, возвращая `True` при успешной публикации и `None` при ошибке.


Пример использования
-------------------------
.. code-block:: python

    import asyncio
    from src.webdriver import Driver
    from pathlib import Path
    from types import SimpleNamespace
    from src.endpoints.advertisement.facebook.scenarios.post_message_async import promote_post

    async def main():
        # Инициализация драйвера
        driver = Driver(...) 

        # Данные для публикации
        category = SimpleNamespace(title="Campaign Title", description="Campaign Description")
        products = [
            SimpleNamespace(local_saved_image=str(Path('./image1.jpg')), product_title="Product 1", original_price=100, sale_price=90, language="en"),
            SimpleNamespace(local_saved_image=str(Path('./image2.png')), product_title="Product 2", original_price=200, sale_price=180, language="en"),
        ]

        # Публикация
        success = await promote_post(driver, category, products)
        if success:
            print("Пост успешно опубликован.")
        else:
            print("Ошибка при публикации поста.")

    asyncio.run(main())