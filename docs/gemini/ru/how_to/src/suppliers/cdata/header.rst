Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root()`, которая находит корневую директорию проекта.  Функция ищет в текущей директории и в родительских директориях файлы (или директории), указанные в аргументе `marker_files` (по умолчанию это 'pyproject.toml', 'requirements.txt', '.git').  Если корневой каталог найден, он добавляется в `sys.path` для возможности импорта модулей.  Далее код загружает настройки из файла `settings.json` и описание проекта из `README.MD` в переменные.  Наконец, он определяет переменные с информацией о проекте (`__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__`) , получая данные из загруженных настроек или используя значения по умолчанию, если файлы не найдены или настройки отсутствуют.


Шаги выполнения
-------------------------
1. **Инициализация:**  Функция `set_project_root` получает корневой каталог проекта.
2. **Поиск корневого каталога:** Код ищет родительские каталоги от текущей директории, пока не найдёт каталог, содержащий указанные файлы (`pyproject.toml`, `requirements.txt`, `.git`).
3. **Добавление в sys.path:** Если корневой каталог найден, он добавляется в `sys.path`. Это необходимо для корректного импорта модулей из проекта.
4. **Загрузка настроек:** Код пытается загрузить настройки из файла `settings.json` в переменную `settings`.
5. **Обработка ошибок загрузки настроек:** Если файл `settings.json` не найден или некорректный, используется блок `except` и устанавливаются значения по умолчанию.
6. **Загрузка документации:** Код пытается загрузить текст документации из файла `README.MD` в переменную `doc_str`.
7. **Обработка ошибок загрузки документации:** Если файл `README.MD` не найден или некорректный, используется блок `except` и устанавливается пустое значение.
8. **Установка переменных проекта:** Код извлекает значения из `settings`, если они есть, иначе использует значения по умолчанию, и сохраняет их в переменные `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__`.

Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.suppliers.cdata.header import set_project_root

    #  Предположим, что в файле pyproject.toml и requirements.txt есть нужные данные
    project_root = set_project_root()
    print(project_root)  # Выведет путь к корневому каталогу
    print(__project_name__) # Выведет значение из settings.json или по умолчанию
    print(__version__)      # Выведет значение из settings.json или по умолчанию