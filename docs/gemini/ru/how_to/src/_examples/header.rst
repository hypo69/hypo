Как использовать этот блок кода
========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root()`, которая находит корневую директорию проекта. Функция ищет директории, содержащие определенные маркерные файлы (например, `pyproject.toml`, `requirements.txt`, `.git`), начиная с текущей директории и поднимаясь вверх по дереву директорий. Если такие файлы найдены, функция возвращает путь к корневой директории проекта; в противном случае - возвращает директорию, в которой находится файл скрипта.  Также код добавляет корневую директорию проекта в системный путь `sys.path`. После нахождения корневой директории, он загружает настройки из файла `settings.json` и документирующий текст из файла `README.MD` в переменные `settings` и `doc_str`, соответственно. Если файлы не найдены, эти переменные остаются пустыми. Код определяет переменные для имени проекта, версии, документации, подробностей, автора, копирайта и ссылки для поддержки разработчика.

Шаги выполнения
-------------------------
1. Функция `set_project_root()` принимает кортеж `marker_files` с именами файлов, по которым определяется корневая директория.
2. Начинает поиск корня проекта с текущей директории и поднимается вверх по дереву директорий.
3. Для каждой родительской директории проверяется существование указанных маркерных файлов.
4. Если какой-либо маркерный файл найден, функция возвращает путь к родительской директории.
5. Если корневая директория не была найдена, функция возвращает текущую директорию.
6. Если корневая директория найдена, она добавляется в `sys.path`.
7. Загружает настройки из файла `settings.json`.
8. Загружает текстовую документацию из файла `README.MD`.
9. Определяет переменные проекта (имя, версия, документация, автор, копирайт и ссылка).

Пример использования
-------------------------
.. code-block:: python

    import os
    from pathlib import Path

    # Пример использования функции set_project_root
    current_dir = Path(__file__).resolve().parent
    project_root = set_project_root()
    print(f"Текущая директория: {current_dir}")
    print(f"Корень проекта: {project_root}")

    # Пример проверки существования файлов в корне проекта
    settings_file_path = project_root / "src" / "settings.json"
    if settings_file_path.exists():
        print(f"Файл настроек '{settings_file_path}' существует")
    else:
        print(f"Файл настроек '{settings_file_path}' не найден")

    # Пример работы с загруженными данными
    print(f"Имя проекта: {__project_name__}")