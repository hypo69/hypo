Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет подкласс `webdriver.Firefox` под названием `Firefox`. Он предоставляет дополнительную функциональность, такую как запуск Firefox в режиме киоска и настройку профиля Firefox для WebDriver. Код также загружает исполнители для локаторов и сценариев JavaScript. Он использует конфигурацию из файла `firefox.json` для настройки драйвера Firefox.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек**: Код импортирует необходимые библиотеки, такие как `selenium.webdriver`, `pathlib`, `typing`, `fake_useragent`,  и другие, для работы с браузером Firefox и его настройкой.
2. **Определение класса `Firefox`**: Определяется подкласс `WebDriver` с именем `Firefox`. Этот класс настраивает WebDriver, используя параметры из файла конфигурации `firefox.json`.
3. **Настройка сервиса `Service`**: Создает экземпляр класса `Service`, используя путь к исполняемому файлу geckodriver, полученный из файла конфигурации.
4. **Настройка опций `Options`**: Создает экземпляр класса `Options`.  Настраивает дополнительные параметры запуска Firefox, включая аргументы из файла конфигурации (например, режимы).  Устанавливает случайный пользовательский агент.
5. **Настройка профиля `FirefoxProfile`**: Создает экземпляр класса `FirefoxProfile`.  Настраивает директорию профиля Firefox. Если задан параметр `profile_name`, добавляет имя профиля в путь к профилю. Использует конфигурацию из файла `firefox.json` для настройки профиля.
6. **Инициализация WebDriver**: Используя параметры `service` и `options`, инициализирует экземпляр WebDriver (Firefox).  Инициализирует вспомогательные функции (javascript, локэйторы).
7. **Обработка исключений**: Обрабатывает потенциальные исключения при запуске драйвера, например, если Firefox не установлен или не найден.
8. **Инициализация JavaScript и исполнителей локаторов**: Загружает JavaScript и исполнителей для локаторов.  Инициализирует необходимые методы для работы с страницей.
9. **Примеры использования**: Приведен пример использования класса `Firefox`, демонстрирующий как его запустить, получить доступ к странице и закрыть браузер.

Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.webdriver.firefox import Firefox

    # Пример использования
    if __name__ == "__main__":
        profile_name = "custom_profile"
        geckodriver_version = "v0.29.0"
        firefox_version = "78.0"
        
        browser = Firefox(profile_name=profile_name, geckodriver_version=geckodriver_version, firefox_version=firefox_version)
        browser.get("https://www.example.com")
        browser.quit()