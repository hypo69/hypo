Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код JavaScript отвечает за загрузку и сохранение настроек расширения Firefox, использующего библиотеку tryxpath.  Он загружает значения атрибутов, CSS стилей и стилей для всплывающего окна.  Затем код валидирует введенные данные и сохраняет их в хранилище браузера.  Также предусмотрена возможность сброса настроек к значениям по умолчанию.

Шаги выполнения
-------------------------
1. **Инициализация переменных:** Код определяет переменные, связанные с элементами интерфейса (например, input полями для атрибутов, textarea для CSS).

2. **Загрузка текущих настроек:** Используется `browser.runtime.sendMessage` для получения текущих настроек из другого компонента расширения. Полученные данные заполняют соответствующие поля интерфейса.

3. **Обработка события `click` на кнопке "Сохранить":**
    - Получает значения из полей интерфейса.
    - Проверяет валидность введенных атрибутов и CSS стилей (isValidAttrNames, isValidStyleLength). Если валидация не пройдена, отображает сообщение об ошибке.
    - Собирает данные в объект `attrs` для атрибутов и `bodyStyles` для стилей.
    - Использует `createPopupCss` для генерации CSS для всплывающего окна.
    - Сохраняет настройки в хранилище браузера с помощью `browser.storage.sync.set`.
    - Выводит сообщение о успешном или неуспешном сохранении.

4. **Обработка события `click` на кнопке "Показать значения по умолчанию":**
    - Устанавливает значения атрибутов и стилей в интерфейсе на значения по умолчанию.
    - Использует функцию `loadDefaultCss` для загрузки CSS файла по умолчанию и установки его в соответсвующее поле.

5. **Валидация атрибутов:** Функция `isValidAttrName` проверяет, возможно ли присвоить атрибут элементу, а `isValidAttrNames` проверяет валидность всех атрибутов.

6. **Валидация стилей:** Функция `isValidStyleLength` проверяет, являются ли значения ширины и высоты стилей валидными.

7. **Загрузка CSS:** Функция `loadDefaultCss` загружает CSS файл из `/css/try_xpath_insert.css` и возвращает его содержимое как promise.

8. **Извлечение стилей:** Функция `extractBodyStyles` извлекает значения ширины и высоты из CSS кода.

9. **Создание CSS:** Функция `createPopupCss` создает CSS строку для всплывающего окна на основе полученных стилей.

Пример использования
-------------------------
.. code-block:: javascript
    // Предположим, у нас есть поля с id: "element-attribute", "style"
    // и кнопка с id: "save".

    // Пример установки значения в поле "element-attribute"
    document.getElementById("element-attribute").value = "my-element";

    // Пример события при нажатии на кнопку сохранения
    document.getElementById("save").addEventListener("click", () => {
        // ... (код сохранения настроек)
    });

    // Пример сохранения настроек по умолчанию
    document.getElementById("show-default").addEventListener("click", () => {
        // ... (код сохранения настроек по умолчанию)
    });