Как использовать класс Supplier
========================================================================================

Описание
-------------------------
Класс `Supplier` служит основой для взаимодействия с различными поставщиками данных (например, интернет-магазинами). Он предоставляет методы для инициализации, настройки, аутентификации и выполнения сценариев для разных источников данных.  Класс абстрагирует работу с различными источниками данных, обеспечивая единообразный интерфейс для работы с разными поставщиками.

Шаги выполнения
-------------------------
1. **Инициализация объекта `Supplier`:**
   Создайте экземпляр класса `Supplier`, передавая необходимые параметры:
   - `supplier_prefix`:  Уникальный идентификатор поставщика (строка, например, 'amazon').
   - `locale`: Код локализации (по умолчанию 'en').
   - `webdriver`:  Тип WebDriver для взаимодействия с веб-сайтом поставщика.  Можно указать строку ('chrome', 'firefox'), объект `Driver`, или булевое значение, указывающее, что использовать по умолчанию.

   Пример:

   ```python
   supplier = Supplier(supplier_prefix='aliexpress', locale='ru', webdriver='chrome')
   ```

2. **Загрузка настроек и инициализация WebDriver:**
   Вызовите метод `_payload` для загрузки настроек, локаторов и инициализации WebDriver.

   Пример:

   ```python
   supplier._payload(webdriver='firefox')
   ```

3. **Выполнение аутентификации (при необходимости):**
   Если требуется аутентификация на сайте поставщика, вызовите метод `login`.

   Пример:

   ```python
   supplier.login()
   ```

4. **Выполнение сценариев:**
   - **Выполнение сценариев по файлам:** Вызовите метод `run_scenario_files`, передавая список путей к файлам сценариев.

   Пример:

   ```python
   supplier.run_scenario_files(['scenario_1.json', 'scenario_2.json'])
   ```
   - **Выполнение отдельных сценариев:** Вызовите метод `run_scenarios`, передавая список или словарь сценариев.

   Пример:

   ```python
   supplier.run_scenarios([{'action': 'scrape', 'target': 'product_list'}])
   ```

   В каждом сценарии необходимо определить необходимые действия и параметры.


Пример использования
-------------------------
.. code-block:: python

    from suppliers import Supplier  # Предполагается, что модуль Supplier импортирован

    # Создание экземпляра класса Supplier для поставщика "amazon"
    supplier = Supplier(supplier_prefix='amazon', locale='ru', webdriver='chrome')

    # Загрузка настроек и инициализация WebDriver
    supplier._payload(webdriver='firefox')

    # Выполнение аутентификации (если требуется)
    supplier.login()

    # Выполнение сценария из файла
    supplier.run_scenario_files(['product_scrape.json'])

    # Выполнение списка сценариев (с указанием действий)
    supplier.run_scenarios([
        {'action': 'scrape', 'target': 'category_page'},
        {'action': 'get_prices', 'target': 'specific_product'}
    ])
```