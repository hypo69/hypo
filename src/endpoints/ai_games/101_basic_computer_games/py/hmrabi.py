"""
<HMRABI>:
=================
Сложность: 6
-----------------
Игра HMRABI имитирует управление древним городом Хаммурапи. Игрок, выступая в роли правителя, должен принимать решения о покупке и продаже земли, а также о количестве зерна для посева и содержания населения. Цель игры - продержаться 10 лет, не допустив голода и массового недовольства, при этом эффективно управляя ресурсами города. Игрок должен балансировать между текущими потребностями и долгосрочными инвестициями, чтобы обеспечить процветание и рост города.
Правила игры:
-----------------
1. Игра длится 10 лет.
2. Игрок начинает с определенным количеством земли, зерна и населения.
3. Каждый год игрок должен:
    - Решить, сколько земли купить или продать.
    - Решить, сколько зерна скормить населению.
    - Решить, сколько зерна посеять.
4. Если население не получит достаточно зерна для пропитания, то часть людей умрет от голода.
5. Если посевы окажутся неудачными, можно потерять зерно.
6. Эффективное управление ресурсами и посевами поможет увеличить население и сохранить город.
7. В конце каждого года игрок получает отчет о состоянии города.
8. Цель игры - продержаться 10 лет, поддерживая население и развивая город.
-----------------
Алгоритм:
-----------------
1. Инициализация переменных:
   - Год (year) = 1
   - Количество умерших от голода (starved) = 0
   - Количество прибывших новых людей (immigrants) = 5
   - Количество населения (population) = 100
   - Количество земли (land) = 1000
   - Количество зерна (grain) = 2800
   - Цена за единицу земли (land_price) = 19
2. Игровой цикл (повторяется 10 раз, для каждого года):
    - Вывести год.
    - Вывести статистику города (количество умерших, прибывших, население, земли, зерна).
    - Вычислить и вывести цену за единицу земли на этот год.
    - Запросить у игрока сколько земли купить или продать.
    - Обновить количество земли и зерна в соответствии с решением игрока.
    - Запросить у игрока сколько зерна скормить населению.
    - Вычислить сколько людей умерло от голода (если зерна не хватило).
    - Обновить население.
    - Запросить у игрока сколько зерна посеять.
    - Вычислить урожай.
    - Обновить количество зерна.
    - Вычислить количество иммигрантов.
    - Обновить население.
    - Обновить год.
3. Конец игры (выводится сообщение о завершении).
-----------------
Блок-схема:
```mermaid
graph TD
    A[Start] --> B{year <= 10};
    B -- Yes --> C[Output: year, starved, immigrants, population, land, grain, land_price];
    C --> D[Input: land_to_buy_sell];
    D --> E{land_to_buy_sell * land_price > grain};
    E -- Yes --> F[Output: Not enough grain];
    F --> D
    E -- No --> G[Update: land, grain];
    G --> H[Input: grain_to_feed];
    H --> I{grain_to_feed < population * 20};
    I -- Yes --> J[starved = (population * 20 - grain_to_feed) / 20];
    J --> K[Output: people starved];
    I -- No --> K;
     K --> L[Update: population];
    L --> M[Input: grain_to_sow];
     M --> N{grain_to_sow > grain};
    N -- Yes --> O[Output: not enough grain];
    O --> M
    N -- No --> P[Update: grain, harvest];
    P --> Q[immigrants = (20 * population * random number between 0 and 1 + 1) / 100];
    Q --> R[Update: population];
    R --> S[year = year + 1];
     S --> B;
    B -- No --> T[End];
```
"""
import random

def hmrabigame():
    """
    Игра HMRABI: Управление древним городом.

    Эта игра позволяет игроку управлять городом, принимать решения о покупке и продаже земли,
    распределении зерна для населения и посева. Цель игры - продержаться 10 лет, эффективно управляя ресурсами города.
    """
    year = 1 # Текущий год
    starved = 0 # Количество умерших от голода
    immigrants = 5 # Количество прибывших новых людей
    population = 100 # Количество населения
    land = 1000 # Количество земли
    grain = 2800 # Количество зерна
    land_price = 19 # Цена за единицу земли

    for year in range(1, 11): # Игровой цикл для 10 лет
        print(f"\nГод {year}")
        print(f"Людей умерло с голоду: {starved}")
        print(f"Новых людей прибыло: {immigrants}")
        print(f"Население города: {population}")
        print(f"Площадь земли: {land} акров")
        print(f"Запасы зерна: {grain} бушелей")
        land_price = random.randint(17, 23) # Случайное изменение цены земли
        print(f"Цена за акр земли: {land_price} бушелей")

        # Обработка ввода покупки/продажи земли
        while True:
            land_to_buy_sell = int(input("Сколько акров земли купить(+)/продать(-)? "))
            if land_to_buy_sell * land_price > grain:
              print("У вас не достаточно зерна, чтобы совершить эту сделку.")
            else:
              break
        land += land_to_buy_sell
        grain -= land_to_buy_sell * land_price


        # Обработка ввода зерна для питания
        grain_to_feed = int(input("Сколько зерна скормить населению? "))
        if grain_to_feed < population * 20:
            starved = (population * 20 - grain_to_feed) // 20 # Рассчет умерших
            print(f"{starved} человек умерло от голода.")
        else:
            starved = 0
        population -= starved # Обновление популяции
        if population <= 0:
          print("Все население города умерло")
          break

        # Обработка ввода зерна для посева
        while True:
            grain_to_sow = int(input("Сколько зерна посеять? "))
            if grain_to_sow > grain:
              print("У вас не достаточно зерна для посева.")
            else:
              break

        grain -= grain_to_sow # Уменьшение запасов зерна
        harvest = grain_to_sow * random.randint(1, 5) # Случайный урожай
        grain += harvest # Увеличение запасов зерна

        immigrants = int((20 * population * (random.random() + 1)) / 100) # Рассчет иммигрантов
        population += immigrants # Обновление популяции

    if population > 0:
        print("\nВы успешно правили городом 10 лет!")

if __name__ == "__main__":
    hmrabigame()
"""
Пояснения:
=================
* `year`: целое число, представляющее текущий год игры.
* `starved`: целое число, представляющее количество людей, умерших от голода в текущем году.
* `immigrants`: целое число, представляющее количество людей, иммигрировавших в город в текущем году.
* `population`: целое число, представляющее текущее население города.
* `land`: целое число, представляющее количество земли в городе в акрах.
* `grain`: целое число, представляющее количество зерна в городе в бушелях.
* `land_price`: целое число, представляющее текущую цену за акр земли в бушелях.
* `land_to_buy_sell`: целое число, введенное пользователем, представляющее количество акров земли, которые нужно купить (положительное значение) или продать (отрицательное значение).
* `grain_to_feed`: целое число, введенное пользователем, представляющее количество зерна, которое нужно скормить населению.
* `grain_to_sow`: целое число, введенное пользователем, представляющее количество зерна, которое нужно посеять.
* `harvest`: целое число, представляющее количество зерна, полученного от урожая.
* `random.randint(17, 23)`: функция из модуля `random`, генерирующая случайное целое число от 17 до 23 для изменения цены земли.
* `random.randint(1, 5)`: функция из модуля `random`, генерирующая случайное целое число от 1 до 5 для расчета урожая.
* `random.random()`: функция из модуля `random`, генерирующая случайное число от 0 до 1 для расчета иммигрантов.

Функция `hmrabigame()`:
    - Инициализирует переменные состояния игры: год, количество умерших от голода, иммигрантов, населения, земли и зерна.
    - Запускает цикл for, который повторяется 10 раз (10 лет игры).
    - Внутри цикла:
      - Выводит на экран текущий год и статистику города.
      - Генерирует случайную цену за землю.
      - Запрашивает у пользователя, сколько земли он хочет купить или продать.
      - Обновляет количество земли и зерна на основе ввода пользователя.
      - Запрашивает у пользователя, сколько зерна он хочет скормить населению.
      - Вычисляет количество умерших от голода, если зерна недостаточно.
      - Обновляет население на основе количества умерших от голода.
      - Запрашивает у пользователя, сколько зерна он хочет посеять.
      - Обновляет количество зерна и вычисляет урожай.
      - Вычисляет количество новых иммигрантов.
      - Обновляет население на основе количества иммигрантов.
      - Увеличивает год на 1.
    - После завершения цикла, игра выводит сообщение о том, что игрок успешно правил городом в течение 10 лет.
    - Если популяция меньше 0, то выводит сообщение о том, что все население города умерло

Блок `if __name__ == "__main__":`
    -  Этот блок кода гарантирует, что функция `hmrabigame()` будет вызываться только при запуске скрипта напрямую.
licence:MIT(../licence)
"""
__author__ = 'hypo69 (hypo69@davidka.net)'