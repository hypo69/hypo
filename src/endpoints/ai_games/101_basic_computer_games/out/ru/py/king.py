"""
KING:
=================
Сложность: 4
-----------------
Игра "Король" - это текстовая игра, в которой игрок пытается угадать, где прячется король на шахматной доске 3x3. 
Король случайным образом помещается в одну из девяти клеток, и игрок должен вводить координаты клетки, чтобы угадать, где он находится. 
После каждой попытки игроку сообщают, находится ли король в указанной клетке или нет. Игра заканчивается, когда игрок угадывает местоположение короля.

Правила игры:
1. Король случайным образом помещается в одну из девяти клеток на шахматной доске 3x3.
2. Игрок вводит координаты клетки (например, "1,1", "2,3"), где, по его мнению, находится король.
3. Если координаты совпадают с местоположением короля, игра заканчивается.
4. Если координаты не совпадают, игрок может сделать следующую попытку.
5. Игра продолжается до тех пор, пока игрок не угадает местоположение короля.
-----------------
Алгоритм:
1.  Случайно выбрать местоположение короля (строку и столбец) на доске 3x3 (от 1 до 3).
2.  Начать цикл "пока король не найден":
3.  Запросить у игрока ввод координат клетки в формате "строка,столбец".
4.  Преобразовать введенные координаты в целые числа (строку и столбец).
5.  Если введенные координаты совпадают с местоположением короля, вывести сообщение "Вы нашли короля!".
6.  Если введенные координаты не совпадают с местоположением короля, вернуться к шагу 2.
7.  Конец игры.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InitializeKingPosition["<p align='left'>Инициализация позиции короля:<br><code><b>kingRow = random(1, 3)</b></code><br><code><b>kingCol = random(1, 3)</b></code></p>"]
    InitializeKingPosition --> LoopStart{"Начало цикла: пока король не найден"}
    LoopStart --> InputCoordinates["Ввод координат пользователем: <code><b>userRow, userCol</b></code>"]
    InputCoordinates --> CheckMatch{"Проверка: <code><b>userRow == kingRow и userCol == kingCol?</b></code>"}
    CheckMatch -- Да --> OutputWin["Вывод сообщения: <b>Вы нашли короля!</b>"]
    OutputWin --> End["Конец"]
    CheckMatch -- Нет --> LoopStart
    LoopStart -- Нет --> End
```

Legenda:
    Start - Начало программы.
    InitializeKingPosition - Инициализация позиции короля: kingRow (строка короля) и kingCol (столбец короля) выбираются случайным образом в диапазоне от 1 до 3.
    LoopStart - Начало цикла, который продолжается, пока король не найден.
    InputCoordinates - Запрос у пользователя ввода координат (строки и столбца) клетки.
    CheckMatch - Проверка, совпадают ли введенные пользователем координаты с позицией короля.
    OutputWin - Вывод сообщения о победе, если координаты совпадают.
    End - Конец программы.
"""
import random

# Генерируем случайную позицию короля на доске 3x3
kingRow = random.randint(1, 3)  # Строка короля от 1 до 3
kingCol = random.randint(1, 3)  # Столбец короля от 1 до 3


# Основной игровой цикл
while True:
    try:
        # Запрашиваем ввод координат у игрока
        coordinates = input("Введите координаты (строка, столбец) от 1 до 3, разделенные запятой: ").split(',')
        userRow = int(coordinates[0].strip()) # Получаем строку и удаляем пробелы
        userCol = int(coordinates[1].strip()) # Получаем столбец и удаляем пробелы
        
        # Проверяем, соответствуют ли введенные координаты позиции короля
        if userRow == kingRow and userCol == kingCol:
            print("Вы нашли короля!")
            break  # Завершаем игру
        else:
           print("Промах! Попробуйте еще раз!")

    except (ValueError, IndexError):
        print("Некорректный ввод. Пожалуйста, введите два числа от 1 до 3, разделенные запятой, например 1,2")


"""
Пояснения:
1.  **Импорт модуля `random`**:
    -   `import random`: Импортирует модуль для генерации случайных чисел.
2. **Генерация позиции короля**:
    -   `kingRow = random.randint(1, 3)`:  Генерирует случайную строку для позиции короля (1, 2 или 3).
    -   `kingCol = random.randint(1, 3)`:  Генерирует случайный столбец для позиции короля (1, 2 или 3).
3.  **Основной игровой цикл**:
    -   `while True:`:  Бесконечный цикл, продолжающийся до тех пор, пока игрок не угадает позицию короля.
    -   **Обработка ввода пользователя**:
        -   `try:`: Блок для отлова ошибок ввода.
        -  `coordinates = input("Введите координаты (строка, столбец) от 1 до 3, разделенные запятой: ").split(',')`: Запрашивает у пользователя ввод координат, разделенных запятой, и разделяет ввод на два значения.
        -  `userRow = int(coordinates[0].strip())`: Преобразует первую часть ввода в целое число (строка).
        - `userCol = int(coordinates[1].strip())`: Преобразует вторую часть ввода в целое число (столбец).
    -   **Проверка на совпадение**:
        -   `if userRow == kingRow and userCol == kingCol:`: Сравнивает координаты, введенные пользователем, с позицией короля.
        -   `print("Вы нашли короля!")`: Выводит сообщение о победе, если координаты совпали.
        -   `break`: Завершает цикл, если король найден.
    -   **Сообщение о промахе**:
        -  `else:`: Если координаты не совпадают.
        -  `print("Промах! Попробуйте еще раз!")`: Выводит сообщение о том, что игрок не угадал позицию короля.
     -   **Обработка ошибок ввода**:
        -   `except (ValueError, IndexError):`: Обрабатывает ошибки, возникающие при неправильном вводе (не число или недостаточно значений).
        -   `print("Некорректный ввод. Пожалуйста, введите два числа от 1 до 3, разделенные запятой, например 1,2")`: Выводит сообщение об ошибке ввода.

"""
```