Как использовать этот блок кода
=========================================================================================\n

Описание
-------------------------
Этот код предназначен для подготовки рекламных кампаний на AliExpress. Он инициализирует кампанию, задавая имя, язык и валюту, создаёт директории для кампании и категорий, сохраняет конфигурацию кампании, собирает данные о продуктах, сохраняет данные продуктов, создаёт рекламные материалы, проверяет готовность кампании и, если она готова, публикует её.  Код использует библиотеки `asyncio`, `pathlib`, `typing` и др. для асинхронной обработки и работы с файлами.  Он определяет функции для обработки отдельных категорий и всей кампании. Использование аргументов командной строки позволяет гибко задавать параметры для обработки.

Шаги выполнения
-------------------------
1. **Импорт необходимых библиотек:** Код импортирует необходимые модули для работы с файлами, асинхронностью, обработкой аргументов командной строки и логированием.

2. **Определение констант и функций:** Определяются константы, такие как путь к каталогу с кампаниями, и функции `update_category`, `process_campaign_category` и `process_campaign` для обработки категорий и всей кампании.  Функции `j_loads` и `j_dumps` используются для работы с JSON-данными.

3. **Обработка аргументов командной строки:** Код использует `argparse` для получения имени кампании, списка категорий, языка и валюты из командной строки.

4. **Инициализация кампании:**  Создаётся объект `AliPromoCampaign`, который хранит информацию о кампании (имя, категории, язык, валюта, флаг принудительного обновления).

5. **Обновление категории:** Функция `update_category` обновляет JSON-конфигурацию категории в файле.

6. **Обработка категории кампании:** Функция `process_campaign_category` обрабатывает отдельную категорию кампании, вызывая функцию `update_category`.

7. **Обработка всей кампании:** Функция `process_campaign` обрабатывает все категории кампании с использованием асинхронного механизма `asyncio`.

8. **Асинхронная обработка:** Функция `main` организует асинхронную работу с использованием `asyncio.gather`, позволяя обрабатывать категории кампании одновременно.

9. **Запуск программы:** В блоке `if __name__ == "__main__":` код парсит аргументы командной строки, запускает асинхронную обработку `main` и ждёт её завершения.


Пример использования
-------------------------
.. code-block:: bash

    python src/suppliers/aliexpress/campaigns/prepare_campaigns.py summer_sale -c electronics -l EN -cu USD -f

В этом примере запускается подготовка рекламной кампании `summer_sale` с категорией `electronics`, языком `EN` и валютой `USD`, принудительно обновляя данные (`-f`).  Другие опции (`-c`, `-l`, `-cu`, `-f`) позволяют указать список категорий, язык, валюту и флаг принудительного обновления соответственно.