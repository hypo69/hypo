Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root`, которая находит корневую директорию проекта, начиная с текущего файла.  Он ищет файлы (или директории) `pyproject.toml`, `requirements.txt` и `.git` в родительских директориях текущего файла, пока не найдет директорию, содержащую хотя бы один из этих файлов.  Затем он добавляет эту директорию в переменную `sys.path` для импорта модулей из других папок проекта. Далее код загружает настройки из файла `settings.json` и документацию из `README.MD`, если они существуют.  Если файлы не найдены, возвращает значения по умолчанию.  Наконец, он определяет переменные, хранящие имя проекта, версию, документацию, детали, автора, копирайт и ссылку для поддержки разработчика.


Шаги выполнения
-------------------------
1. **Импортирует необходимые библиотеки:** `sys`, `json`, `pathlib`, `packaging.version` для работы с файлами, путями и версиями.
2. **Определяет функцию `set_project_root`:** Эта функция принимает список файлов-маркеров, указывающих на корень проекта.
3. **Находит корень проекта:**  Функция начинает поиск в текущей директории и переходит к родительским директориям, пока не найдёт директорию, содержащую хотя бы один из заданных маркеров (файлов).
4. **Добавляет корень проекта в `sys.path`:** Если найденный корень не присутствует в `sys.path`, то функция добавляет его, чтобы Python мог импортировать модули из этого проекта.
5. **Возвращает корень проекта:** Функция возвращает найденный корень проекта в виде объекта `Path`.
6. **Инициализирует переменную `__root__`:** Вызывает `set_project_root()` для определения корневой директории проекта.
7. **Загружает настройки:** Пытается загрузить данные из файла `settings.json` в переменную `settings`.
8. **Загружает документацию:** Пытается загрузить текст из файла `README.MD` в переменную `doc_str`.
9. **Инициализирует переменные:**  Присваивает значения переменным `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__` и `__cofee__` на основе загруженных настроек или значения по умолчанию, если файл не найден или содержит некорректные данные.

Пример использования
-------------------------
.. code-block:: python

    # Предполагается, что в текущей директории есть файлы pyproject.toml, requirements.txt и settings.json
    from hypotez.src.webdriver.header import set_project_root
    
    root_path = set_project_root()
    print(f"Root directory: {root_path}")
    print(f"Project name: {__project_name__}") #Доступ к переменной, определенной в файле
    print(f"Version: {__version__}")
    
    #Пример работы с __doc__
    if __doc__:
        print("\nProject Documentation:")
        print(__doc__)