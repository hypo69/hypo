Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код определяет функцию `set_project_root()`, которая находит корневую директорию проекта, начиная с текущей директории и поднимаясь вверх по дереву директорий.  Он ищет файлы или директории, указанные в аргументе `marker_files`, и останавливается, как только найдёт директорию, содержащую хотя бы один из этих файлов или директорий.  Затем, если корневая директория не в пути Python, она добавляется в `sys.path`.  Далее код загружает настройки из файла `settings.json` и документацию из `README.MD`, а также задаёт значения для переменных `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, `__cofee__` исходя из этих данных или предоставляет значения по умолчанию, если соответствующие файлы не найдены или в них отсутствует необходимая информация.

Шаги выполнения
-------------------------
1. **Определение функции `set_project_root`**: Код определяет функцию `set_project_root`, принимающую кортеж `marker_files` в качестве аргумента.  Функция определяет текущую директорию и устанавливает её как начальное значение для корневой директории.
2. **Поиск корневой директории**: Код итерируется по родительским директориям текущей директории, проверяя наличие файлов или директорий из списка `marker_files`. Если какой-либо из указанных файлов или директорий находится в текущей или родительской директории, корневая директория обновляется до родительской.
3. **Добавление корневой директории в `sys.path`**:  Если корневая директория не присутствует в пути Python, она добавляется в начало списка `sys.path`.
4. **Возврат корневой директории**: Функция возвращает найденную корневую директорию.
5. **Получение корневой директории проекта**:  Вызывается функция `set_project_root()` для получения корневой директории. Результат сохраняется в переменной `__root__`.
6. **Загрузка настроек**: Код пытается открыть файл `settings.json` в корневой директории проекта и загрузить данные из него в переменную `settings` с помощью `json.load()`.  Если файл не найден или формат данных неверен, обрабатывается исключение `FileNotFoundError` или `json.JSONDecodeError` и `settings` остается `None`.
7. **Загрузка документации**: Код пытается открыть файл `README.MD` в корневой директории и считать его содержимое в переменную `doc_str`. Если файл не найден или формат данных неверен, обрабатывается исключение `FileNotFoundError` или `json.JSONDecodeError` и `doc_str` остается `None`.
8. **Установка значений переменных**:  Значения переменных `__project_name__`, `__version__`, `__doc__`, `__details__`, `__author__`, `__copyright__`, и `__cofee__` устанавливаются на основе данных из `settings` (или принимают значения по умолчанию, если `settings` не существует).
9. **Возврат значений**: Код возвращает подготовленные значения переменных.


Пример использования
-------------------------
.. code-block:: python

    # (Предполагается, что этот код находится в файле внутри директории проекта)
    from hypotez.src.goog.drive.header import set_project_root

    root_dir = set_project_root()
    print(f"Root directory: {root_dir}")