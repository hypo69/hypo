Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код реализует взаимодействие с моделью Google Generative AI (Gemini) для проекта Kazarinov. Он включает функции для обучения модели на наборах данных, обработки запросов и диалога. Класс `KazarinovAI` предоставляет методы для инициализации модели, обучения, обработки вопросов и проведения диалога. Функция `chat()` запускает сеанс диалога с пользователем.

Шаги выполнения
-------------------------
1. **Импортирование библиотек:** Код импортирует необходимые библиотеки, включая `time`, `json`, `random`, `typing`, `pathlib`, и пользовательские модули из проекта, такие как `gs`, `OpenAIModel`, `GoogleGenerativeAI`, `get_filenames`, `read_text_file`, `recursively_read_text_files`, `j_dumps`, `pprint`, и `logger`.  Эти импорты необходимы для работы функциональности, например, работы с файлами, API, и логированием.

2. **Определение констант и переменных:** Определяются константы, такие как `MODE`, пути к файлам и директориям (`base_path`, `system_instruction_list`), и другие переменные, например, `api_key` и `history_file`, которые хранят API ключ для Gemini, базовые пути к файлам инструкций и обучающих данных. Это позволяет гибко настраивать работу кода.

3. **Класс `KazarinovAI`:**  Этот класс отвечает за управление взаимодействием с моделью Gemini.
    - `__init__`: Инициализирует экземпляры модели `GoogleGenerativeAI` (gemini_1 и gemini_2) с заданным API ключом, системными инструкциями и файлом истории.
    - `train`: Обучает модель, разбивая данные на куски `chunk_size`, отправляя их модели поочередно, и обрабатывает ответы. Важно, что код разбивает текст на куски для отправки модели.
    - `question_answer`: Обрабатывает вопросы, считывая их из подготовленных файлов.
    - `dialog`: Проводит диалог, считывая вопросы из файлов и отправляя их модели,  при этом вопросы рандомизируются.
    - `ask`: Получает ответ от модели на заданный вопрос.

4. **Функция `chat()`:** Запускает сеанс диалога с пользователем.
    - Считывает список вопросов из файлов.
    - Просит пользователя вводить команды или вопросы.
    - Обрабатывает команды `--next` и `--q` для выбора вопросов из файла и выхода из сеанса.
    - Отправляет запросы пользователю в модель, обрабатывает полученный ответ и выводит его.

5. **Основной блок (`if __name__ == "__main__":`)**:
    - Считывает системные инструкции из файла.
    - Создаёт экземпляр класса `KazarinovAI`.
    - Вызывает метод `train()` для обучения модели.
    - (Необязательно) Вызывает метод `dialog()` для запуска диалога.


Пример использования
-------------------------
.. code-block:: python

    import gs
    from hypotez.src.endpoints.kazarinov.gemini_chat import KazarinovAI, chat

    # Предполагается, что переменные gs.path и т.д. уже инициализированы.
    k = KazarinovAI(system_instruction="...", generation_config={"response_mime_type": "text/plain"})
    k.train()
    chat()