Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот блок кода содержит функции для работы с CSV-файлами. Он предоставляет инструменты для сохранения данных в CSV-формате, чтения данных из CSV-файлов, конвертации CSV в JSON и чтения CSV как списка словарей или словаря.  Функции обрабатывают возможные ошибки, такие как отсутствие файла или некорректный формат данных, и логируют эти ошибки.

Шаги выполнения
-------------------------
1. **`save_csv_file(data, file_path, mode='a', exc_info=True)`:**
    - Проверяет, что входные данные `data` являются списком словарей.
    - Проверяет, что список `data` не пустой.
    - Создает директорию, если она не существует, для `file_path`.
    - Открывает CSV-файл в указанном режиме (`'a'` - добавление, `'w'` - перезапись).
    - Создает объект `csv.DictWriter` для записи данных.
    - Если файл открывается в режиме `'w'` или файла не существует, записывает заголовок.
    - Записывает данные в CSV-файл.
    - Возвращает `True` при успешной записи, `False` при ошибке.  Отлавливает исключения и логирует их.

2. **`read_csv_file(file_path, exc_info=True)`:**
    - Открывает CSV-файл для чтения.
    - Создает объект `csv.DictReader` для чтения данных.
    - Возвращает список словарей, полученных из файла, или `None`, если произошла ошибка.  Отлавливает исключения `FileNotFoundError` и другие исключения, логируя их.

3. **`read_csv_as_json(csv_file_path, json_file_path, exc_info=True)`:**
    - Читает CSV-файл с помощью функции `read_csv_file`.
    - Если чтение файла завершилось неудачно (возвращено `None`), возвращает `False`.
    - Конвертирует список словарей в JSON и сохраняет его в указанный JSON файл.
    - Возвращает `True` при успешной конвертации, `False` при ошибке. Отлавливает исключения и логирует их.

4. **`read_csv_as_dict(csv_file)`:**
    - Читает CSV-файл.
    - Возвращает словарь с данными из CSV в формате {'data': [строки]}.
    - Отлавливает исключения и логирует их. Возвращает `None` при ошибке.


5. **`read_csv_as_ns(file_path)`:**
    - Читает CSV-файл с помощью Pandas.
    - Возвращает список словарей, представляющих данные CSV.
    - Обрабатывает исключения `FileNotFoundError` и другие, возвращая пустой список в случае ошибки.

Пример использования
-------------------------
.. code-block:: python

    import os
    from pathlib import Path
    from hypotez.src.utils.csv import save_csv_file, read_csv_file, read_csv_as_json


    # Пример данных
    data = [
        {'name': 'John Doe', 'age': 30},
        {'name': 'Jane Doe', 'age': 25},
    ]

    # Сохранение в CSV
    file_path = Path("./data.csv")
    save_csv_file(data, file_path, mode='w') # Запись в новый файл

    # Чтение из CSV
    read_data = read_csv_file(file_path)

    if read_data:
        print(read_data)
        
    # Чтение csv как json
    json_file_path = Path("./data.json")
    success = read_csv_as_json(file_path, json_file_path)
    
    if success:
        print("Конвертация CSV в JSON успешна")


    #  Пример чтения с использованием Pandas:
    # from hypotez.src.utils.csv import read_csv_as_ns
    # csv_file_path = Path("./data.csv")
    # result = read_csv_as_ns(csv_file_path)
    # print(result)