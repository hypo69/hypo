Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код предоставляет класс `ReachSpreadsheet`, который позволяет взаимодействовать с Google Таблицами через API v4.  Класс предоставляет методы для создания, редактирования и обмена таблицами, а также для управления данными в них, включая форматирование ячеек, строк, столбцов, и слияние ячеек.  Он использует библиотеки `googleapiclient` и `oauth2client` для авторизации и взаимодействия с API.

Шаги выполнения
-------------------------
1. **Импортирование необходимых библиотек**: Код импортирует нужные библиотеки для работы с API Google Таблиц и вспомогательные функции.
2. **Определение констант**: Определяется константа `MODE`, которая может быть использована для настройки режима работы (например, для отладки).
3. **Определение класса `SpreadsheetError` и его дочерних классов**:  Определяются исключения для обработки ошибок, возникающих при взаимодействии с Google Таблицами.
4. **Инициализация класса `ReachSpreadsheet`**:
   - Создается объект `ReachSpreadsheet`, передавая в конструктор необязательный аргумент `debugMode`.  Этот аргумент включает режим отладки, если значение `True`.
   - При инициализации происходит попытка загрузки ключей доступа из временного файла `e-cat-346312-137284f4419e.json`. В случае ошибки, логгируется сообщение об ошибке и возвращается ошибка.
   - Создаются объекты `httpAuth` и `service` для авторизации и взаимодействия с API.
5. **Создание новой таблицы (`create`)**: Метод `create` позволяет создать новую таблицу с заданным названием, названием листа, количеством строк и столбцов, региональными настройками и часовым поясом.
   - Он принимает заголовок таблицы, заголовок листа, и параметры для настройки таблицы.
   - Метод выполняет запрос к API для создания таблицы и сохраняет id таблицы и листа в атрибутах класса.
6. **Обмен правами доступа (`share`)**: Метод `share` позволяет задать права доступа к таблице для определенных пользователей или групп.
   - Принимает JSON-объект с параметрами доступа.
7. **Обмен правами доступа по электронной почте (`shareWithEmailForReading`, `shareWithEmailForWriting`)**: Эти методы облегчают настройку доступа по электронной почте для чтения или записи.
8. **Обмен правами доступа для всех (`shareWithAnybodyForReading`, `shareWithAnybodyForWriting`)**: Эти методы позволяют настроить доступ для всех пользователей на чтение или запись.
9. **Получение ссылки на таблицу (`getSheetURL`)**: Возвращает ссылку на текущую таблицу в Google Таблицах.
10. **Установка таблицы по ID (`setSpreadsheetById`)**:  Метод устанавливает текущую таблицу по ее ID, устанавливая id листа как первый лист этой таблицы.
11. **Выполнение подготовленных запросов (`runPrepared`)**: Метод `runPrepared` выполняет все запросы, подготовленные методами `prepare_*`.
12. **Подготовка запросов для добавления листа (`prepare_addSheet`, `addSheet`)**:  Метод `addSheet` добавляет новый лист в текущую таблицу, настраивает его и возвращает его ID.
13. **Преобразование диапазона ячеек в формат GridRange (`toGridRange`)**: Метод преобразует строковое представление диапазона ячеек (например, "A1:B2") в словарь, описывающий этот диапазон в формате, понятном для API.
14. **Подготовка запросов для установки размера ячеек (`prepare_setDimensionPixelSize`, `prepare_setColumnsWidth`, `prepare_setColumnWidth`, `prepare_setRowsHeight`, `prepare_setRowHeight`)**:  Эти методы позволяют управлять размерами ячеек и столбцов, изменяя ширину и высоту ячеек.
15. **Подготовка запросов для установки значений в ячейки (`prepare_setValues`)**: Метод позволяет задавать значения в определенном диапазоне ячеек.
16. **Подготовка запросов для слияния ячеек (`prepare_mergeCells`)**: Метод позволяет слиять ячейки.
17. **Подготовка запросов для форматирования ячеек (`prepare_setCellStringFormatterormat`, `prepare_setCellStringFormatterormats`)**: Методы позволяют форматировать ячейки, включая шрифт, выравнивание, цвет фона и т.д.

Пример использования
-------------------------
.. code-block:: python

    import src.goog.spreadsheet as spreadsheet

    # Создаем объект класса Spreadsheet, возможно с debugMode = True для отладки
    ss = spreadsheet.ReachSpreadsheet(debugMode=True)

    # Создаем новую таблицу
    ss.create("Моя таблица", "Лист 1", rows=10, cols=5)

    # Добавляем данные в таблицу
    values = [
        ["Имя", "Возраст", "Город", "Страна", "Email"],
        ["Иван", "30", "Москва", "Россия", "ivan@example.com"],
        ["Мария", "25", "Санкт-Петербург", "Россия", "maria@example.com"],
    ]
    ss.prepare_setValues("A1:E3", values)

    # Выполняем подготовленные запросы
    ss.runPrepared()