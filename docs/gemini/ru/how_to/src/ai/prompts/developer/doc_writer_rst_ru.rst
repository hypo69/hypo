Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот промпт описывает формат документации для кода, используя reStructuredText (RST). Он детализирует, как писать комментарии для модулей, классов, функций, методов и исключений,  включая примеры и описание параметров/возвращаемых значений.  Он также предоставляет примеры оформления для каждого типа элемента.

Шаги выполнения
-------------------------
1. Определите, какой тип документации (модуль, класс, функция, метод или исключение) вы хотите документировать.
2. Следуйте шаблонам, описанным в примерах для каждого типа элемента.
3. Опишите назначение (модуль/класс/функция/метод), используя подробные и точные фразы.
4. Если применимо, укажите параметры, возвращаемые значения и возможные исключения.
5. Предоставьте примеры использования, используя код в `.. code-block:: python`.
6. Используйте правильный синтаксис RST, чтобы форматировать заголовки и другие элементы документации.

Пример использования
-------------------------
.. code-block:: python

    # Пример использования промпта для документации класса.
    class MyClass:
        """
        Описание класса MyClass.

        Атрибуты:
        ----------
        - `attribute1`: Описание атрибута.
        - `attribute2`: Описание атрибута 2.

        Методы:
        -------
        - `method1`: Описание метода method1.
        """

        def __init__(self, attr1, attr2):
            """
            Конструктор класса MyClass.

            Параметры:
            ----------
            - `attr1`: Описание параметра attr1.
            - `attr2`: Описание параметра attr2.

            Возвращаемое значение:
            ----------------------
            - Возвращает экземпляр класса MyClass.
            """
            self.attribute1 = attr1
            self.attribute2 = attr2

        def method1(self, param1):
            """
            Описание метода method1.

            Параметры:
            ----------
            - `param1`: Описание параметра param1.

            Возвращаемое значение:
            ----------------------
            - Возвращает результат выполнения метода.
            """
            # Вычисление результата с помощью param1.
            return param1 * 2


    # Пример использования класса:
    my_object = MyClass("значение1", "значение2")
    result = my_object.method1(5)
    print(result)