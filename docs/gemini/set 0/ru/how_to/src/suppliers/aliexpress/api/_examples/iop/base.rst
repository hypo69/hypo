Как использовать этот блок кода
=========================================================================================

Описание
-------------------------
Этот код представляет собой базовый класс для работы с API (Application Programming Interface) платформы. Он реализует логику создания, подписи и отправки запросов к API, а также обработки полученных ответов.  Код включает в себя методы для добавления параметров запроса, управления логированием ошибок, обработки различных типов ошибок и работы с файловыми параметрами. Он использует библиотеки `requests`, `hmac`, `hashlib` и др. для взаимодействия с API.

Шаги выполнения
-------------------------
1. **Инициализация клиента:** Создается экземпляр класса `IopClient`, передавая ему URL сервера, ключ приложения (`app_key`), секретный ключ (`app_secret`) и таймаут запроса.
2. **Создание запроса:** Создается экземпляр класса `IopRequest`, определяющий тип запроса (GET или POST) и параметры.  Для POST-запросов, можно добавить файлы с помощью `add_file_param`.
3. **Добавление параметров:**  Методы `add_api_param` и `add_file_param` добавляют параметры к запросу. Методы `set_simplify` и `set_format` устанавливают параметры упрощения и формата ответа.
4. **Подпись запроса:** Внутренне происходит формирование словаря параметров, сортировка по ключам, создание строки из параметров, вычисление подписи (sign) с использованием секретного ключа и метода SHA256.
5. **Формирование URL:** Строится полный URL запроса, включая все параметры.
6. **Отправка запроса:**  Отправляется запрос к API с использованием `requests.post` (или `requests.get`) с параметрами запроса и файлами (если есть).
7. **Обработка ответа:**  Обрабатывается ответ, извлекаются код состояния, тип, сообщение и id запроса.  Если код состояния не 0, регистрируется ошибка в лог.
8. **Возврат ответа:**  Возвращается объект `IopResponse`, содержащий результат запроса (тело ответа, код, сообщение и т.д.)

Пример использования
-------------------------
.. code-block:: python

    from hypotez.src.suppliers.aliexpress.api._examples.iop.base import IopClient, IopRequest, P_LOG_LEVEL_ERROR

    # URL сервера, ключ приложения, секретный ключ
    SERVER_URL = "YOUR_API_ENDPOINT"
    APP_KEY = "YOUR_APP_KEY"
    APP_SECRET = "YOUR_APP_SECRET"

    # Создание клиента
    client = IopClient(SERVER_URL, APP_KEY, APP_SECRET)

    # Создание запроса (POST)
    request = IopRequest("your_api_method", http_method="POST")

    # Добавление параметров
    request.add_api_param("param1", "value1")
    request.add_api_param("param2", 123)

    # Отправка запроса
    response = client.execute(request)

    # Обработка ответа
    if response.code == "0":
        print("Успешный ответ:", response.body)
    else:
        print("Ошибка:", response.code, response.message)