
<3D PLOT>:
=================
Сложность: 7
-----------------
Игра "3D PLOT" - это программа, которая строит трехмерные графики функции Z = F(X, Y). Пользователь вводит значения для X и Y, и программа вычисляет соответствующее значение Z, затем визуализирует точку в трехмерном пространстве.  Пользователь может задать границы для X и Y, а также шаг (приращение), с которым значения X и Y будут изменяться в цикле.
Правила игры:
1.  Пользователь вводит минимальное и максимальное значения для X, а также приращение (шаг) для X.
2.  Пользователь вводит минимальное и максимальное значения для Y, а также приращение (шаг) для Y.
3.  Программа вычисляет значение Z по формуле Z = X * X - Y * Y и отображает точку (X, Y, Z) в трехмерном пространстве.
4.  Программа перебирает все значения X и Y в заданных диапазонах с заданными шагами, вычисляя и выводя соответствующие значения Z.
5.  Программа завершается после того, как все точки будут построены.
-----------------
Алгоритм:
1.  Ввод: Запросить у пользователя минимальное значение X (Xmin), максимальное значение X (Xmax) и приращение X (Xincrement).
2.  Ввод: Запросить у пользователя минимальное значение Y (Ymin), максимальное значение Y (Ymax) и приращение Y (Yincrement).
3.  Цикл по X: Начать цикл, где X изменяется от Xmin до Xmax с шагом Xincrement.
   3.1. Цикл по Y: Начать вложенный цикл, где Y изменяется от Ymin до Ymax с шагом Yincrement.
        3.1.1 Вычисление Z: Вычислить Z как Z = X*X - Y*Y.
        3.1.2 Вывод: Вывести значения X, Y и Z.
   3.2. Конец цикла по Y.
4.  Конец цикла по X.
5.  Конец программы.
-----------------
Блок-схема:
```mermaid
flowchart TD
    Start["Начало"] --> InputXMin["Ввод: <code><b>Xmin</b></code>"]
    InputXMin --> InputXMax["Ввод: <code><b>Xmax</b></code>"]
    InputXMax --> InputXIncrement["Ввод: <code><b>Xincrement</b></code>"]
    InputXIncrement --> InputYMin["Ввод: <code><b>Ymin</b></code>"]
    InputYMin --> InputYMax["Ввод: <code><b>Ymax</b></code>"]
    InputYMax --> InputYIncrement["Ввод: <code><b>Yincrement</b></code>"]
    InputYIncrement --> LoopXStart{"Начало цикла по X: <code><b>X = Xmin, пока X <= Xmax</b></code>"}
    LoopXStart -- Да --> LoopYStart{"Начало цикла по Y: <code><b>Y = Ymin, пока Y <= Ymax</b></code>"}
    LoopYStart -- Да --> CalculateZ["<code><b>Z = X*X - Y*Y</b></code>"]
    CalculateZ --> OutputXYZ["Вывод: <code><b>X, Y, Z</b></code>"]
    OutputXYZ --> LoopYEnd{"Конец цикла по Y"}
    LoopYEnd -- Да --> LoopYStart
    LoopYEnd -- Нет --> LoopXEnd{"Конец цикла по X"}
    LoopXEnd -- Да --> LoopXStart
    LoopXEnd -- Нет --> End["Конец"]
```
Legenda:
    Start - Начало программы.
    InputXMin - Запрос у пользователя и ввод минимального значения для X (Xmin).
    InputXMax - Запрос у пользователя и ввод максимального значения для X (Xmax).
    InputXIncrement - Запрос у пользователя и ввод приращения для X (Xincrement).
    InputYMin - Запрос у пользователя и ввод минимального значения для Y (Ymin).
    InputYMax - Запрос у пользователя и ввод максимального значения для Y (Ymax).
    InputYIncrement - Запрос у пользователя и ввод приращения для Y (Yincrement).
    LoopXStart - Начало цикла по X, который продолжается пока X <= Xmax.
    LoopYStart - Начало вложенного цикла по Y, который продолжается пока Y <= Ymax.
    CalculateZ - Вычисление значения Z по формуле Z = X * X - Y * Y.
    OutputXYZ - Вывод значений X, Y и Z.
    LoopYEnd - Конец цикла по Y. Если цикл Y не завершен, возвращаемся к началу цикла LoopYStart.
    LoopXEnd - Конец цикла по X. Если цикл X не завершен, возвращаемся к началу цикла LoopXStart.
    End - Конец программы.
```
```python
__author__ = 'hypo69 (hypo69@davidka.net)'

# Ввод данных от пользователя
try:
    Xmin = float(input("Введите минимальное значение X: "))
    Xmax = float(input("Введите максимальное значение X: "))
    Xincrement = float(input("Введите приращение для X: "))
    
    Ymin = float(input("Введите минимальное значение Y: "))
    Ymax = float(input("Введите максимальное значение Y: "))
    Yincrement = float(input("Введите приращение для Y: "))
except ValueError:
    print("Ошибка: Пожалуйста, введите числовые значения.")
    exit()

# Внешний цикл по X
X = Xmin
while X <= Xmax:
    # Внутренний цикл по Y
    Y = Ymin
    while Y <= Ymax:
        # Вычисление Z по формуле Z = X*X - Y*Y
        Z = X * X - Y * Y
        # Вывод координат X, Y и значения Z
        print(f"X: {X}, Y: {Y}, Z: {Z}")
        # Увеличение Y на заданное приращение
        Y += Yincrement
    # Увеличение X на заданное приращение
    X += Xincrement
    
"""
Объяснение кода:
1.  **Блок ввода данных:**
   -  `try...except ValueError`: Этот блок обрабатывает исключения, которые могут возникнуть, если пользователь введет некорректные данные (например, не число).
   -  `Xmin = float(input("Введите минимальное значение X: "))`: Запрашивает минимальное значение для оси X и преобразует его в число с плавающей точкой.
   -  Аналогичные строки запрашивают и преобразуют значения для `Xmax`, `Xincrement`, `Ymin`, `Ymax` и `Yincrement`.
   -  `exit()`: Если возникает ошибка ввода, программа завершается.

2.  **Внешний цикл `while X <= Xmax:`**:
    -   Устанавливает начальное значение `X` равным `Xmin`.
    -   Цикл выполняется, пока значение `X` не превысит `Xmax`.
    -   `X` увеличивается на `Xincrement` в конце каждой итерации цикла.

3.  **Внутренний цикл `while Y <= Ymax:`**:
    -   Устанавливает начальное значение `Y` равным `Ymin` в начале каждой итерации внешнего цикла.
    -   Цикл выполняется, пока значение `Y` не превысит `Ymax`.
    -   `Y` увеличивается на `Yincrement` в конце каждой итерации внутреннего цикла.

4.  **Вычисление `Z`**:
   -   `Z = X * X - Y * Y`: Вычисляет значение `Z` по заданной формуле.

5.  **Вывод координат**:
   -   `print(f"X: {X}, Y: {Y}, Z: {Z}")`: Выводит значения `X`, `Y` и вычисленное `Z` для каждой точки.

6.  **Увеличение `X` и `Y`**:
    -  `Y += Yincrement`: Увеличивает значение `Y` на заданное приращение `Yincrement` в конце каждой итерации внутреннего цикла.
    - `X += Xincrement`: Увеличивает значение `X` на заданное приращение `Xincrement` в конце каждой итерации внешнего цикла.

Таким образом, программа строит трехмерный график функции Z = X^2 - Y^2, перебирая значения X и Y в заданных диапазонах с заданными приращениями и выводя координаты точек (X, Y, Z).
"""
```